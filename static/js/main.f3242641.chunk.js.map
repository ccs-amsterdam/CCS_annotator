{"version":3,"sources":["library/prepareDocumentBatch.js","apis/dexie.js","components/HeaderMenu/Reset.js","apis/storemanager.js","components/HeaderMenu/Persist.js","actions/index.js","apis/amcat.js","components/HeaderMenu/Login.js","components/HeaderMenu/HeaderMenu.js","components/CodingjobManager/subcomponents/DexieTable.js","components/CodingjobManager/subcomponents/DexieTableManager.js","components/CodingjobManager/1_CodingjobSelector.js","components/CodingjobManager/subcomponents/UploadForms.js","components/CodingjobManager/subcomponents/UploadDocuments.js","components/CodingjobManager/subcomponents/PaginationTable.js","components/CodingjobManager/subcomponents/DocumentTable.js","components/CodingjobManager/2_ManageDocuments.js","components/CodingjobManager/subcomponents/UnitSettings.js","library/sample.js","components/CodingjobManager/subcomponents/useUnits.js","library/selectTokens.js","library/standardizeUnits.js","components/CodingjobManager/subcomponents/Help.js","components/CodingjobManager/subcomponents/FullDataTable.js","components/CodingjobManager/subcomponents/SampleSettings.js","components/CodingjobManager/subcomponents/UnitLayoutSettings.js","components/CodingjobManager/3_ManageCodingUnits.js","library/codebookManagement.js","components/CodingjobManager/subcomponents/EditCodePopup.js","components/CodingjobManager/subcomponents/CodesEditor.js","components/CodingjobManager/subcomponents/VariableMenu.js","components/CodingjobManager/subcomponents/QuestionTaskSettings.js","components/CodingjobManager/subcomponents/AnnotateTaskSettings.js","components/CodingjobManager/subcomponents/TaskSettings.js","components/CodingjobManager/4_ManageTask.js","components/CodingjobManager/subcomponents/DeploySettings.js","components/CodingjobManager/subcomponents/FileDeploy.js","components/CodingjobManager/subcomponents/AmcatDeploy.js","components/CodingjobManager/subcomponents/DeployedJobs.js","components/CodingjobManager/5_DeployCodingjob.js","components/CodingjobManager/CodingjobManager.js","components/Annotator/JobServerClass.js","components/Annotator/Annotator.js","components/LocalJobs/LocalJobTable.js","components/LocalJobs/LocalJobs.js","App.js","reducers/index.js","index.js"],"names":["prepareDocumentBatch","documentList","existingUids","job_id","silent","ids","Set","duplicates","codes","preparedDocuments","reduce","result","document","document_id","doc_uid","hash","Date","has","add","preparedDoc","prepareDocument","tokens","length","push","message","alert","dbName","idbStores","codingjobs","documents","tasks","unitsets","codebooks","deployedJobs","localJobs","localAnnotations","AnnotationDB","this","idb","Dexie","version","stores","e","delete","table","offset","limit","columns","a","reverse","rows","count","n","extractColumns","where","anyOf","console","log","fields","query","key","any","regex","RegExp","replace","selection","toCollection","collection","each","row","field","id","test","codingjob","prop","get","cj","value","settings","equals","modify","primaryKeys","getCodingjobProp","importedCodes","updateImportedCodes","bulkAdd","documentIds","map","bulkDelete","ndocs","toArray","title","url","created","codingjobPackage","last_modified","unit_id","annotations","status","put","window","location","reload","addCodes","Object","keys","obj","codesArray","standardizeCodes","Array","from","code","frozen","some","c","data","values","col","name","f","db","Reset","useState","open","setOpen","history","useHistory","onClick","deleteDB","Modal","closeIcon","trigger","Menu","Item","icon","style","color","onClose","onOpen","Header","content","Content","Actions","Button","Icon","persist","navigator","storage","undefined","isStoragePersisted","persisted","Persist","setPersisted","useEffect","then","blockEvents","block","type","getToken","host","email","password","Axios","auth","username","response","token","newAmcatSession","Amcat","api","create","baseURL","headers","Authorization","res","i","path","post","units","codebook","provenance","rules","annotation","LoginForm","cookies","setCookies","setLoggedIn","amcat","setLogout","JSON","stringify","setLogin","checkToken","amcatconn","SignOut","Grid","textAlign","Column","secondary","SignIn","setHost","setEmail","setPassword","invalidPassword","setInvalidPassword","passwordLogin","emailError","match","Segment","placeholder","attached","stackable","Row","Form","Input","label","onChange","d","iconPosition","autoFocus","error","Divider","verticalAlign","circular","primary","fluid","width","height","vertical","disabled","Login","force","dispatch","useDispatch","useCookies","loggedIn","Popup","hoverable","flowing","on","mouseLeaveDelay","withRouter","items","children","useLocation","menuItems","item","index","menu","as","Link","to","header","active","pathname","Sidebar","Pushable","inverted","animation","visible","direction","size","position","Pusher","fetchFromDb","pageSize","setPages","setData","setSelectedRow","allColumns","setUseColumns","search","getTableN","Math","ceil","newdata","useColumns","getTableBatch","getTableFromIds","slice","addBatchColumns","colnames","cname","includes","QueryTable","React","memo","searchOn","setSearch","text","setText","searchStatus","setSearchStatus","timer","setTimeout","searchSelection","clearTimeout","loading","textSearch","DexieTable","idColumn","setSelected","searchColumn","tableUpdated","useLiveQuery","pages","selectedRow","createRowCells","rowObj","column","hide","toISOString","Table","Cell","pageChange","event","activePage","Container","overflow","unstackable","selectable","fixed","compact","singleLine","fontSize","HeaderCell","Body","isSelected","createBodyRows","Footer","colSpan","filter","Pagination","floated","boundaryRange","siblingRange","ellipsisItem","firstItem","lastItem","prevItem","nextItem","pointing","defaultActivePage","totalPages","onPageChange","DexieTableManager","itemLabel","onCreate","onDelete","setItem","centered","background","border","Group","widths","marginTop","CreateItem","setStatus","itemName","setItemName","onSubmit","preventDefault","trim","required","Dimmer","Loader","DeleteItem","tableColumns","CodingjobSelector","setSelectedCodingjob","docs","UploadTextsCsv","multiple","defaults","text_fields","meta_fields","keepOriginal","renderTextForms","options","setFields","renderForm","UploadTokensCsv","sentence","paragraph","int","end","section","renderTokenForms","UploadCsv","fileRef","useRef","ref","nodrag","onFileLoad","addRemoveButton","onRemoveFile","SubmitForm","setOptions","setLoading","colname","newfields","def","csvToJson","fieldIndices","subfield","findIndex","k","datarow","original","fieldindex","v","parseInt","uploadData","preparedData","tokensToDocumentList","createDocuments","setCodingjobProp","current","removeFile","Field","control","allDone","Dropdown","clearable","minWidth","PreviewTable","cell","createHeader","createRows","align","UploadDocuments","activeItem","setActiveItem","tabular","renderSwitch","PaginationTable","createHeaderRow","addTextColumns","newRowObj","find","tf","pre","setColumns","getJobDocumentCount","getJobDocuments","getColumns","newcolumns","s","DocumentTable","ManageDocuments","paddingLeft","defaultUnitSettings","textUnit","unitSelection","contextUnit","contextWindow","totalUnits","seed","ordered","balanceDocuments","balanceAnnotations","validCodes","highlightAnnotation","annotationMix","onlyUnused","layout","meta","UnitSettings","unitSettings","setUnitSettings","us","float","paddingTop","CodingUnitForm","radioButton","annotated","jump","checked","Radio","marginLeft","grouped","fontWeight","annotationDropdown","ContextUnitForm","setContextWindow","ContextWindow","padding","min","Number","labelPosition","drawRandom","array","group","random","seedrandom","indices","ns","splitIndex","getRandomSubarray","distributeN","out","j","floor","arr","temp","shuffled","groupOb","fill","full","remain","remainIndices","select","getUnitData","setUnitData","getUnitDataFromDB","unitData","isNaN","getSample","setSample","invalidCodesLookup","vc","valid","u","annotationValue","nDiff","max","stratum","sample","sampleN","randomUnits","getRandomUnits","all","concat","orderUnits","getAllUnits","getDocuments","maxIndex","Infinity","annotatedUnits","allUnits","docIndex","unitIndices","annotationValues","getAnnotations","paragraphs","parIndex","sentences","sentIndex","unitIndex","textFields","getTextFields","metaFields","getMetaFields","ann","annItem","variables","span","variable","unit","randomUnitIndex","cjIndices","sort","b","useUnits","state","selectTokens","newTokens","tokenRange","tokenContext","getTokenRange","getContextRange","codingUnit","startValue","endValue","range","start","standardizeUnits","standardizedUnits","jobhash","getDocument","firstUnitIndex","indexOf","lastUnitIndex","lastIndexOf","fromChar","toChar","docAnnotations","exportSpanAnnotations","importedAnnotations","unit_index","unparseTokens","mf","date","unit_start","unit_end","unit_started","unit_ended","text_field","Help","texts","wide","transform","paddingRight","paddingBottom","FullDataTable","fullData","SampleSettings","SampleForm","delayed","setDelayed","pct","setPct","round","toFixed","setWithoutDelay","step","valueN","Checkbox","toggle","validCodesColumns","SelectValidCodes","isAnnotation","setValidCodes","useCallback","newValidCodes","valueMap","real","N","dataWithCheckbox","USE","ONLY","marginBottom","defaultLayout","l","toUpperCase","replaceAll","bold","italic","justify","FieldSettingsTable","update","which","newLayout","visibleField","labelField","boldField","italicField","justifyField","paragraphsField","sizeField","nr","rowSpan","structured","UnitLayoutSettings","textField","metaField","overflowX","ManageCodingUnits","loadingUnits","celled","stretched","maxHeight","PreviewDocument","setUnitIndex","standardizedUnit","setStandardizedUnit","singleItemArray","previewItem","setIndex","getCodebook","taskSettings","enabled","singleCode","questions","q","question","textToCodes","root","codeMap","parent","updatedCodes","parentLevel","lines","split","line","spaces","newCode","flag","newCodeObj","findParent","folded","irrelevantString","makes_irrelevant","standardizeColor","pspaces","str","ctx","createElement","getContext","fillStyle","movePosition","setCodes","codeParent","newCodes","AddCodePopup","alreadyExists","setAlreadyExists","textInput","setTextInput","addCode","margin","TextArea","join","RmCodePopup","rmCode","keepChildren","ucode","getAllChildren","ButtonGroup","MoveCodePopup","newParent","setNewParent","parentOptions","getAllParentOptions","mvCode","codeIsNew","inline","selectOnNavigation","minCharacters","autoComplete","child","EditCodePopup","toggleActiveCode","setChangeColor","canAdd","popupContent","setPopupContent","buttonStyle","borderRadius","minHeight","changeColorPopup","onInput","target","addCodePopup","rmCodePopup","moveCodePopup","changePosition","activeParent","branchingDropdown","onChangeBranching","makesIrrelevantOptions","makes_irrelevant_values","mi","required_for_values","required_for","rf","validValues","o","renderLabel","renderMakesIrrelevantLabel","Label","boxShadow","PlainTextEditor","codeTreeArray","cta","indentSpaces","paramOffset","txt","level","addSpace","ctaToText","maxWidth","fontFamily","positive","changeCodeColor","selectedCode","toggleFoldCode","CodesEditor","setCodeMap","setCodeTreeArray","changeColor","cm","codeBookEdgesToMap","getCodeTreeArray","formatCode","updateCode","nc","className","hidden","marginRight","foldToParent","borderRight","borderTop","totalChildren","cursor","totalActiveChildren","ChangeName","setVariables","delayedName","setDelayedName","oldname","uniqueName","processNameChange","setNewName","onFocus","onBlur","DeleteButton","deleteOpen","setDeleteOpen","zIndex","newVariables","MoveButtons","onMove","stopPropagation","newName","uniqueNewName","existingNames","newname","VariableMenu","newVariableDefaults","bottom","Accordion","Title","questionDefaultSettings","QuestionForm","setTaskSettings","questionIndex","questionForm","setQuestionForm","newTaskSettings","newValue","QuestionFormSettings","warn","setWarn","newWarn","AnnotinderEditor","left","up","right","swipes","setSwipes","firstTime","swipe","directions","getSwipeCode","onSelect","selected","newcode","QuestionTaskSettings","setQuestionIndex","variableDefaultSettings","instruction","buttonMode","onlyEdit","searchBox","GlobalAnnotateSettings","globalSettings","annotate","editAll","AnnotateForm","variableIndex","annotateForm","setAnnotateForm","editMode","display","InstructionInputField","setInstruction","AnnotateTaskSettings","setVariableIndex","defaultTaskSettings","TaskSettings","ts","TypeForm","ManageTask","cwidths","PreviewTask","setCodebook","singleUnitArray","previewUnit","jobServer","postAnnotations","progress","seek_backwards","seek_forwards","PreviewQuestionTask","renderTaskPreview","justifyContent","PreviewAnnotateTask","useSelector","eventsBlocked","defaultDeploySettings","medium","nCoders","pctOverlap","DeployForm","deploySettings","setDeploySettings","fileSettings","CoderDistribution","overlapSet","avgPerCoder","DeploySettings","createCoderSets","set","nOverlap","unitSet","unitSets","FileDeploy","setTitle","onDownload","cjSets","zip","JSZip","file","fname","generateAsync","saveAs","maxLength","AmcatDeploy","setName","setCookie","deploy","postCodingjob","createDeployedJob","dtColumns","rtColumns","ResultsTable","jobKey","setAnnotations","getResultUrl","getCodingjob","userAnnotations","coder","user","DeployedJobs","setJobKey","container","qrUrl","href","encodeURI","linkAndQr","createCodingjobPackage","setCodingjobPackage","includeDocuments","sunits","su","cjpackage","ruleset","DeployCodingjob","deployButton","viewDeployed","CodingjobManager","menuItem","setMenuItem","selectedCodingjob","ROW_ID","catch","nDocuments","Step","description","completed","JobServerRemote","getProgress","success","getNext","n_coded","getUnit","postAnnotation","JobServerLocal","coderName","job","n_total","getUnitAnnotations","createRemoteJobServer","setJobServer","setLoginScreen","URL","origin","init","createLocalJobServer","parseQueryString","substring","part","decodeURIComponent","LocalJobTable","getExtension","filename","parts","LocalJobs","uploadFile","fileReader","FileReader","fileblob","files","readAsText","onload","objectHash","createLocalJob","parse","newZip","loadAsync","zipped","forEach","relpath","async","setJobUrlQuery","accept","Component","loginScreen","queries","App","basename","exact","render","rootReducer","combineReducers","action","fullScreenNode","node","store","createStore","ReactDOM","StrictMode","CookiesProvider","querySelector"],"mappings":"sYAWaA,EAAuB,SAClCC,GAII,IAHJC,EAGG,uDAHY,GACfC,EAEG,uDAFM,OACTC,IACG,yDACCC,EAAM,IAAIC,IAAIJ,GAEdK,EAAa,EACbC,EAAQ,GAENC,EAAoBR,EAAaS,QAAO,SAACC,EAAQC,GACrD,GAA4B,MAAxBA,EAASC,YAAqB,OAAOF,EACzC,IAAMG,EAAUC,IAAK,CAACH,EAAUT,EAAQ,IAAIa,OAC5C,GAAKX,EAAIY,IAAIH,GAYXP,QAZqB,CACrBF,EAAIa,IAAIJ,GAER,IAAMK,EAAcC,0BAAgBR,EAAUJ,GAC9C,GAAkC,IAA9BW,EAAYE,OAAOC,OAAc,OAAOX,EAE5CA,EAAOY,KAAP,aACET,QAASA,EACTX,OAAQA,GACLgB,IAKP,OAAOR,IACN,IAEH,IAAKP,EAAQ,CACX,IAAIoB,EAAO,kBAAcf,EAAkBa,OAAhC,mBACPf,EAAa,IAAGiB,GAAiB,mBAAejB,EAAf,gBACrCkB,MAAMD,GAGR,MAAO,CAACf,EAAmBD,IC5CvBkB,EAAS,kBACTC,EAAY,CAChBC,WAAY,aACZC,UAAW,kBACXC,MAAO,kCAEPC,SAAU,aACVC,UAAW,aAEXC,aAAc,mBACdC,UAAW,iCACXC,iBAAkB,oBAGdC,E,WACJ,aAAe,oBACbC,KAAKC,IAAM,IAAIC,UAAMb,GAKrB,IACEW,KAAKC,IAAIE,QAAQ,GAAGC,OAAOd,GAC3B,MAAOe,GAGPL,KAAKC,IAAIK,SACTN,KAAKC,IAAM,IAAIC,UAAMb,GACrBW,KAAKC,IAAIE,QAAQ,GAAGC,OAAOd,I,wFAK/B,WAAoBiB,EAAOC,EAAQC,EAAOC,GAA1C,+BAAAC,EAAA,yDAAmDC,EAAnD,kCACiB,OAAXJ,GAAmBA,EAAS,GADlC,yCAC4C,MAD5C,uBAEmBR,KAAKC,IAAIM,MAAMA,GAFlC,cAEMM,EAFN,gBAGkBA,EAAKC,QAHvB,UAGQC,EAHR,OAIMH,IAASC,EAAOA,EAAKD,aACV,OAAXJ,GAAmBA,EAASO,EAAI,GALtC,0CAKgD,MALhD,eAMgB,OAAVN,IAAgBI,EAAOA,EAAKL,OAAOA,GAAQC,MAAMA,IANvD,UAQeO,EAAeH,EAAMH,GARpC,0F,iIAUA,WAAsBH,EAAOvC,EAAK0C,GAAlC,6BAAAC,EAAA,yDAA2CC,EAA3C,gCACqB,IAAf5C,EAAIiB,OADV,yCAC+B,IAD/B,cAEM4B,EAAOb,KAAKC,IAAIM,MAAMA,GAAOU,MAAM,MAAMC,MAAMlD,GAC/C4C,IAASC,EAAOA,EAAKD,WAH3B,SAKeI,EAAeH,EAAMH,GALpC,wF,yHAOA,WAAgBH,GAAhB,eAAAI,EAAA,6DACEQ,QAAQC,IAAIb,GADd,SAEmBP,KAAKC,IAAIM,MAAMA,GAFlC,cAEMM,EAFN,yBAGSA,EAAKC,SAHd,gD,0HAKA,WAAqBP,EAAOvC,GAA5B,SAAA2C,EAAA,yDACqB,IAAf3C,EAAIiB,OADV,yCAC+B,IAD/B,uBAEQe,KAAKC,IAAIM,MAAMA,GAAOU,MAAM,MAAMC,MAAMlD,GAAKsC,SAFrD,gD,wHAIA,WAAiBC,EAAOc,EAAQC,EAAOC,EAAKC,GAA5C,qBAAAb,EAAA,6DAKMc,EAAQ,KACE,KAAVH,IAAcG,EAAQ,IAAIC,OAAOJ,EAAMK,QAAQ,wBAAyB,UAN9E,SAQmB3B,KAAKC,IAAIM,MAAMA,GARlC,UAQMM,EARN,OAUMe,EAAY,GACQ,MAAPJ,EAXnB,iCAWuCX,EAAKgB,eAX5C,4DAWmEhB,EAAKI,MAAMM,GAAKL,MAAMM,GAXzF,mCAWMM,EAXN,eAYQA,EAAWC,MAAK,SAACC,GAAS,IAAD,gBACXX,GADW,IAC7B,2BAA0B,CAAC,IAAlBY,EAAiB,QACxB,GAAc,OAAVR,EAEF,YADAG,EAAU1C,KAAK8C,EAAIE,IAGrB,GAAIT,EAAMU,KAAKH,EAAIC,IAEjB,YADAL,EAAU1C,KAAK8C,EAAIE,KAPM,kCAZjC,iCAwBSN,GAxBT,iD,oIA2BA,WAAuBQ,EAAWC,GAAlC,iBAAA1B,EAAA,6DACQuB,EAA0B,kBAAdE,EAAyBA,EAAUF,GAAKE,EAD5D,SAEiBpC,KAAKC,IAAIV,WAAW+C,IAAIJ,GAFzC,cAEMK,EAFN,yBAGSA,EAAGF,IAHZ,gD,8HAKA,WAAuBD,EAAWC,EAAMG,GAAxC,iBAAA7B,EAAA,6DACQuB,EAA0B,kBAAdE,EAAyBA,EAAUF,GAAKE,EAD5D,SAEiBpC,KAAKC,IAAIV,WAAW+C,IAAIJ,GAFzC,cAGqB,OADfK,EAFN,QAGSE,WAAkBF,EAAGE,SAAW,IAHzC,kBAISzC,KAAKC,IAAIV,WACb0B,MAAM,MACNyB,OAAOR,GACPS,OAHI,eAGMN,EAAOG,KAPtB,gD,+HAWA,WAAsBJ,EAAWxE,GAAjC,yCAAA+C,EAAA,6DAA+C5C,EAA/C,gCACQmE,EAA0B,kBAAdE,EAAyBA,EAAUF,GAAKE,EAD5D,KAEgBnE,IAFhB,SAE0B+B,KAAKC,IAAIT,UAAUyB,MAAM,UAAUyB,OAAOR,GAAIU,cAFxE,0BAEM5E,EAFN,iBAIqCL,EAAqBC,EAAcI,EAAKkE,EAAInE,GAJjF,mBAISK,EAJT,KAI4BD,EAJ5B,eAM4B6B,KAAK6C,iBAAiBT,EAAW,iBAN7D,eAMMU,EANN,OAOEA,EAAgBC,EAAoBX,EAAWU,EAAe3E,GAE9D6B,KAAKC,IAAIV,WAAW0B,MAAM,MAAMyB,OAAOR,GAAIS,OAAO,CAAEG,kBATtD,kBAUS9C,KAAKC,IAAIT,UAAUwD,QAAQ5E,IAVpC,iD,6HAaA,WAAsBoB,GAAtB,eAAAmB,EAAA,6DACQsC,EAAczD,EAAU0D,KAAI,SAAC3E,GAAD,OAAcA,EAASE,WAD3D,kBAESuB,KAAKC,IAAIT,UAAU2D,WAAWF,IAFvC,gD,2HAKA,WAAsBb,EAAW5B,EAAQC,GAAzC,mBAAAE,EAAA,yDACQuB,EAA0B,kBAAdE,EAAyBA,EAAUF,GAAKE,IAE3C,OAAX5B,GAAmBA,EAAS,GAHlC,yCAG4C,MAH5C,uBAIwBR,KAAKC,IAAIT,UAAUyB,MAAM,UAAUyB,OAAOR,GAJlE,cAIM1C,EAJN,gBAKsBA,EAAUsB,QALhC,UAKQsC,EALR,SAMiB,OAAX5C,GAAmBA,EAAS4C,EAAQ,GAN1C,0CAMoD,MANpD,eAOgB,OAAV3C,IAAgBjB,EAAYA,EAAUgB,OAAOA,GAAQC,MAAMA,IAPjE,kBAQSjB,EAAU6D,WARnB,iD,mIAWA,WAA0BjB,GAA1B,eAAAzB,EAAA,6DACQuB,EAA0B,kBAAdE,EAAyBA,EAAUF,GAAKE,EAD5D,kBAESpC,KAAKC,IAAIT,UAAUyB,MAAM,UAAUyB,OAAOR,GAAIpB,SAFvD,gD,wHAKA,WAAmBsB,GAAnB,eAAAzB,EAAA,6DACQuB,EAA0B,kBAAdE,EAAyBA,EAAUF,GAAKE,EAD5D,kBAESpC,KAAKC,IAAIT,UAAUyB,MAAM,UAAUyB,OAAOR,IAFnD,gD,uHAKA,WAAkBzD,GAAlB,SAAAkC,EAAA,+EACSX,KAAKC,IAAIT,UAAU8C,IAAI7D,IADhC,gD,6HAKA,WAAwB6E,EAAOC,GAA/B,SAAA5C,EAAA,sEACuBX,KAAKC,IAAIL,aAAa0C,IAAI,CAAEiB,QADnD,cAUIvD,KAAKC,IAAIL,aAAa0C,IAAI,CAAEiB,QAAOZ,OAAO,CAAEa,QAAS,IAAI7E,OANzDqB,KAAKC,IAAIL,aAAaf,IAAI,CACxByE,QACAC,MACAC,QAAS,IAAI7E,OAPnB,gD,4HAeA,WAAqB8E,EAAkBvB,GAAvC,SAAAvB,EAAA,sEACuBX,KAAKC,IAAIJ,UAAUyC,IAAI,CAAEJ,OADhD,cAUI9C,MAAM,4CANNY,KAAKC,IAAIJ,UAAUhB,IAAnB,2BACK4E,GADL,IAEEvB,KACAwB,cAAe,IAAI/E,QAPzB,gD,gIAeA,WAAyBb,EAAQ6F,GAAjC,SAAAhD,EAAA,+EACSX,KAAKC,IAAIH,iBAAiBwC,IAAI,CAAEJ,GAAIpE,EAAQ6F,aADrD,gD,+HAGA,WAAwB7F,GAAxB,SAAA6C,EAAA,+EACSX,KAAKC,IAAIH,iBAAiBmB,MAAM,MAAMyB,OAAO5E,GAAQuF,WAD9D,gD,2HAGA,WAAsBvF,EAAQ6F,EAASC,EAAaC,GAApD,SAAAlD,EAAA,+EACSX,KAAKC,IAAIH,iBAAiBgE,IAAI,CAAEH,UAASzB,GAAIpE,EAAQ8F,cAAaC,UAAU,CACjF/F,EACA6F,KAHJ,gD,0HAQA,sBAAAhD,EAAA,sEACQX,KAAKC,IAAIK,SADjB,OAEEN,KAAKC,IAAM,IAAIC,UAAMb,GACrBW,KAAKC,IAAIE,QAAQ,GAAGC,OAAOd,GAC3ByE,OAAOC,SAASC,QAAO,GAJzB,gD,6DAQIlB,EAAsB,SAACX,EAAWU,EAAe3E,GACrD,IAAM+F,EAAWC,OAAOC,KAAKjG,GAAOE,QAAO,SAACgG,EAAK9C,GAC/C,IAAM+C,EAAaC,2BAAiBC,MAAMC,KAAKtG,EAAMoD,KAErD,OADA8C,EAAI9C,GAAO+C,EAAWpB,KAAI,SAACwB,GAAD,mBAAC,eAAeA,GAAhB,IAAsBC,QAAQ,OACjDN,IACN,IAEH,IAAKvB,EAAe,OAAOoB,EAE3B,cAAgBC,OAAOC,KAAKF,GAA5B,eAAuC,CAAlC,IAAI3C,EAAG,KACV,GAAKuB,EAAcvB,GAEZ,CAAC,IAAD,gBACY2C,EAAS3C,IADrB,yBACImD,EADJ,QAEE5B,EAAcvB,GAAKqD,MAAK,SAACC,GAAD,OAAOA,EAAEH,OAASA,EAAKA,SAClD5B,EAAcvB,GAAKrC,KAAKwF,IAF5B,2BAAiC,IAD5B,oCADL5B,EAAcvB,GAAO2C,EAAS3C,GASlC,OAAOuB,GAGH9B,EAAc,uCAAG,WAAOH,EAAMH,GAAb,eAAAC,EAAA,6DACfmE,EAAO,GADQ,SAEfjE,EAAKkB,MAAK,SAACC,GACf,IADuB,EACjB+C,EAAS,GADQ,cAEPrE,GAFO,IAEvB,2BAAyB,CAAC,IAAjBsE,EAAgB,QACvBD,EAAOC,EAAIC,MAAQD,EAAIE,EAAIF,EAAIE,EAAElD,GAAOA,EAAIgD,EAAIC,OAH3B,8BAKvBH,EAAK5F,KAAK6F,MAPS,gCASdD,GATc,2CAAH,wDAaLK,EADJ,IAAIpF,E,OC1LAqF,EA9CD,WACZ,MAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACMC,EAAUC,cAEVC,EAAO,uCAAG,sBAAA/E,EAAA,+EAENwE,EAAGQ,WAFG,OAGZJ,GAAQ,GACRC,EAAQtG,KAAK,KAJD,gDAMZiC,QAAQC,IAAR,MANY,yDAAH,qDAUb,OACE,eAACwE,EAAA,EAAD,CACEC,WAAS,EACTP,KAAMA,EACNQ,QAAS,cAACC,EAAA,EAAKC,KAAN,CAAWC,KAAK,SAAShB,KAAK,QAAQiB,MAAO,CAAEC,MAAO,aAC/DC,QAAS,kBAAMb,GAAQ,IACvBc,OAAQ,kBAAMd,GAAQ,IALxB,UAOE,cAACe,EAAA,EAAD,CAAQL,KAAK,YAAYM,QAAQ,6BACjC,cAACX,EAAA,EAAMY,QAAP,UACE,8KAKF,eAACZ,EAAA,EAAMa,QAAP,WACE,eAACC,EAAA,EAAD,CACEP,MAAM,MACNT,QAAS,WACPH,GAAQ,IAHZ,UAME,cAACoB,EAAA,EAAD,CAAM1B,KAAK,WANb,SAQA,eAACyB,EAAA,EAAD,CAAQP,MAAM,QAAQT,QAASA,EAA/B,UACE,cAACiB,EAAA,EAAD,CAAM1B,KAAK,cADb,iBCLD,SAAe2B,IAAtB,+B,4CAAO,sBAAAjG,EAAA,sEACSkG,UAAUC,QADnB,iDAC+BD,UAAUC,QAAQF,QADjD,qCAEDC,UAAUC,QAAQF,UAFjB,iCAGDG,EAHC,oF,sBAMA,SAAeC,IAAtB,+B,4CAAO,sBAAArG,EAAA,sEACSkG,UAAUC,QADnB,iDAC+BD,UAAUC,QAAQG,UADjD,qCAEDJ,UAAUC,QAAQG,YAFjB,iCAGDF,EAHC,oF,sBCxCP,IAsDeG,EAtDC,WACd,MAAwB7B,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAkCF,oBAAS,GAA3C,mBAAO4B,EAAP,KAAkBE,EAAlB,KAEAC,qBAAU,WACHH,GACHD,IAAqBK,KAAKF,KAE3B,CAACF,IAEJ,IAAMvB,EAAO,uCAAG,sBAAA/E,EAAA,sEACRiG,IADQ,uBAEYI,IAFZ,eAIZG,GAAa,GACb/H,MAAM,oDAENA,MAAM,yCAPM,2CAAH,qDAWb,OAAI6H,EAAkB,KAGpB,eAACrB,EAAA,EAAD,CACEC,WAAS,EACTP,KAAMA,EACNQ,QAAS,cAACC,EAAA,EAAKC,KAAN,CAAWC,KAAK,WAAWhB,KAAK,oBAAoBiB,MAAO,CAAEC,MAAO,aAC7EC,QAAS,kBAAMb,GAAQ,IACvBc,OAAQ,kBAAMd,GAAQ,IALxB,UAOE,cAACe,EAAA,EAAD,CAAQL,KAAK,WAAWM,QAAQ,6BAChC,eAACX,EAAA,EAAMY,QAAP,WACE,yUAMA,uQAMF,cAACZ,EAAA,EAAMa,QAAP,UACE,eAACC,EAAA,EAAD,CAAQhB,QAASA,EAAjB,UACE,cAACiB,EAAA,EAAD,CAAM1B,KAAK,cADb,gB,sDClDKqC,EAAc,SAACC,GAC1B,MAAO,CACLC,KAAM,eACND,U,0BCDG,SAAeE,EAAtB,uC,8CAAO,WAAwBC,EAAMC,EAAOC,GAArC,eAAAjH,EAAA,sEACkBkH,IAAMvF,IAAN,UAAaoF,EAAb,UAA2B,CAChDI,KAAM,CAAEC,SAAUJ,EAAOC,SAAUA,KAFhC,cACCI,EADD,yBAIEA,EAASlD,KAAKmD,OAJhB,4C,sBAcQ,SAASC,GAAgBR,EAAMO,GAC5C,OAAO,IAAIE,GAAMT,EAAMO,G,IAGnBE,G,WACJ,WAAYT,EAAMO,GAAQ,oBACxBjI,KAAK0H,KAAOA,EACZ1H,KAAKiI,MAAQA,EACbjI,KAAKoI,IAAMP,IAAMQ,OAAO,CACtBC,QAASZ,EACTa,QAAS,CAAEC,cAAc,UAAD,OAAYP,M,mFAKxC,4BAAAtH,EAAA,sEACoBX,KAAKoI,IAAI9F,IAAI,UADjC,cACQmG,EADR,yBAESA,EAAI3D,MAFb,gD,sHAIA,WAAkBhH,GAAlB,eAAA6C,EAAA,sEACoBX,KAAKoI,IAAI9F,IAAT,qBAA2BxE,EAA3B,cADpB,cACQ2K,EADR,yBAESA,EAAI3D,MAFb,gD,uHAIA,WAAkBhH,GAAlB,eAAA6C,EAAA,6DACEQ,QAAQC,IAAI,QADd,SAEoBpB,KAAKoI,IAAI9F,IAAT,qBAA2BxE,EAA3B,cAFpB,cAEQ2K,EAFR,OAGEtH,QAAQC,IAAIqH,GAHd,kBAISA,EAAI3D,MAJb,gD,mHAMA,WAAchH,EAAQ4K,GAAtB,iBAAA/H,EAAA,6DACMgI,EADN,qBAC2B7K,EAD3B,SAEY,OAAN4K,IAAYC,GAAI,iBAAcD,IAFpC,SAGoB1I,KAAKoI,IAAI9F,IAAIqG,GAHjC,cAGQF,EAHR,yBAISA,EAAI3D,MAJb,gD,0HAMA,WAAmBhH,GAAnB,eAAA6C,EAAA,sEACoBX,KAAKoI,IAAI9F,IAAT,qBAA2BxE,IAD/C,cACQ2K,EADR,yBAESA,EAAI3D,MAFb,gD,kFAMA,SAAcrB,EAAkBH,GAG9B,OAFAG,EAAiBH,MAAQA,EAElBtD,KAAKoI,IAAIQ,KAAT,aAA4B,CACjCtF,MAAOA,EACPuF,MAAOpF,EAAiBoF,MACxBC,SAAUrF,EAAiBqF,SAC3BC,WAAYtF,EAAiBsF,WAC7BC,MAAOvF,EAAiBuF,U,4BAG5B,SAAelL,EAAQ6F,EAASsF,EAAYpF,GAC1C,IAAMiB,EAAO,CAAEmE,aAAYpF,UAC3B7D,KAAKoI,IAAIQ,KAAT,qBAA4B9K,EAA5B,iBAA2C6F,EAA3C,eAAiEmB,O,KCfxDoE,GAAY,SAAC,GAAgE,IAA9DC,EAA6D,EAA7DA,QAASC,EAAoD,EAApDA,WAAYC,EAAwC,EAAxCA,YAAa9D,EAA2B,EAA3BA,QAA2B,IAAlBmC,YAAkB,MAAX,KAAW,EACjF4B,EAAQH,EAAQG,OAAS,CAC7B5B,KAAM,wBACNC,MAAO,gBACPM,MAAO,MAGLP,IAAM4B,EAAM5B,KAAOA,GAYvB,OAAI4B,EAAMrB,MAAc,cAAC,GAAD,CAASqB,MAAOA,EAAOC,UAL7B,WAChBH,EAAW,QAASI,KAAKC,UAAL,2BAAoBH,GAApB,IAA2BrB,MAAO,QAAS,CAAEU,KAAM,MACvEU,GAAY,MAIP,cAAC,GAAD,CAAQ9D,QAASA,EAAS+D,MAAOA,EAAOI,SAX9B,SAAClH,GAChB4G,EAAW,QAASI,KAAKC,UAAUjH,GAAQ,CAAEmG,KAAM,MACnDU,GAAY,GACZ9D,GAAQ,OAWNoE,GAAU,uCAAG,WAAOL,EAAOF,EAAYC,GAA1B,eAAA1I,EAAA,6DACXiJ,EAAY1B,GAAe,OAACoB,QAAD,IAACA,OAAD,EAACA,EAAO5B,KAAR,OAAc4B,QAAd,IAAcA,OAAd,EAAcA,EAAOrB,OADrC,kBAIT2B,EAAUnC,WAJD,OAKf4B,GAAY,GALG,gDAOflI,QAAQC,IAAR,MACAgI,EAAW,QAASI,KAAKC,UAAL,2BAAoBH,GAApB,IAA2BrB,MAAO,QAAS,CAAEU,KAAM,MARxD,yDAAH,0DAYVkB,GAAU,SAAC,GAA0B,IAAxBP,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,UACxB,OACE,qCACE,cAACjD,EAAA,EAAD,CAAQL,KAAK,OAAOM,QAAQ,aAE5B,cAACuD,EAAA,EAAD,CAAMC,UAAU,SAAhB,SACE,cAACD,EAAA,EAAKE,OAAN,UACE,eAACtD,EAAA,EAAD,CAAQuD,WAAS,EAACvE,QAAS6D,EAA3B,2BACgB,sBAAMrD,MAAO,CAAEC,MAAO,aAAtB,SAAsCmD,EAAM3B,mBAQhEuC,GAAS,SAAC,GAAyB,IAAvBZ,EAAsB,EAAtBA,MAAOI,EAAe,EAAfA,SACvB,EAAwBrE,mBAAS,IAAjC,mBAAOqC,EAAP,KAAayC,EAAb,KACA,EAA0B9E,mBAAS,IAAnC,mBAAOsC,EAAP,KAAcyC,EAAd,KACA,EAAgC/E,mBAAS,IAAzC,mBAAOuC,EAAP,KAAiByC,EAAjB,KACA,EAA8ChF,oBAAS,GAAvD,mBAAOiF,EAAP,KAAwBC,EAAxB,KAEMC,EAAa,uCAAG,4BAAA7J,EAAA,6DACpB0J,EAAY,IADQ,kBAGE5C,EAASC,EAAMC,EAAOC,GAHxB,OAGZK,EAHY,OAIlByB,EAAS,2BAAKJ,GAAN,IAAarB,WAJH,gDAMlBsC,GAAmB,GACnBpJ,QAAQC,IAAR,MAPkB,yDAAH,qDAWbqJ,GAAc9C,EAAM+C,MACxB,yJAQF,OALAtD,qBAAU,WACR,OAAIkC,QAAJ,IAAIA,KAAO3B,OAAOyC,EAASd,EAAM3B,OACjC,OAAI2B,QAAJ,IAAIA,KAAO5B,MAAMyC,EAAQb,EAAM5B,QAC9B,CAAC4B,IAGF,qCACE,cAAChD,EAAA,EAAD,CAAQL,KAAK,OAAOM,QAAQ,wBAE5B,eAACoE,EAAA,EAAD,CAASC,aAAW,EAACC,SAAS,SAA9B,UACE,cAACf,EAAA,EAAD,CAAMgB,WAAS,EAACf,UAAU,SAA1B,SACE,cAACD,EAAA,EAAKiB,IAAN,UACE,cAACjB,EAAA,EAAKE,OAAN,UACE,eAACgB,EAAA,EAAD,WACE,cAACA,EAAA,EAAKC,MAAN,CACEL,YAAY,OACZ3F,KAAK,OACLiG,MAAM,OACN1I,MAAOkF,EACPyD,SAAU,SAAC9K,EAAG+K,GACRA,EAAE5I,MAAMvD,OAAS,KAAKkL,EAAQiB,EAAE5I,QAEtCyD,KAAK,OACLoF,aAAa,OACbC,WAAS,IAEX,cAACN,EAAA,EAAKC,MAAN,CACEL,YAAY,eACZW,QAAOd,GAAa,oCACpBxF,KAAK,QACLiG,MAAM,QACNjF,KAAK,OACLoF,aAAa,OACb7I,MAAOmF,EACPwD,SAAU,SAAC9K,EAAG+K,GACRA,EAAE5I,MAAMvD,OAAS,KAAKmL,EAASgB,EAAE5I,mBAOjD,cAACgJ,EAAA,EAAD,IACA,cAAC1B,EAAA,EAAD,CAAMpJ,QAAS,EAAGqJ,UAAU,SAA5B,SACE,eAACD,EAAA,EAAKiB,IAAN,CAAUU,cAAc,SAAxB,UACE,cAAC3B,EAAA,EAAKE,OAAN,UACE,cAACgB,EAAA,EAAD,UACE,cAACtE,EAAA,EAAD,CAAQgF,UAAQ,EAACC,SAAO,EAACC,OAAK,EAAC1F,MAAO,CAAE2F,MAAO,MAAOC,OAAQ,OAA9D,oCAKJ,cAACN,EAAA,EAAD,CAASO,UAAQ,EAAjB,gBACA,cAACjC,EAAA,EAAKE,OAAN,UACE,eAACgB,EAAA,EAAD,WACE,cAACA,EAAA,EAAKC,MAAN,CACEL,YAAY,WACZ3F,KAAK,WACLsG,QAAOjB,GAAkB,yCACzBY,MAAM,WACN1D,KAAK,WACLvB,KAAK,OACLoF,aAAa,OACb7I,MAAOoF,EACPuD,SAAU,SAAC9K,EAAG+K,GACZb,GAAmB,GACnBF,EAAYe,EAAE5I,UAGlB,cAACkE,EAAA,EAAD,CAAQsF,SAA8B,IAApBpE,EAAS3I,OAAc0M,SAAO,EAACC,OAAK,EAAClG,QAAS8E,EAAhE,sCAYDyB,GAzMD,SAAC,GAAoC,IAAD,IAAjCvE,YAAiC,MAA1B,KAA0B,MAApBwE,aAAoB,SAC1CC,EAAWC,cACjB,EAAwB/G,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8B8G,YAAW,CAAC,UAA1C,mBAAOlD,EAAP,KAAgBC,EAAhB,KACA,EAAgC/D,oBAAS,GAAzC,mBAAOiH,EAAP,KAAiBjD,EAAjB,KAeA,OAbAjC,qBAAU,WAER,OADA+E,EAAS7E,EAAYhC,IACd,WACL6G,EAAS7E,GAAY,OAEtB,CAAC6E,EAAU7G,IAEd8B,qBAAU,WAAO,IAAD,EACVkF,GACA,OAACnD,QAAD,IAACA,GAAD,UAACA,EAASG,aAAV,OAAC,EAAgBrB,OACrB0B,GAAWR,EAAQG,MAAOF,EAAYC,KACrC,CAACF,EAASmD,EAAUlD,EAAYC,IAGjC,cAACkD,EAAA,EAAD,CACE1G,WAAYqG,EACZ5G,KAAMA,GAAQ4G,EACdM,WAAS,EACTC,SAAO,EACPC,GAAG,QACHC,gBAAiB,IACjB7G,QACE,cAACC,EAAA,EAAKC,KAAN,CACEC,KAAMqG,EAAW,UAAY,UAC7BrH,KAAMqH,EAAW,WAAa,UAC9BpG,MAAO,CAAEC,MAAO,WAGpBC,QAAS,kBAAMb,GAAQ,IACvBc,OAAQ,kBAAMd,GAAQ,IAfxB,SAiBE,cAAC,GAAD,CACE4D,QAASA,EACTC,WAAYA,EACZC,YAAaA,EACb9D,QAASA,EACTmC,KAAMA,OCJCkF,gBAlCI,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACrB9I,EAAW+I,cACXC,EAAYH,EAAM3J,KAAI,SAAC+J,EAAMC,GACjC,OAAKD,EAAKE,KAER,cAACpH,EAAA,EAAKC,KAAN,CAEEkH,MAAOA,EACPE,GAAIC,IACJC,GAAIL,EAAKtE,KACT4E,OAAkB,IAAVL,EACRM,OAAQP,EAAKtE,OAAS3E,EAASyJ,SANjC,SAQGR,EAAK/B,OAPD,QAAUgC,GAHI,QAezB,MAA0B,eAAtBlJ,EAASyJ,SAAkCX,EAE7C,eAACY,EAAA,EAAQC,SAAT,CAAkBzH,MAAO,CAAE4F,OAAQ,SAAnC,UACE,eAAC4B,EAAA,EAAD,CAASN,GAAIrH,IAAM6H,UAAQ,EAACC,UAAU,OAAOC,SAAS,EAAMC,UAAW,MAAOC,KAAK,OAAnF,UACGhB,EACD,eAACjH,EAAA,EAAKA,KAAN,CAAWkI,SAAS,QAApB,UACE,cAAC,GAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,UAGJ,cAACP,EAAA,EAAQQ,OAAT,UAAiBpB,U,yFCkIjBqB,GAAW,uCAAG,WAClB5N,EACA6N,EACAC,EACAC,EACAC,EACA7N,EACA8N,EACAC,EACAC,EACA9N,GAVkB,mBAAAD,EAAA,yDAYdI,EAAI,KAEM,MAAV2N,EAdc,gCAeNvJ,EAAGwJ,UAAUpO,GAfP,OAehBQ,EAfgB,6BAiBhBA,EAAI2N,EAAOzP,OAjBK,UAoBlBoP,EAASO,KAAKC,KAAK9N,EAAIqN,IACnBU,EAAU,GACRC,EAtBY,aAsBKrO,KAEnBK,EAAI,GAxBU,oBAyBF,MAAV2N,EAzBY,kCA0BEvJ,EAAG6J,cAAczO,EAAO,EAAG6N,EAAU1N,EAASE,GA1BhD,QA0BdkO,EA1Bc,gDA4BE3J,EAAG8J,gBAAgB1O,EAAOmO,EAAOQ,MAAM,EAjM5C,IAiM0DxO,EAASE,GA5BhE,QA4BdkO,EA5Bc,eA8BZN,GAAYW,GAAgBJ,EAAYD,GA9B5B,QAiClB3N,QAAQC,IAAI0N,GACZL,EAAcM,GACdT,EAAQQ,GACJA,EAAQ7P,OAAS,GAAGsP,EAAeO,EAAQ,IApC7B,4CAAH,wEAuCXK,GAAkB,SAACzO,EAASoE,GAChC,IADyC,EACnCsK,EAAW1O,EAAQwC,KAAI,SAAC8B,GAAD,OAASA,EAAIC,QADD,cAGzBH,GAHyB,IAGzC,2BACE,IADqB,IAAd9C,EAAa,QACpB,MAAkBmC,OAAOC,KAAKpC,GAA9B,eAAoC,CAA/B,IAAIqN,EAAK,KACPD,EAASE,SAASD,KACrBD,EAASlQ,KAAKmQ,GACd3O,EAAQxB,KAAK,CAAE+F,KAAMoK,EAAOxD,MAAO,MAPA,gCAarC0D,GAAaC,IAAMC,MAAK,YAAqC,IAAlClP,EAAiC,EAAjCA,MAAOmP,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UAKhD,EAAwBtK,mBAAS,IAAjC,mBAAOuK,EAAP,KAAaC,EAAb,KACA,EAAwCxK,mBAAS,QAAjD,mBAAOyK,EAAP,KAAqBC,EAArB,KASA,OAPA3I,qBAAU,WACR,IAAM4I,EAAQC,YAAW,WACvBC,GAAgB3P,EAAOmP,EAAUE,EAAMD,EAAWI,KACjD,KACH,OAAO,kBAAMI,aAAaH,MACzB,CAACzP,EAAOqP,EAAMG,EAAiBL,EAAUC,IAG1C,mCACE,cAAC1E,GAAA,EAAD,CACEmF,QAA0B,cAAjBN,EACTtN,MAAOoN,EACP3J,KAAK,SACL2E,YAAa8E,EACbvE,SAAU,SAAC9K,EAAG+K,GAAJ,OAAUyE,EAAQzE,EAAE5I,eAMhC0N,GAAe,uCAAG,WAAO3P,EAAOmP,EAAUE,EAAMD,EAAWI,GAAzC,eAAApP,EAAA,yDACT,KAATiP,EADkB,uBAEpBD,EAAU,MACVI,EAAgB,QAHI,iCAMtBA,EAAgB,aANM,SAQD5K,EAAGkL,WAAW9P,EAAO,CAACmP,GAAWE,GARhC,OAQhBlB,EARgB,OAStBiB,EAAUjB,GACVqB,EAAgB,YAVM,4CAAH,8DAaNO,GA7PI,SAAC,GAQb,IAPL/P,EAOI,EAPJA,MACAG,EAMI,EANJA,QACA8N,EAKI,EALJA,WAKI,IAJJ+B,gBAII,MAJO,KAIP,EAHJC,EAGI,EAHJA,YACAC,EAEI,EAFJA,aACA7P,EACI,EADJA,QAKM8P,EAAeC,yBAAa,kBAAMxL,EAAGlF,IAAIM,MAAMA,GAAOsB,eAAeuC,UAE3E,EAAwBiB,mBAAS,IAAjC,mBAAOP,EAAP,KAAawJ,EAAb,KACA,EAA0BjJ,mBAAS,GAAnC,mBAAOuL,EAAP,KAAcvC,EAAd,KACA,EAAoChJ,mBAAS3E,GAA7C,mBAAOqO,EAAP,KAAmBN,EAAnB,KACA,EAA4BpJ,mBAAS,MAArC,mBAAOqJ,EAAP,KAAeiB,EAAf,KACA,EAAsCtK,mBAAS,MAA/C,mBAAOwL,EAAP,KAAoBtC,EAApB,KAEAnH,qBAAU,WACR,IAAK7G,EAEH,OADA+N,EAAQ,IACD,KAETH,GACE5N,EA/BW,GAiCX8N,EACAC,EACAC,EACA7N,EACA8N,EACAC,EACAC,EACA9N,KAED,CAACL,EAAOG,EAAS8N,EAAYE,EAAQgC,EAAcnC,EAAgB3N,IAEtEwG,qBAAU,WACJoJ,GAAaA,EAAYK,KAC5B,CAACA,EAAaL,IAEjB,IAmCMM,EAAiB,SAACC,GACtB,OAAOhC,EAAW7L,KAAI,SAAC8N,EAAQtI,GAC7B,GAAIsI,EAAOC,KAAM,OAAO,KACxB,IAAI1K,EAAUwK,EAASA,EAAOC,EAAO/L,MAAQ,KAE7C,OADIsB,aAAmB5H,OAAM4H,EAAUA,EAAQ2K,cAAchC,MAAM,EAAG,IAAIvN,QAAQ,KAAM,MAEtF,cAACwP,GAAA,EAAMC,KAAP,UACE,sBAAM9N,MAAOiD,EAAb,SAAuBA,KADRmC,OAOjB2I,EAAU,uCAAG,WAAOC,EAAOxM,GAAd,iBAAAnE,EAAA,yDACXH,EAjGO,IAiGGsE,EAAKyM,WAAa,GAC9BzC,EAAU,KACA,MAAVJ,EAHa,gCAICvJ,EAAG6J,cAAczO,EAAOC,EApG7B,IAgGI,OAIfsO,EAJe,+CAMC3J,EAAG8J,gBAAgB1O,EAAOmO,EAAOQ,MAAM1O,EAAQA,EAtGpD,KAgGI,QAMfsO,EANe,eAQjBR,EAAQQ,GARS,4CAAH,wDAWhB,OAAKC,EAGH,cAACyC,GAAA,EAAD,CAAWtL,MAAO,CAAEuL,SAAU,QAA9B,SACE,eAACN,GAAA,EAAD,CACEO,aAAW,EACXC,YAAU,EACVC,OAAK,EACLC,SAAO,EACPC,YAAU,EACV9D,KAAK,QACL9H,MAAO,CAAE6L,SAAU,QAPrB,UASE,cAACZ,GAAA,EAAM7K,OAAP,UACE,cAAC6K,GAAA,EAAMpG,IAAP,UAnECgE,EAAW7L,KAAI,SAAC8N,EAAQtI,GAC7B,OAAIsI,EAAOC,KAAa,KAEtB,cAACE,GAAA,EAAMa,WAAP,CAA0BnG,MAAOmF,EAAOnF,MAAxC,SACE,sBAAMvI,MAAO0N,EAAO/L,KAApB,UAViBA,EAU0B+L,EAAO/L,KATpDA,IAASwL,EAAqBxL,EAC3B,cAACsK,GAAD,CAAYhP,MAAOA,EAAOmP,SAAUzK,EAAM0K,UAAWA,QAOjCjH,GATL,IAACzD,SA2EnB,cAACkM,GAAA,EAAMc,KAAP,UA3DiB,SAACnN,GACtB,OAAa,OAATA,GAAiC,IAAhBA,EAAK7F,OAAqB,KAGxC6F,EAAK5B,KAAI,SAAC6N,EAAQrI,GACvB,IAAMwJ,EAAanB,EAAOR,MAAP,OAAqBM,QAArB,IAAqBA,OAArB,EAAqBA,EAAcN,IACtD,OACE,cAACY,GAAA,EAAMpG,IAAP,CAEE7E,MAAO,CAAE4F,OAAQ,SACjB0B,OAAQ0E,EACRxM,QAAS,kBAAM6I,EAAewC,IAJhC,SAMGD,EAAeC,IALXrI,MAmDMyJ,CAAerN,KAC5B,cAACqM,GAAA,EAAMiB,OAAP,UACE,cAACjB,GAAA,EAAMpG,IAAP,UACE,cAACoG,GAAA,EAAMa,WAAP,CAAkBK,QAAS3R,EAAQ4R,QAAO,SAACtN,GAAD,OAAUA,EAAIiM,QAAMhS,OAA9D,SACG2R,EAAQ,EACP,cAAC2B,GAAA,EAAD,CACEvE,KAAK,OACLwE,QAAQ,QACRC,cAAe,EACfC,aAAc,EACdC,aAAc,CACZpM,QAAS,cAACI,EAAA,EAAD,CAAM1B,KAAK,wBACpBgB,MAAM,GAER2M,UAAW,CACTrM,QAAS,cAACI,EAAA,EAAD,CAAM1B,KAAK,sBACpBgB,MAAM,GAER4M,SAAU,CACRtM,QAAS,cAACI,EAAA,EAAD,CAAM1B,KAAK,uBACpBgB,MAAM,GAER6M,SAAU,CAAEvM,QAAS,cAACI,EAAA,EAAD,CAAM1B,KAAK,eAAiBgB,MAAM,GACvD8M,SAAU,CACRxM,QAAS,cAACI,EAAA,EAAD,CAAM1B,KAAK,gBACpBgB,MAAM,GAER+M,UAAQ,EACR/I,WAAS,EACTgJ,kBAAmB,EACnBC,WAAYtC,EACZuC,aAAc9B,IAEd,gBAjDQ,MCzFpB+B,GAAoB,SAAC,GAQpB,IAPL7S,EAOI,EAPJA,MACA8S,EAMI,EANJA,UACA3S,EAKI,EALJA,QACA8P,EAII,EAJJA,YAII,IAHJ5P,eAGI,SAFJ0S,EAEI,EAFJA,SACAC,EACI,EADJA,SAEA,EAAwBlO,mBAAS,MAAjC,mBAAO4H,EAAP,KAAauG,EAAb,KAMA,OAJApM,qBAAU,WACJoJ,GAAaA,EAAYvD,KAC5B,CAACA,EAAMuD,IAGR,cAAC1G,EAAA,EAAD,CAAM2J,UAAQ,EAAC3I,WAAS,EAACpK,QAAS,EAAlC,SACE,eAACoJ,EAAA,EAAKE,OAAN,CAAa6B,MAAO,EAApB,UACE,eAACvF,EAAA,EAAD,CAAQyD,UAAU,SAAS7D,MAAO,CAAEwN,WAAY,UAAWvN,MAAO,SAAlE,oBACUkN,KAEV,eAAC1I,EAAA,EAAD,CAASzE,MAAO,CAAEyN,OAAQ,KAA1B,UACE,eAACjN,EAAA,EAAOkN,MAAR,CAAcC,OAAO,IAAI7F,KAAK,OAA9B,UACE,cAAC,GAAD,CAAYwF,QAASA,EAASjT,MAAOA,EAAO8S,UAAWA,EAAWC,SAAUA,IAC5E,cAAC,GAAD,CACErG,KAAMA,EACNuG,QAASA,EACTjT,MAAOA,EACP8S,UAAWA,EACXE,SAAUA,OAId,cAAC/B,GAAA,EAAD,CAAWtL,MAAO,CAAE4N,UAAW,OAAQrC,SAAU,OAAQ5F,MAAO,SAAhE,SACE,cAAC,GAAD,CACEtL,MAAOA,EACPG,QAASA,EACT+P,aAAa,OACbF,SAAS,KACTC,YAAagD,EACb5S,QAASA,eASjBmT,GAAa,SAAC,GAA6C,IAA3CP,EAA0C,EAA1CA,QAASjT,EAAiC,EAAjCA,MAAO8S,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,SAC/C,EAA4BjO,mBAAS,YAArC,mBAAOxB,EAAP,KAAemQ,EAAf,KACA,EAAgC3O,mBAAS,IAAzC,mBAAO4O,EAAP,KAAiBC,EAAjB,KAEMC,EAAQ,uCAAG,WAAO7C,GAAP,SAAA3Q,EAAA,sDACf2Q,EAAM8C,iBAENF,EAAYD,EAASI,QACrBL,EAAU,WAEV,IACE7O,EAAGlF,IACAM,MAAMA,GACN1B,IAAI,CACHoG,KAAMgP,IAEP5M,MAAK,SAACnF,GACDoR,GAAUA,EAASpR,GACvBsR,EAAQ,CAAEtR,KAAI+C,KAAMgP,OAExBD,EAAU,YACV,MAAO3T,GACPc,QAAQC,IAAIf,GACZ2T,EAAU,SAnBG,2CAAH,sDAuBd,OACE,eAACpO,EAAA,EAAD,CACEwH,GAAIpC,IACJlF,QACE,eAACY,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAM1B,KAAK,SADb,UAEUoO,KAGZc,SAAU,SAAC9T,GAAD,OAAO8T,EAAS9T,IAC1BiF,KAAiB,aAAXzB,EACNuC,QAAS,kBAAM4N,EAAU,aACzB3N,OAAQ,WACN6N,EAAY,IACZF,EAAU,mBAEZhG,KAAK,OAfP,UAiBE,cAAC1H,EAAA,EAAD,CAAQL,KAAK,SAASM,QAAQ,kBAAkB6G,GAAG,OACnD,cAACxH,EAAA,EAAMY,QAAP,UACE,cAACwE,EAAA,EAAK4I,MAAN,UACE,cAAC5I,EAAA,EAAKC,MAAN,CACEY,MAAO,GACPX,MAAM,OACNoJ,UAAQ,EACR9M,KAAK,OACLhF,MAAOyR,EACP9I,SAAU,SAAC9K,EAAG+K,GACZ4I,EAAU,kBACVE,EAAY9I,EAAE5I,QAEhBoI,YAAY,mBAIlB,eAAChF,EAAA,EAAMa,QAAP,WACc,UAAX5C,EACC,8GACE,KACQ,YAAXA,EACC,cAAC0Q,GAAA,EAAD,CAAQ/G,QAAM,EAACI,UAAQ,EAAvB,SACE,cAAC4G,GAAA,EAAD,CAAQjO,QAAQ,oBAGlB,cAACG,EAAA,EAAD,CAAQc,KAAK,SAASrB,MAAM,QAAQF,KAAK,OAAOM,QAAQ,kBAO5DkO,GAAa,SAAC,GAAmD,IAAjDxH,EAAgD,EAAhDA,KAAMuG,EAA0C,EAA1CA,QAASjT,EAAiC,EAAjCA,MAAO8S,EAA0B,EAA1BA,UAAWE,EAAe,EAAfA,SACrD,EAA4BlO,mBAAS,YAArC,mBAAOxB,EAAP,KAAemQ,EAAf,KAEMG,EAAQ,uCAAG,WAAO7C,GAAP,SAAA3Q,EAAA,yDACfqT,EAAU,WADK,UAGTT,EAHS,gCAGOA,EAAStG,EAAK/K,IAHrB,uBAIPiD,EAAGlF,IAAIM,MAAMA,GAAOU,MAAM,MAAMyB,OAAOuK,EAAK/K,IAAI5B,SAJzC,OAKbkT,EAAQ,MAERQ,EAAU,YAPG,kDASbA,EAAU,SATG,0DAAH,sDAad,OAAI,OAAC/G,QAAD,IAACA,KAAM/K,GAGT,eAAC0D,EAAA,EAAD,CACEC,WAAS,EACTP,KAAiB,aAAXzB,EACNiC,QACE,eAACY,EAAA,EAAD,CAAQmL,SAAO,EAAf,UACE,cAAClL,EAAA,EAAD,CAAM1B,KAAK,UADb,WACgCoO,KAGlCjN,QAAS,WACP4N,EAAU,aAEZ3N,OAAQ,WACN2N,EAAU,mBAZd,UAeE,cAAC1N,EAAA,EAAD,CAAQL,KAAK,QAAQM,QAAO,sBAAiB0G,EAAKhI,QAClD,cAACW,EAAA,EAAMY,QAAP,UACE,0EAEF,eAACZ,EAAA,EAAMa,QAAP,WACc,UAAX5C,EACC,8GACE,KACQ,YAAXA,EACC,cAAC0Q,GAAA,EAAD,CAAQ/G,QAAM,EAACI,UAAQ,EAAvB,SACE,cAAC4G,GAAA,EAAD,CAAQjO,QAAQ,oBAGlB,qCACE,eAACG,EAAA,EAAD,CACEP,MAAM,MACNT,QAAS,WACPsO,EAAU,aAHd,UAME,cAACrN,EAAA,EAAD,CAAM1B,KAAK,WANb,SAQA,eAACyB,EAAA,EAAD,CAAQP,MAAM,QAAQT,QAASyO,EAA/B,UACE,cAACxN,EAAA,EAAD,CAAM1B,KAAK,cADb,mBAxCY,MAkDTuK,OAAMC,KAAK2D,IClNpBsB,GAAe,CACnB,CAAEzP,KAAM,KAAM4G,MAAO,GACrB,CACE5G,KAAM,OACN4G,MAAO,KAIL8I,GAAoB,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,qBACrBrB,EAAQ,uCAAG,WAAOrR,GAAP,eAAAvB,EAAA,sEACIwE,EAAGlF,IAAIT,UAAUyB,MAAM,UAAUyB,OAAOR,GAD5C,cACT2S,EADS,gBAEKA,EAAK/T,QAFV,mBAGH,GAHG,gCAGM+T,EAAKvU,SAHX,2CAAH,sDAMd,OACE,cAACwJ,EAAA,EAAD,CAAM2J,UAAQ,EAAC3I,WAAS,EAACpK,QAAS,EAAlC,SACE,cAACoJ,EAAA,EAAKE,OAAN,CAAa6B,MAAO,EAApB,SACE,cAAC,GAAD,CACEtL,MAAM,aACN8S,UAAU,YACV3S,QAASgU,GACTlE,YAAaoE,EACbrB,SAAUA,SAOL/D,OAAMC,KAAKkF,I,oBC5BbG,GAAiB,SAAC,GAAmB,IAAjB1S,EAAgB,EAAhBA,UAc/B,OAAO,cAAC,GAAD,CAAWA,UAAWA,EAAWoF,KAAK,QAAQ9G,QAbrC,CACdlC,YAAa,CAAE8V,UAAU,EAAMS,UAAU,EAAOC,SAAU,CAAC,SAAU,gBACrEC,YAAa,CACXX,UAAU,EACVS,UAAU,EACVC,SAAU,CAAC,QAAS,WAAY,OAAQ,UAAW,SAErDE,YAAa,CACXZ,UAAU,EACVS,UAAU,EACVC,SAAU,CAAC,SAAU,YAAa,UAGiCG,cAAc,KAGjFC,GAAkB,SAAC1U,EAAS2U,EAAShU,EAAQiU,GACjD,OACE,mCACE,eAACtK,EAAA,EAAK4I,MAAN,CAAYC,OAAO,QAAnB,UACG0B,GAAW,cAAe,cAAe7U,EAAS2U,EAAShU,EAAQiU,GACnEC,GAAW,eAAgB,cAAe7U,EAAS2U,EAAShU,EAAQiU,GACpEC,GAAW,eAAgB,cAAe7U,EAAS2U,EAAShU,EAAQiU,SAMhEE,GAAkB,SAAC,GAAmB,IAAjBpT,EAAgB,EAAhBA,UAYhC,OAAO,cAAC,GAAD,CAAWA,UAAWA,EAAWoF,KAAK,SAAS9G,QAXtC,CACdlC,YAAa,CAAE8V,UAAU,EAAMS,UAAU,EAAOC,SAAU,CAAC,SAAU,gBACrE/M,MAAO,CAAEqM,UAAU,EAAMS,UAAU,EAAOC,SAAU,CAAC,QAAS,SAC9DS,SAAU,CAAEnB,UAAU,EAAOS,UAAU,EAAOC,SAAU,CAAC,WAAY,gBACrEU,UAAW,CAAEpB,UAAU,EAAOS,UAAU,EAAOC,SAAU,CAAC,YAAa,iBACvExU,OAAQ,CAAE8T,UAAU,EAAOqB,KAAK,EAAMZ,UAAU,EAAOC,SAAU,CAAC,SAAU,UAC5EY,IAAK,CAAEtB,UAAU,EAAOqB,KAAK,EAAMZ,UAAU,EAAOC,SAAU,CAAC,QAC/DpM,KAAM,CAAE0L,UAAU,EAAOS,UAAU,EAAOC,SAAU,CAAC,OAAQ,UAC7Da,QAAS,CAAEvB,UAAU,EAAOS,UAAU,EAAOC,SAAU,CAAC,YACxDpR,YAAa,CAAE0Q,UAAU,EAAOS,UAAU,EAAMC,SAAU,KAEYG,cAAc,KAGlFW,GAAmB,SAACpV,EAAS2U,EAAShU,EAAQiU,GAClD,OACE,qCACE,eAACtK,EAAA,EAAK4I,MAAN,CAAYC,OAAO,QAAnB,UACG0B,GAAW,cAAe,cAAe7U,EAAS2U,EAAShU,EAAQiU,GACnEC,GAAW,QAAS,QAAS7U,EAAS2U,EAAShU,EAAQiU,MAE1D,eAACtK,EAAA,EAAK4I,MAAN,CAAYC,OAAO,QAAnB,UACG0B,GAAW,UAAW,UAAW7U,EAAS2U,EAAShU,EAAQiU,GAC3DC,GAAW,YAAa,YAAa7U,EAAS2U,EAAShU,EAAQiU,GAC/DC,GAAW,WAAY,WAAY7U,EAAS2U,EAAShU,EAAQiU,MAEhE,eAACtK,EAAA,EAAK4I,MAAN,CAAYC,OAAO,QAAnB,UACG0B,GAAW,iBAAkB,SAAU7U,EAAS2U,EAAShU,EAAQiU,GACjEC,GAAW,MAAO,MAAO7U,EAAS2U,EAAShU,EAAQiU,GACnDC,GAAW,eAAgB,OAAQ7U,EAAS2U,EAAShU,EAAQiU,MAEhE,cAACtK,EAAA,EAAK4I,MAAN,CAAYC,OAAO,QAAnB,SACG0B,GAAW,cAAe,cAAe7U,EAAS2U,EAAShU,EAAQiU,GAAW,SAMjFS,GAAY,SAAC,GAAyD,IAAvD3T,EAAsD,EAAtDA,UAAsD,IAA3CoF,YAA2C,MAApC,OAAoC,EAA5B9G,EAA4B,EAA5BA,QAASyU,EAAmB,EAAnBA,aACtD,EAAwB9P,mBAAS,IAAjC,mBAAOP,EAAP,KAAawJ,EAAb,KACM0H,EAAUC,mBAEhB,OACE,eAACzE,GAAA,EAAD,WACE,eAAC1H,EAAA,EAAD,WACE,cAACA,EAAA,EAAKE,OAAN,CAAa6B,MAAO,EAApB,SACE,cAAC,aAAD,CACEqK,IAAKF,EACLG,QAAM,EACNC,WAAY,SAACtR,GAAD,OAAUwJ,EAAQxJ,IAC9BuR,iBAAe,EACfC,aAAc,kBAAMhI,EAAQ,KAL9B,SAOE,uDAGJ,cAACxE,EAAA,EAAKE,OAAN,CAAawI,QAAQ,QAAQ3G,MAAO,GAApC,SACE,cAAC,GAAD,CACErE,KAAMA,EACN1C,KAAMA,EACN1C,UAAWA,EACX4T,QAASA,EACTtV,QAASA,EACTyU,aAAcA,SAIpB,cAAC,GAAD,CAAcrQ,KAAMA,QAKpByR,GAAa,SAAC,GAA+D,IAA7D/O,EAA4D,EAA5DA,KAAM1C,EAAsD,EAAtDA,KAAM1C,EAAgD,EAAhDA,UAAW4T,EAAqC,EAArCA,QAAStV,EAA4B,EAA5BA,QAASyU,EAAmB,EAAnBA,aAC7D,EAA8B9P,mBAAS,IAAvC,mBAAOgQ,EAAP,KAAgBmB,EAAhB,KACA,EAA4BnR,mBAAS,IAArC,mBAAOhE,EAAP,KAAeiU,EAAf,KACA,EAA8BjQ,oBAAS,GAAvC,mBAAO+K,EAAP,KAAgBqG,EAAhB,KAEArP,qBAAU,WACR,GAAItC,EAAK7F,QAAU,EAGjB,OAFAqW,EAAU,SACVkB,EAAW,IAIbA,EACE1R,EAAK,GAAGA,KAAK5B,KAAI,SAACwT,GAChB,MAAO,CAAEnV,IAAKmV,EAASlU,MAAOkU,EAAS9G,KAAM8G,OAKjD,IADA,IAAIC,EAAY,GAChB,MAAgBxS,OAAOC,KAAK1D,GAA5B,eAAsC,CAAjC,IAAIsE,EAAG,KACV2R,EAAU3R,GAAOtE,EAAQsE,GAAK+P,SAAW,GAAK,KADV,oBAEpBrU,EAAQsE,GAAKgQ,UAFO,IAEpC,2BAAuC,CAAC,IAA/B4B,EAA8B,QACjC9R,EAAK,GAAGA,KAAKwK,SAASsH,KACpBlW,EAAQsE,GAAK+P,SACf4B,EAAU3R,GAAK9F,KAAK0X,GACfD,EAAU3R,GAAO4R,IANQ,+BAUtCtB,EAAUqB,KACT,CAAC7R,EAAMpE,IAEV,IAAMmW,EAAY,SAAC/R,EAAMzD,GAMvB,IALA,IAAM+C,EAAOU,EAAK,GAAGA,KAIfgS,EAAY,eAAQzV,GALQ,aAM7B,IAAIY,EAAK,KACZ,GAAIvB,EAAQuB,GAAO8S,SAAU,CAC3B+B,EAAa7U,GAAS,GADK,oBAENZ,EAAOY,IAFD,yBAElB8U,EAFkB,QAGzBD,EAAa7U,GAAO8U,GAAY3S,EAAK4S,WAAU,SAACC,GAAD,OAAOA,IAAMF,MAD9D,2BAAqC,IAFV,oCAM3BD,EAAa7U,GAASmC,EAAK4S,WAAU,SAACC,GAAD,OAAOA,IAAM5V,EAAOY,OAP7D,MAAkBkC,OAAOC,KAAK/C,GAA9B,eAAwC,IAWxC,OAAOyD,EAAKoK,MAAM,GAAGhM,KAAI,SAAClB,GACxB,IAAMkV,EAAU,GAEhB,GAAI/B,EAAc,CAChB,IAAMgC,EAAW/S,EAAKlB,KAAI,SAAC3B,EAAKmH,GAC9B,MAAO,CAAEzD,KAAM1D,EAAKiB,MAAOR,EAAI8C,KAAK4D,OAEtCwO,EAAQC,SAAWA,EAGrB,cAAkBhT,OAAOC,KAAK/C,GAA9B,eAAuC,CAAlC,IAAIY,EAAK,KACZ,GAAIvB,EAAQuB,GAAO8S,SAAU,CAC3BmC,EAAQjV,GAAS,GADU,oBAENZ,EAAOY,IAFD,IAE3B,2BAAoC,CAAC,IAA5B8U,EAA2B,QAC5BK,EAAaN,EAAa7U,GAAO8U,GACvC,KAAIK,EAAa,GAAjB,CACA,IAAIC,EAAIrV,EAAI8C,KAAKsS,GACb1W,EAAQuB,GAAO0T,MAAK0B,EAAIC,SAASD,IACrCH,EAAQjV,GAAO/C,KAAK,CAAE+F,KAAMb,EAAKgT,GAAa5U,MAAO6U,MAP5B,mCAStB,CACL,IAAMD,EAAaN,EAAa7U,GAChC,GAAImV,EAAa,EAAG,SACpB,IAAIC,EAAIrV,EAAI8C,KAAKsS,GACjBF,EAAQjV,GAASvB,EAAQuB,GAAO0T,IAAM2B,SAASD,GAAKA,GAGxD,OAAOH,MAILK,EAAU,uCAAG,4BAAA5W,EAAA,sEAEf8V,GAAW,GACPe,EAAeX,EAAU/R,EAAMzD,GACtB,WAATmG,IAAmBgQ,EAAeC,GAAqBD,IAJ5C,SAKTrS,EAAGuS,gBAAgBtV,EAAWoV,GALrB,uBAMTrS,EAAGwS,iBAAiBvV,EAAW,0BAA2B,MANjD,OAOf4T,EAAQ4B,QAAQC,aAEhBpB,GAAW,GATI,kDAWftV,QAAQC,IAAR,MACAqV,GAAW,GAZI,0DAAH,qDA6BhB,OACE,mCACE,eAACzL,EAAA,EAAD,CAAMoF,QAASA,EAAf,UACY,UAAT5I,EAAmB4N,GAAgB1U,EAAS2U,EAAShU,EAAQiU,GAAa,KACjE,WAAT9N,EAAoBsO,GAAiBpV,EAAS2U,EAAShU,EAAQiU,GAAa,KAC7E,cAACtK,EAAA,EAAK4I,MAAN,UACE,eAAC5I,EAAA,EAAK8M,MAAN,CAAYC,QAASrR,IAAQhB,QAAS6R,EAAYvL,UAnB1C,WACd,cAAgB7H,OAAOC,KAAK1D,GAA5B,eAAsC,CAAjC,IAAIsE,EAAG,KACV,GAAItE,EAAQsE,GAAK+P,UACf,GAAIrU,EAAQsE,GAAKsP,UAAmC,IAAvBjT,EAAO2D,GAAK/F,OAAc,OAAO,OAE9D,GAAIyB,EAAQsE,GAAKsP,WAAajT,EAAO2D,GAAM,OAAO,EAGtD,OAAO,EAW4DgT,GAA7D,UACE,cAACrR,EAAA,EAAD,CAAM1B,KAAK,WADb,oBAUJwS,GAAuB,SAAC3S,GAG5B,IAFA,IAAMtF,EAAY,GACdR,EAAS,CAAC8F,EAAK,IACV4D,EAAI,EAAGA,EAAI5D,EAAK7F,OAAQyJ,IAC3B5D,EAAK4D,GAAGlK,cAAgBsG,EAAK4D,EAAI,GAAGlK,cACtCgB,EAAUN,KAAK,CAAEV,YAAasG,EAAK4D,EAAI,GAAGlK,YAAaQ,WACvDA,EAAS,IAEXA,EAAOE,KAAK4F,EAAK4D,IAEnB,OAAOlJ,GAGH+V,GAAa,SAACrK,EAAO8F,EAAQtQ,EAAS2U,EAAShU,EAAQiU,GAC3D,OACE,cAACtK,EAAA,EAAK8M,MAAN,CACEC,QAASE,KACTC,WAAS,EACTtW,WAAS,EACTmT,WAAUrU,EAAQsQ,GAAQ+D,SAC1B7J,MAAO,CAAE4B,SAAU5B,EAAOhF,MAAO,CAAE6L,SAAU,SAC7CuC,SAAU5T,EAAQsQ,GAAQsD,SAC1Be,QAASA,EACT7S,MAAOnB,EAAO2P,GACd7F,SAAU,SAAC9K,EAAG+K,GACZ,IAAMuL,EAAS,eAAQtV,GACvBsV,EAAU3F,GAAU5F,EAAE5I,MACtB8S,EAAUqB,IAEZzQ,MAAO,CAAEiS,SAAU,MAAOpG,SAAU,WAKpCqG,GAAe,SAAC,GAAc,IAAZtT,EAAW,EAAXA,KAoBhBgM,EAAiB,SAAC9O,GACtB,OAAOA,EAAIkB,KAAI,SAACmV,GACd,OACE,cAAClH,GAAA,EAAMC,KAAP,UACE,sBAAM9N,MAAO+U,EAAb,SAAoBA,UAM5B,OAAIvT,EAAK7F,QAAU,EAAU,KAG3B,sBACEiH,MAAO,CACL4N,UAAW,MACXrC,SAAU,OACV5F,MAAO,OACP8H,OAAQ,aALZ,UAQE,eAACxC,GAAA,EAAD,CAAOO,aAAW,EAACI,YAAU,EAACF,OAAK,EAAC5D,KAAK,QAAQ6D,SAAO,EAAxD,UACE,cAACV,GAAA,EAAM7K,OAAP,UACE,cAAC6K,GAAA,EAAMpG,IAAP,UAxCa,SAACjG,GACpB,OAAOA,EAAK,GAAGA,KAAK5B,KAAI,SAACwT,GACvB,OACE,cAACvF,GAAA,EAAMa,WAAP,CAAkB9L,MAAO,CAAE2F,MAAO,OAAlC,SACE,sBAAMvI,MAAOoT,EAAb,SAAuBA,SAoCX4B,CAAaxT,OAE3B,cAACqM,GAAA,EAAMc,KAAP,UAhCa,SAACnN,EAAM/D,GAExB,OADoB+D,EAAKoK,MAAM,EAAGnO,EAAI,GACnBmO,MAAM,GAAGhM,KAAI,SAAClB,GAC/B,OAAO,cAACmP,GAAA,EAAMpG,IAAP,UAAY+F,EAAe9O,EAAI8C,WA6BvByT,CAAWzT,EA5CpB,QA8CLA,EAAK7F,OA9CA,EA8Ca,eAACqH,EAAA,EAAD,CAAQkS,MAAM,SAAd,UAAwB1T,EAAK7F,OAAS,EA9CnD,EA8Ca,gBAAkE,SCvR5EwZ,GAhCS,SAAC,GAAmB,IAAjBrW,EAAgB,EAAhBA,UACzB,EAAoCiD,mBAAS,iBAA7C,mBAAOqT,EAAP,KAAmBC,EAAnB,KAYA,OACE,qCACE,eAAC5S,EAAA,EAAD,CAAM8E,SAAS,MAAM+N,SAAO,EAA5B,UACE,cAAC7S,EAAA,EAAKC,KAAN,CACEf,KAAK,gBACLuI,OAAuB,kBAAfkL,EACRhT,QAAS,SAACrF,EAAG+K,GAAJ,OAAUuN,EAAcvN,EAAEnG,SAErC,cAACc,EAAA,EAAKC,KAAN,CACEf,KAAK,aACLuI,OAAuB,eAAfkL,EACRhT,QAAS,SAACrF,EAAG+K,GAAJ,OAAUuN,EAAcvN,EAAEnG,YAGvC,cAAC0F,EAAA,EAAD,CAASE,SAAS,SAAlB,SAzBiB,SAAC6N,GACpB,OAAQA,GACN,IAAK,gBACH,OAAO,cAAC,GAAD,CAAgBtW,UAAWA,IACpC,IAAK,aACH,OAAO,cAAC,GAAD,CAAiBA,UAAWA,IACrC,QACE,OAAO,MAkBmByW,CAAaH,SCiEhCI,GAtFS,SAAC,GAA0C,IAAxChU,EAAuC,EAAvCA,KAAMpE,EAAiC,EAAjCA,QAASkQ,EAAwB,EAAxBA,MAAOS,EAAiB,EAAjBA,WAiBzCP,EAAiB,SAACC,GACtB,OAAOrQ,EAAQwC,KAAI,SAAC8B,EAAK0D,GACvB,IAAInC,EAAUwK,EAAO/L,EAAIC,MACzB,OACE,cAACkM,GAAA,EAAMC,KAAP,UACE,sBAAM9N,MAAOiD,EAAb,SAAuBA,KADRmC,OAOvB,OAAI5D,EAAK7F,OAAS,EAAU,KAG1B,cAACuS,GAAA,EAAD,UACE,eAACL,GAAA,EAAD,CACEO,aAAW,EACXC,YAAU,EACVC,OAAK,EACLC,SAAO,EACPC,YAAU,EACV9D,KAAK,QACL9H,MAAO,CAAE6L,SAAU,QAPrB,UASE,cAACZ,GAAA,EAAM7K,OAAP,UACE,cAAC6K,GAAA,EAAMpG,IAAP,UAzCgB,SAACjG,EAAMpE,GAC7B,OAAOA,EAAQwC,KAAI,SAAC8B,EAAK0D,GACvB,OACE,cAACyI,GAAA,EAAMa,WAAP,CAA0BnG,MAAO7G,EAAI6G,OAAS,KAA9C,SACE,sBAAMvI,MAAO0B,EAAIC,KAAjB,SAAwBD,EAAIC,QADPyD,MAsCTqQ,CAAgBjU,EAAMpE,OAEpC,cAACyQ,GAAA,EAAMc,KAAP,UAjCiB,SAACnN,GACtB,OAAOA,EAAK5B,KAAI,SAAC6N,EAAQrI,GACvB,OAAO,cAACyI,GAAA,EAAMpG,IAAP,UAAoB+F,EAAeC,IAAnBrI,MA+BRyJ,CAAerN,KAC5B,cAACqM,GAAA,EAAMiB,OAAP,UACE,cAACjB,GAAA,EAAMpG,IAAP,UACE,cAACoG,GAAA,EAAMa,WAAP,CAAkBK,QAAS3R,EAAQzB,OAAnC,SACG2R,EAAQ,EACP,cAAC2B,GAAA,EAAD,CACEvE,KAAK,OACLwE,QAAQ,QACRC,cAAe,EACfC,aAAc,EACdC,aAAc,CACZpM,QAAS,cAACI,EAAA,EAAD,CAAM1B,KAAK,wBACpBgB,MAAM,GAER2M,UAAW,CACTrM,QAAS,cAACI,EAAA,EAAD,CAAM1B,KAAK,sBACpBgB,MAAM,GAER4M,SAAU,CACRtM,QAAS,cAACI,EAAA,EAAD,CAAM1B,KAAK,uBACpBgB,MAAM,GAER6M,SAAU,CAAEvM,QAAS,cAACI,EAAA,EAAD,CAAM1B,KAAK,eAAiBgB,MAAM,GACvD8M,SAAU,CACRxM,QAAS,cAACI,EAAA,EAAD,CAAM1B,KAAK,gBACpBgB,MAAM,GAER+M,UAAQ,EACR/I,WAAS,EACTgJ,kBAAmB,EACnBC,WAAYtC,EACZuC,aAAc,SAAC9S,EAAG+K,GAAJ,OAAUiG,EAAWjG,EAAEmG,eAErC,iBCjDZyH,GAAiB,SAAClU,EAAMpE,GAC5B,OAAOoE,EAAK5B,KAAI,SAAC6N,GACf,OAAOrQ,EAAQrC,QAAO,SAAC4a,EAAWjU,GAChC,IAVgBhG,EAAQ6W,EAUpBtP,EAAUwK,EAAO/L,EAAIC,MAazB,MAZiB,gBAAbD,EAAIC,KACNsB,EAAUwK,EAAOvS,aAEbuS,EAAOkE,cACT1O,EAAUwK,EAAOkE,YAAYiE,MAAK,SAACC,GAAD,OAAQA,EAAGlU,OAASD,EAAIC,WAC7CsB,EAAUA,EAAQ/D,OAE5B+D,GAAYwK,EAAOkE,cAAelE,EAAO/R,SAlBhCA,EAmBW+R,EAAO/R,OAnBV6W,EAmBkB7Q,EAAIC,KAA1CsB,EAlBDvH,EAAOX,QAAO,SAACuR,EAAM3H,GAE1B,OADIA,EAAM4N,UAAYA,IAASjG,EAAOA,EAAO3H,EAAMmR,IAAMnR,EAAMA,MAAQA,EAAMW,MACtEgH,IACN,MAkBCqJ,EAAUjU,EAAIC,MAAQsB,EACf0S,IACN,QAID9K,GAAW,uCAAG,WAAO/L,EAAWgM,EAAUC,EAAUC,EAAS+K,GAA/C,mBAAA1Y,EAAA,sEACFwE,EAAGmU,oBAAoBlX,GADrB,UACZrB,EADY,OAElBsN,EAASO,KAAKC,KAAK9N,EAAIqN,IACnBU,EAAU,KACV/N,EAAI,GAJU,gCAISoE,EAAGoU,gBAAgBnX,EAAW,EAAGgM,GAJ1C,OAIPU,EAJO,cAMZpO,EAAU8Y,GAAW1K,GAC3B3N,QAAQC,IAAI4X,GAAelK,EAASpO,IAEpC4N,EAAQ0K,GAAelK,EAASpO,IAChC2Y,EAAW3Y,GAVO,4CAAH,8DAaX8Y,GAAa,SAAC1K,GAClB,IAAI2K,EAAa,GAWjB,OAVI3K,EAAQ7P,OAAS,IACnBwa,EAAa3K,EAAQzQ,QAAO,SAACqb,EAAG1X,GAC9B,GAAIA,EAAIiT,YAAa,CAAC,IAAD,gBACJjT,EAAIiT,aADA,IACnB,gCAASkE,EAAT,QAAgCO,EAAE7a,IAAIsa,EAAGlU,OADtB,oCAGnB,IAAK,IAAIyD,EAAI,EAAGA,EAAI1G,EAAIhD,OAAOC,OAAQyJ,IAAKgR,EAAE7a,IAAImD,EAAIhD,OAAO0J,GAAGmN,SAElE,OAAO6D,IACN,IAAIzb,MAEF,CAAC,eAAD,oBAAmBwb,IAAYvW,KAAI,SAAC+B,GAAD,MAAW,CAAEA,YAG1C0U,GAlFO,SAAC,GAAmB,IAAjBvX,EAAgB,EAAhBA,UACvB,EAAwBiD,mBAAS,IAAjC,mBAAOP,EAAP,KAAawJ,EAAb,KACA,EAA0BjJ,mBAAS,GAAnC,mBAAOuL,EAAP,KAAcvC,EAAd,KACA,EAA8BhJ,mBAAS,IAAvC,mBAAO3E,EAAP,KAAgB2Y,EAAhB,KAEMhI,EAAU,uCAAG,WAAOE,GAAP,mBAAA5Q,EAAA,6DACXH,EARO,IAQG+Q,EAAa,GADZ,SAEKpM,EAAGoU,gBAAgBnX,EAAW5B,EATvC,IAOI,OAEXsO,EAFW,OAIXpO,EAAU8Y,GAAW1K,GAC3BR,EAAQ0K,GAAelK,EAASpO,IAChC2Y,EAAW3Y,GANM,2CAAH,sDAkBhB,OATA0G,qBAAU,WACR,IAAKhF,EAGH,OAFAkM,EAAQ,IACR+K,EAAW,IACJ,KAETlL,GAAY/L,EAtBC,GAsBoBiM,EAAUC,EAAS+K,KACnD,CAACjX,IAEG,cAAC,GAAD,CAAiB0C,KAAMA,EAAM8L,MAAOA,EAAOlQ,QAASA,EAAS2Q,WAAYA,KCvB5EuI,GAAkB,SAAC,GAAmB,IAAjBxX,EAAgB,EAAhBA,UACzB,OACE,qBAAK8D,MAAO,CAAE2T,YAAa,OAA3B,SACE,eAAC/P,EAAA,EAAD,CAAMgB,WAAS,EAACpK,QAAS,EAAzB,UACE,eAACoJ,EAAA,EAAKE,OAAN,CAAa6B,MAAO,EAApB,UACE,cAACvF,EAAA,EAAD,CAAQyD,UAAU,SAAS7D,MAAO,CAAEwN,WAAY,UAAWvN,MAAO,SAAlE,8BAGA,cAAC,GAAD,CAAiB/D,UAAWA,OAE9B,eAAC0H,EAAA,EAAKE,OAAN,CAAa6B,MAAO,EAApB,UACE,cAACvF,EAAA,EAAD,CAAQyD,UAAU,SAAS7D,MAAO,CAAEwN,WAAY,UAAWvN,MAAO,SAAlE,2BAGA,cAAC,GAAD,CAAe/D,UAAWA,aAOrBoN,OAAMC,KAAKmK,I,UCvBpBE,GAAsB,CAC1BC,SAAU,WACVC,cAAe,eACf/Q,WAAY,KACZgR,YAAa,WACbC,cAAe,CAAC,EAAG,GAEnBnZ,EAAG,KACHoZ,WAAY,KACZC,KAAM,GACNC,SAAS,EACTC,kBAAkB,EAClBC,oBAAoB,EACpBC,WAAY,GACZC,qBAAqB,EACrBC,cAAe,EACfC,YAAY,EACZC,OAAQ,CACNhL,KAAM,GACNiL,KAAM,KAIJC,GAAe,SAAC,GAAmB,IAAjB1Y,EAAgB,EAAhBA,UAChB2Y,EAAY,OAAG3Y,QAAH,IAAGA,OAAH,EAAGA,EAAW2Y,aAC1BC,EAAkB,SAACC,GACvB9V,EAAGwS,iBAAiBvV,EAAW,eAAgB6Y,IAKjD,OAFI,OAAC7Y,QAAD,IAACA,KAAW2Y,cAAcC,EAAgBlB,IAEzCiB,EAEH,qBAAK7U,MAAO,CAAEuF,cAAe,MAAOyP,MAAO,MAAOrB,YAAa,OAA/D,SACE,cAAC/P,EAAA,EAAD,CAAM5D,MAAO,CAAEiV,WAAY,OAA3B,SACE,eAACrR,EAAA,EAAKiB,IAAN,WACE,cAACjB,EAAA,EAAKE,OAAN,CAAa6B,MAAO,EAApB,SACE,cAAC,GAAD,CACEzJ,UAAWA,EACX2Y,aAAcA,EACdC,gBAAiBA,MAGrB,cAAClR,EAAA,EAAKE,OAAN,CAAa6B,MAAO,EAApB,SACE,cAAC,GAAD,CAAiBkP,aAAcA,EAAcC,gBAAiBA,aAb9C,MAqBtBI,GAAiB,SAAC,GAAkD,IAAhDhZ,EAA+C,EAA/CA,UAAW2Y,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,gBACjD5T,qBAAU,WACuB,QAAf,OAAZ2T,QAAY,IAAZA,OAAA,EAAAA,EAAchB,WAChBiB,EAAgB,2BACXD,GADU,IAEbhB,SAAU,WACVvX,MAAO,eACPzB,EAAG,KACHoZ,WAAY,UAEf,CAACY,EAAcC,IAElB,IAAMK,EAAc,SAAC7Y,EAAO0I,EAAOoQ,EAAWC,GAC5C,IAAMvB,EAAgBsB,EAAY,cAAgB,eAC9CE,EAAUT,EAAahB,WAAavX,GAASuY,EAAaf,gBAAkBA,EAEhF,OACE,cAAChP,EAAA,EAAK8M,MAAN,UACE,cAAC2D,GAAA,EAAD,CACEjZ,MAAOA,EACP0I,MAAOA,EACPsQ,QAASA,EACTrQ,SAAU,SAAC9K,EAAG+K,GAAJ,OACR4P,EAAgB,2BACXD,GADU,IAEbhB,SAAUvX,EACVwX,cAAeA,EACfjZ,EAAG,KACHoZ,WAAY,SAGhBjU,MAAO,CAAEwV,WAAYH,EAAO,MAAQ,YAwC5C,OACE,eAACvQ,EAAA,EAAD,WACE,eAACA,EAAA,EAAK4I,MAAN,WACE,cAACjN,EAAA,EAAD,CAAM1B,KAAK,YACX,mDAEF,eAAC+F,EAAA,EAAK4I,MAAN,CAAY+H,SAAO,EAAC9H,OAAO,QAA3B,UACGwH,EAAY,WAAY,YAAY,GACpCA,EAAY,YAAa,aAAa,GACtCA,EAAY,WAAY,YAAY,GA3ChB,WACzB,IAAKjZ,EAAUU,cAAe,OAAO,KACrC,GAAoD,IAAhDqB,OAAOC,KAAKhC,EAAUU,eAAe7D,OAAc,OAAO,KAC9D,IAAMoW,EAAUlR,OAAOC,KAAKhC,EAAUU,eAAeI,KAAI,SAACwB,GAAD,MAAW,CAClEnD,IAAKmD,EACLlC,MAAOkC,EACPkL,KAAMlL,MAIR,OAFgC,OAA5BqW,EAAa9R,YACf+R,EAAgB,2BAAKD,GAAN,IAAoB9R,WAAYoM,EAAQ,GAAG7S,SAE1D,uBAAM0D,MAAO,CAAE0V,WAAY,QAA3B,wBACc,MACZ,cAAC3D,GAAA,EAAD,CACE5C,QAASA,EACT7S,MAAOuY,EAAa9R,WACpBkC,SAAU,SAAC9K,EAAG+K,GAAJ,OAAU4P,EAAgB,2BAAKD,GAAN,IAAoB9R,WAAYmC,EAAE5I,eA4BtEqZ,GArBAd,EAAa9R,WAEhB,qCACGoS,EAAY,OAAQ,mBAAmB,GAAM,GAC7CA,EAAY,WAAY,mBAAmB,GAAM,GACjDA,EAAY,YAAa,oBAAoB,GAAM,GACnDA,EAAY,WAAY,mBAAmB,GAAM,MANjB,YA4BnCS,GAAkB,SAAC,GAAuC,IAArCf,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,gBACjCe,EAAmB,SAACvZ,GACxBwY,EAAgB,2BACXD,GADU,IAEbb,cAAe1X,MAIb6Y,EAAc,SAAC7Y,EAAO0I,GAC1B,OACE,eAACF,EAAA,EAAK8M,MAAN,WACE,cAAC2D,GAAA,EAAD,CACEjZ,MAAOA,EACP0I,MAAOA,EACPc,SAAoC,aAA1B+O,EAAahB,SACvByB,QAAST,EAAad,cAAgBzX,EACtC2I,SAAU,SAAC9K,EAAG+K,GAAJ,OACR4P,EAAgB,2BACXD,GADU,IAEbd,YAAazX,QAIlB,KACW,cAAVA,GAAmC,aAAVA,GAAyBA,IAAUuY,EAAad,YAMvE,KALF,cAAC,GAAD,CACEA,YAAac,EAAad,YAC1BC,cAAea,EAAab,cAC5B6B,iBAAkBA,QAO5B,OACE,eAAC/Q,EAAA,EAAD,WACE,eAACA,EAAA,EAAK4I,MAAN,WACE,cAACjN,EAAA,EAAD,CAAM1B,KAAK,YACX,oDAEF,eAAC+F,EAAA,EAAK4I,MAAN,CAAY+H,SAAO,EAAC9H,OAAO,QAA3B,UACGwH,EAAY,WAAY,YACxBA,EAAY,YAAa,aACzBA,EAAY,WAAY,YACxBA,EAAY,OAAQ,qBAsDvBW,GAAgB,SAAC,GAAsD,IAApD/B,EAAmD,EAAnDA,YAAaC,EAAsC,EAAtCA,cAAe6B,EAAuB,EAAvBA,iBACnD,MAAoB,aAAhB9B,EAAmC,KAGrC,cAAC1N,EAAA,EAAD,CACEC,WAAS,EACT1G,QACE,cAACY,EAAA,EAAD,CACER,MAAO,CACL+V,QAAS,sBACTvI,WAAY,QACZC,OAAQ,aAJZ,mBAMKuG,EAAc,GANnB,cAM2BA,EAAc,MAT7C,SAYE,eAACjC,GAAA,EAASlS,KAAV,WACE,cAACkS,GAAA,EAAS3R,OAAV,CAAiBC,QAAO,cAAS0T,EAAT,aACxB,eAACnQ,EAAA,EAAD,CAAM5D,MAAO,CAAEiV,WAAY,MAAOtP,MAAO,QAAzC,UACE,cAAC/B,EAAA,EAAKE,OAAN,CAAa6B,MAAO,EAApB,SACE,cAACZ,GAAA,EAAD,CACE+C,KAAK,OACLxL,MAAO0X,EAAc,GACrBgC,IAAK,EACL1U,KAAK,SACLtB,MAAO,CAAE2F,MAAO,OAChBX,MAAO,SACPC,SAAU,SAAC9K,EAAG+K,GAAJ,OAAU2Q,EAAiB,CAACI,OAAO/Q,EAAE5I,OAAQ0X,EAAc,UAGzE,cAACpQ,EAAA,EAAKE,OAAN,CAAa6B,MAAO,EAApB,SACE,cAACZ,GAAA,EAAD,CACE+C,KAAK,OACLxL,MAAO0X,EAAc,GACrBgC,IAAK,EACL1U,KAAK,SACL4U,cAAc,QACdlW,MAAO,CAAE2F,MAAO,OAChBX,MAAO,QACPC,SAAU,SAAC9K,EAAG+K,GAAJ,OAAU2Q,EAAiB,CAAC7B,EAAc,GAAIiC,OAAO/Q,EAAE5I,uBAShEgN,OAAMC,KAAKqL,I,qBCjSbuB,GAAa,SAACC,EAAOvb,EAAGY,EAASyY,EAAMmC,GAClD,IAAMC,EAASC,KAAWrC,GAEjB,MAALrZ,GAAmB,OAANA,IAAYA,EAAIub,EAAMrd,SAClC0C,GAAWZ,EAAIub,EAAMrd,SAAQ8B,EAAIub,EAAMrd,QAC5C,IAEIyd,EAASC,EAFTzP,EAAK,aAAO1I,MAAM8X,EAAMrd,QAAQmF,QAGtB,OAAVmY,GACFG,EAAU,CAACxP,GACXyP,EAAK,CAAC5b,KAEN2b,EAAUE,GAAW1P,EAAOqP,GAC5BG,EAAUG,GAAkBH,EAASA,EAAQzd,OAAQud,GACrDG,EAAKG,GAAYJ,EAAS3b,EAAGyb,IAI/B,IADA,IAAIO,EAAM,GACDC,EAAI,EAAGA,EAAIN,EAAQzd,OAAQ+d,IAClC,GAAIrb,EACF,IAAK,IAAI+G,EAAI,EAAGA,EAAI3H,EAAG2H,IACrBqU,EAAI7d,KAAKwd,EAAQM,GAAGpO,KAAKqO,MAAMT,IAAWE,EAAQM,GAAG/d,cAElD,CACLyd,EAAQM,GAAKH,GACXH,EAAQM,GACRL,EAAGK,GAAKN,EAAQM,GAAG/d,OAAS0d,EAAGK,GAAKN,EAAQM,GAAG/d,OAC/Cud,GAJG,oBAMSE,EAAQM,IANjB,IAML,gCAAStU,EAAT,QAA0BqU,EAAI7d,KAAKwJ,IAN9B,+BAWT,OADAqU,EAAMF,GAAkBE,EAAKA,EAAI9d,OAAQud,IAC9BtZ,KAAI,SAACwF,GAAD,OAAO4T,EAAM5T,OAIxBmU,GAAoB,SAACK,EAAKlP,EAAMwO,GAMpC,IALA,IAGEW,EACAjQ,EAJEkQ,EAAWF,EAAIhO,MAAM,GACvBxG,EAAIwU,EAAIje,OACRid,EAAMxT,EAAIsF,EAGLtF,KAAMwT,GAEXiB,EAAOC,EADPlQ,EAAQ0B,KAAKqO,OAAOvU,EAAI,GAAK8T,MAE7BY,EAASlQ,GAASkQ,EAAS1U,GAC3B0U,EAAS1U,GAAKyU,EAGhB,OAAOC,EAASlO,MAAMgN,IAGlBU,GAAa,SAAC1P,EAAOqP,GAKzB,IAHA,IAAMG,EAAU,GACVW,EAAU,GAEP3U,EAAI,EAAGA,EAAIwE,EAAMjO,OAAQyJ,IACP,MAArB2U,EAAQd,EAAM7T,MAChB2U,EAAQd,EAAM7T,IAAMgU,EAAQzd,OAC5Byd,EAAQxd,KAAK,KAEfwd,EAAQW,EAAQd,EAAM7T,KAAKxJ,KAAKgO,EAAMxE,IAExC,OAAOgU,GAGHI,GAAc,SAACJ,EAAS3b,EAAGyb,GAO/B,IANA,IAAMG,EAAK,IAAInY,MAAMkY,EAAQzd,QAAQqe,KAAK,GACtCC,EAAO,IAAI/Y,MAAMkY,EAAQzd,QAAQqe,KAAK,GACtCE,EAASzc,EACT0c,EAAgBf,EAAQzd,OACxByJ,GAAK,EAEF8U,EAAS,GAAG,CAEjB,IAAIE,IADJhV,EACiBgU,EAAQzd,OASzB,GARqB,IAAjBse,EAAKG,KACPf,EAAGe,KACHF,IACIb,EAAGe,KAAYhB,EAAQgB,GAAQze,SACjCse,EAAKG,GAAU,EACfD,MAGkB,IAAlBA,EAAqB,MAG3B,OAAOd,GC/CHgB,GAAW,uCAAG,WAAO7f,EAAQ8f,GAAf,iBAAAjd,EAAA,sEACSwE,EAAGtC,iBAAiB/E,EAAQ,gBADrC,cACZid,EADY,gBAEG8C,GAAkB/f,EAAQid,GAF7B,UAEd+C,EAFc,OAGlBF,EAAYE,GAEoB,OAA5B/C,EAAaZ,YAA0C,OAAnBY,EAAaha,IAAcob,OAAO4B,MAAMhD,EAAaha,GAL3E,kCAMVoE,EAAGwS,iBAAiB7Z,EAAQ,eAA5B,2BACDid,GADC,IAEJha,EAAG+c,EAASjV,MAAM5J,OAClBkb,WAAY2D,EAASjV,MAAM5J,UATb,4CAAH,wDAcX+e,GAAS,uCAAG,WAAO5b,EAAW0b,EAAUG,EAAWxH,GAAvC,6BAAA9V,EAAA,yDACV6Z,EAAapY,EAAU2Y,aAAaP,WAAWpY,EAAU2Y,aAAa9R,YAExEJ,EAAQiV,EAASjV,MACjBqV,EAAqB,GAEvB1D,GACyC,gBAAzCpY,EAAU2Y,aAAaf,eACvBQ,EAAW5V,MAAK,SAACuZ,GAAD,OAASA,EAAGC,WAE5BF,EAAqB1D,EAAWnc,QAAO,SAACgG,EAAKK,GAE3C,OADKA,EAAK0Z,QAAO/Z,EAAIK,EAAKA,OAAQ,GAC3BL,IACN,IACHwE,EAAQA,EAAMyJ,QAAO,SAAC+L,GAAD,OAAQH,EAAmBG,EAAEC,qBAItC,KADRC,EAAQ1V,EAAM5J,OAASmD,EAAU2Y,aAAaZ,YAjBpC,iCAmBRhV,EAAGwS,iBAAiBvV,EAAW,eAA/B,2BACDA,EAAU2Y,cADT,IAEJha,EAAG6N,KAAK4P,IAAI,EAAG5P,KAAKsN,IAAIrT,EAAM5J,OAAQmD,EAAU2Y,aAAaha,EAAIwd,IACjEpE,WAAYtR,EAAM5J,UAtBN,cAwBO,IAAjB4J,EAAM5J,SACRgf,EAAU,IACVhO,YAAW,kBAAMwG,EAAW,WAAU,KA1B1B,2BA+BZgI,EAAU5V,EAAM3F,KAAI,SAACmb,GACvB,IAAI3E,EAAItX,EAAU2Y,aAAaT,iBAAmB+D,EAAE5f,QAAU,GAG9D,MAF+B,gBAA3Bqf,EAAS9D,eAAmC5X,EAAU2Y,aAAaR,qBACrEb,GAAC,WAAQ2E,EAAEC,kBACN5E,KAGLgF,EAASrC,GACXxT,EACAzG,EAAU2Y,aAAaha,GACvB,EACAqB,EAAU2Y,aAAaX,KACvBqE,GAI2B,gBAA3BX,EAAS9D,eACa,SAAtB8D,EAAS/D,UACT3X,EAAU2Y,aAAaL,gBAEnBiE,EAAU/P,KAAKC,KAAKhG,EAAM5J,QAAUmD,EAAU2Y,aAAaL,cAAgB,OAC3EkE,EAAcC,GAChBf,EAASgB,IACT1c,EACAA,EAAU2Y,aACV4D,EACAT,IAEcjf,OAAS,IACvByf,EAASA,EAAOK,OAAOH,GACvBF,EAASrC,GAAWqC,EAAQA,EAAOzf,QAAQ,EAAOmD,EAAU2Y,aAAaX,KAAM,QAInFsE,EAASM,GAAWN,EAAQtc,EAAU2Y,cACtCkD,EAAUS,GACVzO,YAAW,kBAAMwG,EAAW,WAAU,IAnEtB,4CAAH,4DAsEToH,GAAiB,uCAAG,WAAO/f,EAAQid,GAAf,uBAAApa,EAAA,sEACSse,GAAYnhB,EAAQid,GAD7B,0CACjB+D,EADiB,KACZlb,EADY,KAIW,iBAA/BmX,EAAaf,gBAAkCnR,EAAQiW,GACxB,gBAA/B/D,EAAaf,gBAAiCnR,EAAQjF,GALlC,kBASjB,CACLkb,MACAlb,cACAiF,QACAmR,cAAee,EAAaf,cAC5BD,SAAUgB,EAAahB,SACvB9Q,WAAY8R,EAAa9R,aAfH,2CAAH,wDAmBjBgW,GAAW,uCAAG,WAAOnhB,EAAQid,GAAf,2BAAApa,EAAA,6DACVoZ,EAA4BgB,EAA5BhB,SAAUC,EAAkBe,EAAlBf,cADA,SAGI7U,EAAG+Z,aAAaphB,GAHpB,cAGd0B,EAHc,OAMH,EACX2f,EAAWC,IAETC,EAAiB,GACjBC,EAAW,GAEbC,GAAY,EAZE,UAaZ/f,EAAUuC,MAAK,SAAC1B,GACpBkf,IACA,IAAMC,EAAc,GACdC,EACc,gBAAlBzF,EACI0F,GAAerf,EAAEuD,YAAavD,EAAErB,OAAQ+a,EAAUgB,EAAa9R,YAC/D,GAMN,GAJiB,aAAb8Q,GAAwC,SAAbA,GAC7ByF,EAAYtgB,KAAK,GAGF,cAAb6a,EAEF,IADA,IAAM4F,EAAatf,EAAErB,OAAOqB,EAAErB,OAAOC,OAAS,GAAGyW,UACxCkK,EArBE,EAqBmBA,GAAYhR,KAAKsN,IAAIiD,EAAUQ,GAAaC,IACxEJ,EAAYtgB,KAAK0gB,GAIrB,GAAiB,aAAb7F,EAEF,IADA,IAAM8F,EAAYxf,EAAErB,OAAOqB,EAAErB,OAAOC,OAAS,GAAGwW,SACvCqK,EA5BE,EA4BoBA,GAAalR,KAAKsN,IAAIiD,EAAUU,GAAYC,IACzEN,EAAYtgB,KAAK4gB,GAIrB,cAAsBN,EAAtB,eAAmC,CAA9B,IAAIO,EAAS,KACV9S,EAAO,CACX8M,WACAgG,UAAWA,EACXthB,QAAS4B,EAAE5B,QACXD,YAAa6B,EAAE7B,YACfwhB,WAAYC,GAAc5f,GAC1B6f,WAAYC,GAAc9f,GAC1Bkf,WACAE,iBAAkB,IAGpB,GAAIA,EAAiBM,GAAY,CAAC,IAAD,gBACfN,EAAiBM,IADF,IAC/B,2BAA6C,CAAC,IAArCK,EAAoC,QACrCC,EAAO,eAAQpT,GACrBoT,EAAQC,UAAYF,EAAIE,UACxBD,EAAQE,KAAOH,EAAIG,KACnBF,EAAQ/B,gBAAkB8B,EAAI9B,gBACb,SAAbvE,IAAqB9M,EAAK8S,UAAYK,EAAIG,KAAK,IACnDlB,EAAengB,KAAKmhB,GACpBpT,EAAKwS,iBAAiBW,EAAI9B,kBAAmB,GARhB,+BAYhB,SAAbvE,GAAqBuF,EAASpgB,KAAK+N,OA/DzB,iCAmEX,CAACqS,EAAUD,IAnEA,4CAAH,wDAsEXR,GAAiB,SAACC,EAAK1c,EAAW2Y,EAAc4D,EAAST,GAK7D,IAJA,IAAMsC,EAAWzF,EAAa9R,WACxB9K,EAAQiE,EAAUU,cAAc0d,GAElC9D,EAAU,GACLhU,EAAI,EAAGA,EAAIoW,EAAI7f,OAAQyJ,IAAK,CACnC,IADmC,EAC7B+X,EAAO3B,EAAIpW,GADkB,cAElBvK,GAFkB,IAEnC,2BAAwB,CAAC,IAAhBuG,EAAe,QACtB,IAAIwZ,EAAmBxZ,EAAKA,MAA5B,CACA,IAAMlC,EAAQkC,EAAKA,KAEfqW,EAAaJ,YAAc8F,EAAKhB,iBAAiBjd,IACrDka,EAAQxd,KAAK,CACXwJ,IACA4X,UAAU,eAAIE,EAAW9b,EAAKA,MAC9B+Z,QAASgC,EAAKhC,QAAL,WAAmBjc,OAVG,+BAerC,GAAuB,IAAnBka,EAAQzd,OAAc,MAAO,GACjCyd,EAAUL,GACRK,EACAiC,GACA,EACA5D,EAAaX,KAAO,EACpBsC,EAAQxZ,KAAI,SAACwF,GAAD,OAAOA,EAAE+V,YAGvB,IA7BoF,EA6B9EG,EAAc,GA7BgE,cA8BxDlC,GA9BwD,IA8BpF,2BAAqC,CAAC,IAA7BgE,EAA4B,QACnC9B,EAAY1f,KAAZ,2BACK4f,EAAI4B,EAAgBhY,IADzB,IAEE8T,QAAQ,EACR8D,UAAWI,EAAgBJ,cAlCqD,8BAqCpF,OAAO1B,GAGHc,GAAiB,SAAC9b,EAAa5E,EAAQ+a,EAAU9Q,GAKrD,IAAKrF,EAAa,MAAO,GAEzB,IADA,IAAMwc,EAAM,GACZ,MAAcjc,OAAOC,KAAKR,GAA1B,eACE,IADG,IAAI8E,EAAC,KACR,MAAevE,OAAOC,KAAKR,EAAY8E,IAAvC,eAA4C,CAAvC,IAAIxG,EAAE,KACHse,EAAW5c,EAAY8E,GAAGxG,GAAIse,SACpC,GAAIA,IAAavX,EAAjB,CACA,IAEMtI,EAAI,CACR2d,gBAHsB1a,EAAY8E,GAAGxG,GAAIM,MAKzC+d,KAAM3c,EAAY8E,GAAGxG,GAAIqe,KACzBD,UAAU,eAAIE,EAAW5c,EAAY8E,GAAGxG,GAAIM,QAG7B,aAAbuX,GAAwC,SAAbA,IACxBqG,EAAI,KAAIA,EAAI,GAAK,IACtBA,EAAI,GAAGlhB,KAAKyB,IAEG,cAAboZ,IACGqG,EAAIphB,EAAO0J,GAAGgN,aAAY0K,EAAIphB,EAAO0J,GAAGgN,WAAa,IAC1D0K,EAAIphB,EAAO0J,GAAGgN,WAAWxW,KAAKyB,IAEf,aAAboZ,IACGqG,EAAIphB,EAAO0J,GAAG+M,YAAW2K,EAAIphB,EAAO0J,GAAG+M,UAAY,IACxD2K,EAAIphB,EAAO0J,GAAG+M,UAAUvW,KAAKyB,KAInC,OAAOyf,GAGHH,GAAgB,SAAC5f,GACrB,GAAIA,EAAE4U,YAAa,OAAO5U,EAAE4U,YAAY/R,KAAI,SAACiW,GAAD,OAAQA,EAAGlU,QACvD,GAAI5E,EAAErB,OAAQ,CACZ,IADY,EACNqC,EAAS,IAAIpD,IADP,cAEMoC,EAAErB,QAFR,IAEZ,gCAASiJ,EAAT,QAA4B5G,EAAOxC,IAAIoJ,EAAM4N,UAFjC,8BAGZ,OAAO,aAAIxU,GAEb,MAAO,IAGH8e,GAAgB,SAAC9f,GACrB,OAAIA,EAAE6U,YAAoB7U,EAAE6U,YAAYhS,KAAI,SAACiW,GAAD,OAAQA,EAAGlU,QAChD,IAGH+Z,GAAa,SAAC2B,EAAW5F,GAC7B,MAAmC,gBAA/BA,EAAaf,eAAmCe,EAAaL,cAAgB,EACxEiG,EACJ5F,EAAaV,QACXsG,EAAUC,MAAK,SAAUjgB,EAAGkgB,GACjC,OAAIlgB,EAAE4e,WAAasB,EAAEtB,SAAiB5e,EAAE4e,SAAWsB,EAAEtB,SACjD5e,EAAEof,YAAcc,EAAEd,UAAkBpf,EAAEof,UAAYc,EAAEd,UACpC,MAAhBpf,EAAEsI,YAAsBtI,EAAEsI,WAAWiE,QAAU2T,EAC1ClgB,EAAEsI,WAAWiE,MAAQ2T,EAAE5X,WAAWiE,MACpC,KANyByT,GAUrBG,GA1TE,SAAC1e,GAAe,IAAD,MAC9B,EAAgCiD,mBAAS,MAAzC,mBAAOyY,EAAP,KAAiBF,EAAjB,KACA,EAA4BvY,mBAAS,MAArC,mBAAOqZ,EAAP,KAAeT,EAAf,KACA,EAA8B5Y,mBAAS,SAAvC,mBAAO+K,EAAP,KAAgBqG,EAAhB,KA4BA,OA1BArP,qBAAU,WAAO,IAAD,EAEdqP,EAAW,WACP,OAACrU,QAAD,IAACA,GAAD,UAACA,EAAW2Y,oBAAZ,OAAC,EAAyBhB,UAC9B4D,GAAYvb,EAAUF,GAAI0b,KAEzB,QACDxb,QADC,IACDA,GADC,UACDA,EAAW2Y,oBADV,aACD,EAAyBhB,SADxB,OAED3X,QAFC,IAEDA,GAFC,UAEDA,EAAW2Y,oBAFV,aAED,EAAyBf,cAFxB,OAGD5X,QAHC,IAGDA,GAHC,UAGDA,EAAW2Y,oBAHV,aAGD,EAAyB9R,WACzB7G,EAAUF,GACV0b,IAGFxW,qBAAU,WAER,GAAK0W,GAAY,OAAC1b,QAAD,IAACA,KAAWU,cAA7B,CACA2T,GAAW,SAACsK,GAAD,MAAsB,YAAVA,EAAsB,UAAY,oBAEzD,IAAM/Q,EAAQC,YAAW,WACvBwG,GAAW,SAACsK,GAAD,MAAsB,YAAVA,EAAsB,KAAO,aACpD/C,GAAU5b,EAAW0b,EAAUG,EAAWxH,KACzC,KACH,OAAO,kBAAMtG,aAAaH,OACzB,CAAC8N,EAAU1b,EAAW6b,EAAWxH,IAE/BrU,EAEE,CAACsc,EAAQtO,GAFO,MCxCZ4Q,GAAe,SAAChiB,EAAQiO,EAAMgN,EAAaC,GACtD,IAAI+G,EAAY,GAChB,GAAsB,IAAlBjiB,EAAOC,OAAc,OAAOgiB,EAEhC,IAAIC,EAAa,CAAC,EAAGliB,EAAOC,OAAS,GACjCkiB,EAAe,CAAC,EAAGniB,EAAOC,OAAS,GAEjB,SAAlBgO,EAAK8M,WACPmH,EAAajU,EAAKsT,MAGE,cAAlBtT,EAAK8M,UAA8C,aAAlB9M,EAAK8M,WACxCmH,EAAaE,GAAcpiB,EAAQiO,EAAK8M,SAAU9M,EAAK8S,UAAW9S,EAAK8S,YAGrD,cAAhB9F,GAA+C,aAAhBA,IACjCkH,EAAeE,GAAgBriB,EAAQkiB,EAAYjH,EAAaC,IAC9C,SAAhBD,IAAwBkH,EAAeD,GAE3C,IAAK,IAAIxY,EAAI,EAAGA,EAAI1J,EAAOC,OAAQyJ,IAIjC,GAHA1J,EAAO0J,GAAG4Y,YAAa,EACnBtiB,EAAO0J,GAAGwE,MAAQgU,EAAW,KAAIliB,EAAO0J,GAAG4Y,YAAa,GACxDtiB,EAAO0J,GAAGwE,MAAQgU,EAAW,KAAIliB,EAAO0J,GAAG4Y,YAAa,KACxDtiB,EAAO0J,GAAGwE,MAAQiU,EAAa,IAAnC,CACA,GAAIniB,EAAO0J,GAAGwE,MAAQiU,EAAa,GAAI,MACvCF,EAAU/hB,KAAKF,EAAO0J,IAExB,OAAOuY,GAGHG,GAAgB,SAACpiB,EAAQiD,EAAOsf,EAAYC,GAChD,IAAMC,EAAQ,CAACziB,EAAO,GAAGkO,MAAOlO,EAAOA,EAAOC,OAAS,GAAGiO,OAEpDwU,EAAQ1iB,EAAOka,MAAK,SAACjR,GAAD,OAAWA,EAAMhG,KAAWsf,KAClDG,IAAOD,EAAM,GAAKC,EAAMxU,OAC5B,IAAM0I,EAAM5W,EAAOka,MAAK,SAACjR,GAAD,OAAWA,EAAMhG,KAAWuf,EAAW,KAG/D,OAFI5L,IAAK6L,EAAM,GAAK7L,EAAI1I,MAAQ,GAEzBuU,GAGHJ,GAAkB,SAACriB,EAAQkiB,EAAYjH,EAAaC,GACxD,IAAM1Z,GAAUxB,EAAO,GAAGkO,MACtBuU,EAAQ,CACVziB,EAAOkiB,EAAW,GAAK1gB,GAAQyZ,GAC/Bjb,EAAOkiB,EAAW,GAAK1gB,GAAQyZ,IAIjC,OAFAwH,EAAM,GAAKA,EAAM,GAAKvH,EAAc,GACpCuH,EAAM,GAAKA,EAAM,GAAKvH,EAAc,GAC7BkH,GAAcpiB,EAAQib,EAAawH,EAAM,GAAIA,EAAM,KClC/CE,GAAgB,uCAAG,WAAOvf,EAAWyG,GAAlB,+BAAAlI,EAAA,wDACiByB,EAAU2Y,aAAjDd,EADsB,EACtBA,YAAaC,EADS,EACTA,cAAeU,EADN,EACMA,OAE9B/F,EAAO,GACP+M,EAAoB,GAEpBC,EAAUnjB,IAAK0D,GANS,IAAAzB,EAAA,iBAQrB+H,GARqB,iCAAA/H,EAAA,yDAStBlC,EAAUoK,EAAMH,GAAGjK,QACpBoW,EAAKpW,GAVkB,gCAUc0G,EAAG2c,YAAYrjB,GAV7B,OAURoW,EAAKpW,GAVG,cAaxBO,EAASgiB,GAAanM,EAAKpW,GAASO,OAAQ6J,EAAMH,GAAIuR,EAAaC,GAEjEoH,EAAatiB,EAAOkE,KAAI,SAAC+E,GAAD,OAAWA,EAAMqZ,cACzCS,EAAiBT,EAAWU,SAAQ,GACpCC,EAAgBX,EAAWY,aAAY,GACvCC,EAAWnjB,EAAO+iB,GAAgBvhB,OAClC4hB,EAASpjB,EAAOijB,GAAezhB,OAASxB,EAAOijB,GAAehjB,OAG9DojB,EAAiBC,gCAAsBzN,EAAKpW,GAASmF,YAAaiR,EAAKpW,GAASO,QAChFujB,EAAsBF,EAAe/P,QACzC,SAAC3R,GAAD,OAAOA,EAAEH,QAAU2hB,GAAYxhB,EAAEH,OAAS4hB,KAGtC3B,EAAO,CACXjiB,YAAaqK,EAAMH,GAAGlK,YACtBuK,WAAY,CAAE0X,KAAM5X,EAAMH,GAAGqR,SAAUyI,WAAY3Z,EAAMH,GAAGqX,WAC5D7K,YAAaL,EAAKpW,GAASyW,YAC3BqN,sBACAjC,UAAWzX,EAAMH,GAAG4X,YAID,EA2BnBG,EAAKxL,YAAcwN,GAAczjB,GACjCyhB,EAAKxL,YAAcwL,EAAKxL,YAAY/R,KAAI,SAACiW,GAAD,mBAAC,eAAaA,GAAOyB,EAAOhL,KAAKuJ,EAAGlU,UAG9Ewb,EAAKvL,YAAcuL,EAAKvL,YAAYhS,KAAI,SAACwf,GAAD,mBAAC,eAAaA,GAAO9H,EAAOC,KAAK6H,EAAGzd,UAC5Ewb,EAAK9c,QAAUjF,IAAK,CAAEmjB,UAASpB,OAAMkC,KAAMhkB,SAC3CijB,EAAkB1iB,KAAKuhB,GArEK,2CAQrB/X,EAAI,EARiB,YAQdA,EAAIG,EAAM5J,QARI,0CAQrByJ,GARqB,eAQIA,IARJ,gDAuEvBkZ,GAvEuB,4CAAH,wDA0EvBa,GAAgB,SAACzjB,GAGrB,IAAMiW,EAAc,GACpB,GAAsB,IAAlBjW,EAAOC,OAAc,OAAOgW,EAEhC,IAAI2N,EAAa,KACbC,EAAW,KACXjT,EAAO,GACPiG,EAAU7W,EAAO,GAAG6W,QAEpBrV,EAAS,GACTxB,EAAO,GAAGwB,OAAS,IAAGA,EAAOA,OAASxB,EAAO,GAAGwB,QAEpD,IAdgC,EAc5BsiB,GAAe,EACfC,GAAa,EAfe,cAiBd/jB,GAjBc,IAiBhC,2BAA0B,CAAC,IAAlBiJ,EAAiB,QACxB,GAAIA,EAAM4N,UAAYA,EAAS,CAC7B,IAAMmN,EAAU,aAAK/d,KAAM4Q,EAASrT,MAAOoN,GAASpP,GACjC,OAAfoiB,IAAqBI,EAAWJ,WAAaA,GAChC,OAAbC,IAAmBG,EAAWH,SAAWA,GAE7C5N,EAAY/V,KAAK8jB,GAEjBxiB,EAAS,GACLyH,EAAMzH,OAAS,IAAGA,EAAOA,OAASyH,EAAMzH,QAE5CoiB,EAAa,KACbC,EAAW,KACXjT,EAAO,IAGJkT,GAAgB7a,EAAMqZ,aACzBsB,EAAa3a,EAAMzH,OACnBsiB,GAAe,IAEbA,GAAiBC,GAAe9a,EAAMqZ,aACxCuB,EAAW5a,EAAMzH,OAAS,EAC1BuiB,GAAa,GAGfnT,EAAOA,EAAO3H,EAAMmR,IAAMnR,EAAM2H,KAAO3H,EAAMW,KAC7CiN,EAAU5N,EAAM4N,SA3Cc,8BA6ChC,GAAIjG,EAAK3Q,OAAS,EAAG,CACnB,IAAM+jB,EAAU,aAAK/d,KAAM4Q,EAASrT,MAAOoN,GAASpP,GACjC,OAAfoiB,IAAqBI,EAAWJ,WAAaA,GAChC,OAAbC,IAAmBG,EAAWH,SAAWA,GAC7C5N,EAAY/V,KAAK8jB,GAEnB,OAAO/N,G,UCnGMgO,GArCF,SAAC,GAAuC,IAArCnW,EAAoC,EAApCA,SAAUS,EAA0B,EAA1BA,OAAQ2V,EAAkB,EAAlBA,MAAO1b,EAAW,EAAXA,KA4BvC,OACE,eAAC+E,EAAA,EAAD,CAAO4W,MAAI,EAACrd,QAtBV,cAACY,EAAA,EAAD,CACEgF,UAAQ,EACRzF,KAAe,SAATuB,EAAkB,cAAgB,WACxCwG,KAAK,OACL9H,MAAO,CACL+H,SAAU,WACVmV,UAAW,aACXtP,UAAW,SACX4H,WAAY,QACZ7B,YAAa,QACbwJ,aAAc,QACdlI,WAAY,QACZmI,cAAe,QACf5P,WAAqB,SAATlM,EAAkB,SAAW,OACzCrB,MAAO,QACPwN,OAAQ,oBAOd,UACGpG,EAAS,6BAAKA,IAAe,KAC7B2V,EAAQA,EAAMhgB,KAAI,SAAC0M,EAAMlH,GAAP,OAAa,4BAAYkH,GAAJlH,MAAiB,KACxDoE,MCDQyW,GA3BO,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAU9iB,EAAc,EAAdA,QACjC,EAAwB2E,mBAAS,IAAjC,mBAAOP,EAAP,KAAawJ,EAAb,KACA,EAA0BjJ,mBAAS,GAAnC,mBAAOuL,EAAP,KAAcvC,EAAd,KAoBA,GAZAjH,qBAAU,WACR,IAAKoc,EAEH,OADAlV,EAAQ,IACD,KAET,IAAMvN,EAAIyiB,EAASvkB,OACnBoP,EAASO,KAAKC,KAAK9N,EArBN,KAsBb,IAAI+N,EAAU,GACV/N,EAAI,IAAG+N,EAAU0U,EAAStU,MAAM,EAvBvB,KAwBbZ,EAAQQ,KACP,CAAC0U,IAEC1e,EAEL,OAAO,cAAC,GAAD,CAAiBA,KAAMA,EAAM8L,MAAOA,EAAOlQ,QAASA,EAAS2Q,WApBjD,SAACE,GAClB,IAAM/Q,EAVO,IAUG+Q,EAAa,GACvBzC,EAAU0U,EAAStU,MAAM1O,EAAQA,EAX1B,IAYb8N,EAAQQ,OCTN2U,GAAiB,SAAC,GAA0B,IAAxBrhB,EAAuB,EAAvBA,UAAWyG,EAAY,EAAZA,MAC7BkS,EAAY,OAAG3Y,QAAH,IAAGA,OAAH,EAAGA,EAAW2Y,aAWhC,OAAKA,EAEH,sBAAK7U,MAAO,CAAEuF,cAAe,MAAOyP,MAAO,MAAOrB,YAAa,OAA/D,UACE,cAAC6J,GAAD,CAAY3I,aAAcA,EAAcC,gBAbpB,SAACC,GACvB9V,EAAGwS,iBAAiBvV,EAAW,eAAgB6Y,MAa7C,qBAAK/U,MAAO,CAAE4F,OAAQ,QAAtB,SATGjD,EAC+B,KAApB,OAAZkS,QAAY,IAAZA,OAAA,EAAAA,EAAcL,eAA4B,KACvC,eAACpU,EAAA,EAAD,4BAAuBuC,EAAM5J,UAFjB,OAUjB,uBACA,cAAC,GAAD,CAAkBmD,UAAWA,EAAWyG,MAAOA,OANzB,MAWtB6a,GAAalU,IAAMC,MAAK,YAAwC,IAArCsL,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,gBAC7C,EAA8B3V,mBAAS,MAAvC,mBAAOse,EAAP,KAAgBC,EAAhB,KACA,EAAsBve,mBAAS,KAA/B,mBAAOwe,EAAP,KAAYC,EAAZ,KACM3J,EAAaY,EAAaZ,YAAc,EAE9C/S,qBAAU,WACR,IAAMyc,EAAM,GAAMjV,KAAKmV,MAAchJ,EAAaha,EAAIoZ,EAAzB,KAC7B2J,EAAOD,IAAQjV,KAAKmV,MAAMF,GAAOA,EAAIG,QAAQ,GAAKH,GAClDD,EAAW7I,KACV,CAACZ,EAAYY,EAAc6I,IAE9Bxc,qBAAU,WACR,GAAIuc,IAAY5I,EAAc,OAAO,KACrC,IAAM/K,EAAQC,YAAW,WACvB+K,EAAgB2I,KACf,KACH,OAAO,kBAAMxT,aAAaH,MACzB,CAAC2T,EAAS5I,EAAcC,IAE3B,IAAMiJ,EAAkB,SAAChiB,EAAOO,GAC9BwY,EAAgB,2BAAKD,GAAN,kBAAqB9Y,EAAQO,MA0C9C,OAAgB,OAAZmhB,EAAyB,KAG3B,eAAC3Y,EAAA,EAAD,WACE,eAACA,EAAA,EAAK4I,MAAN,WACE,cAACjN,EAAA,EAAD,CAAM1B,KAAK,YACX,gCACE,oDACA,cAAC,GAAD,CACEsI,OAAQ,yBACR2V,MAAO,CACL,6CACA,+HACA,kJAQR,eAAClY,EAAA,EAAK4I,MAAN,CAAYC,OAAO,QAAnB,UACE,cAAC7I,EAAA,EAAK8M,MAAN,CACElM,OAAK,EACLsQ,IAAK,EACLsC,IAAKrE,EACLjP,MAAO,kCACP8C,KAAK,OACL+J,QAAS9M,KACTzD,KAAK,SACLhF,MAAOmhB,EAAQ5iB,EACfoK,SAhDU,SAAC9K,EAAG+K,GACpB,IAAI5I,EAAQ2Z,OAAO/Q,EAAE5I,OAErBshB,EAAOlV,KAAKmV,MAAO,IAAMvhB,EAAS2X,IAClCyJ,GAAW,SAAChM,GAAD,mBAAC,eAAkBA,GAAnB,IAA4B7W,EAAGyB,UA+CtC,cAACwI,EAAA,EAAK8M,MAAN,CACElM,OAAK,EACLsQ,IAAK,EACLgI,KAAM,EACN1F,IAAK,IACLtT,MAAO,kCACP8C,KAAK,OACL+J,QAAS9M,KACTzD,KAAK,SACLhF,MAAOqhB,EACP1Y,SAtDY,SAAC9K,EAAG+K,GACtB,IAAI5I,EAAQ2Z,OAAO/Q,EAAE5I,OAEjB2hB,EAASvV,KAAKC,KAAMrM,EAAQ,IAAO2X,GACnCgK,GAAU,IACZL,EAAOthB,GACPohB,GAAW,SAAChM,GAAD,mBAAC,eAAkBA,GAAnB,IAA4B7W,EAAGojB,cAoD1C,eAACnZ,EAAA,EAAK4I,MAAN,WACE,eAAC5I,EAAA,EAAK8M,MAAN,CAAYjM,MAAO,EAAnB,UACE,4CACA,cAACuY,GAAA,EAAD,CACEC,QAAM,EACNrW,KAAK,OACLwN,SACGT,EAAaV,SACkB,gBAA/BU,EAAaf,eAAmCe,EAAaL,cAAgB,EAEhFvP,SAtFc,SAAC9K,EAAG+K,GAC1B6Y,EAAgB,WAAY7Y,EAAEoQ,eAyF1B,eAACxQ,EAAA,EAAK8M,MAAN,CAAYjM,MAAO,EAAnB,UACE,yCACA,cAACZ,GAAA,EAAD,CAAO+C,KAAK,OAAOxG,KAAK,SAAS0U,IAAK,EAAG1Z,MAAOmhB,EAAQvJ,KAAMjP,SAhGjD,SAAC9K,EAAG+K,GACvBwY,GAAW,SAAChM,GAAD,mBAAC,eAAkBA,GAAnB,IAA4BwC,KAAM+B,OAAO/Q,EAAE5I,qBAmGpD,eAACwI,EAAA,EAAK4I,MAAN,CAAY+H,SAAO,EAAC9H,OAAO,QAA3B,UACE,eAAC7I,EAAA,EAAK8M,MAAN,WACE,wCACA,cAAC,GAAD,CACEvK,OAAQ,oBACR2V,MAAO,CACL,8LACA,2FACA,mGAIN,cAAClY,EAAA,EAAK8M,MAAN,UACE,cAACsM,GAAA,EAAD,CACEpW,KAAK,OACL9C,MAAM,YACNsQ,QAAST,EAAaT,iBACtBnP,SA7GiB,SAAC9K,EAAG+K,GAC7B6Y,EAAgB,mBAAoB7Y,EAAEoQ,cA+GlC,cAACxQ,EAAA,EAAK8M,MAAN,UACE,cAACsM,GAAA,EAAD,CACEpY,SAAyC,gBAA/B+O,EAAaf,cACvBhM,KAAK,OACL9C,MAAM,QACNsQ,QAAST,EAAaR,mBACtBpP,SAnHiB,SAAC9K,EAAG+K,GAC7B6Y,EAAgB,qBAAsB7Y,EAAEoQ,iBAsHtC,eAACxQ,EAAA,EAAK4I,MAAN,WACE,cAAC5I,EAAA,EAAK8M,MAAN,CACEjM,MAAO,EACPG,SAC4B,SAA1B+O,EAAahB,UAAsD,iBAA/BgB,EAAaf,cAEnDkC,IAAK,EACLgI,KAAM,GACN1F,IAAK,IACLtT,MACE,uDAEE,cAAC,GAAD,CACEqC,OAAO,uCACP2V,MAAO,CAAC,uQAAD,0fAWblV,KAAK,OACL+J,QAAS9M,KACTzD,KAAK,SACLhF,MAAOmhB,EAAQjJ,cACfvP,SAtKY,SAAC9K,EAAG+K,GACtBwY,GAAW,SAAChM,GAAD,mBAAC,eAAkBA,GAAnB,IAA4B8C,cAAeyB,OAAO/Q,EAAE5I,eAwK3D,eAACwI,EAAA,EAAK8M,MAAN,WACE,iDAEA,cAACsM,GAAA,EAAD,CACEC,QAAM,EACNrY,SAC4B,SAA1B+O,EAAahB,UAAsD,iBAA/BgB,EAAaf,cAEnDhM,KAAK,OACLwN,QAAST,EAAaJ,WACtBxP,SAhLiB,SAAC9K,EAAG+K,GAC7B6Y,EAAgB,aAAc7Y,EAAEoQ,UAgLxBtV,MAAO,CAAEiV,WAAY,qBAQ3BmJ,GAAoB,CACxB,CAAErf,KAAM,MAAO4G,MAAO,GACtB,CAAE5G,KAAM,OAAQ4G,MAAO,GACvB,CAAE5G,KAAM,QACR,CAAEA,KAAM,KACR,CAAEA,KAAM,WAGJsf,GAAmB,SAAC,GAA0B,IAAD,MAAvBniB,EAAuB,EAAvBA,UAAWyG,EAAY,EAAZA,MAC/BI,EAAU,OAAG7G,QAAH,IAAGA,GAAH,UAAGA,EAAW2Y,oBAAd,aAAG,EAAyB9R,WACtCuR,EAAU,OAAGpY,QAAH,IAAGA,GAAH,UAAGA,EAAW2Y,oBAAd,aAAG,EAAyBP,WACtCgK,EAA0D,iBAAlC,OAATpiB,QAAS,IAATA,GAAA,UAAAA,EAAW2Y,oBAAX,eAAyBf,eAC9C,EAAwB3U,mBAAS,IAAjC,mBAAOP,EAAP,KAAawJ,EAAb,KAEMmW,EAAgBjV,IAAMkV,aAC1B,SAACC,GACC,IAAM5J,EAAY,2BACb3Y,EAAU2Y,cADG,IAEhBP,WAAW,2BAAMA,GAAP,kBAAoBvR,EAAa0b,MAE7Cxf,EAAGwS,iBAAiBvV,EAAW,eAAgB2Y,KAEjD,CAAC3Y,EAAWoY,EAAYvR,IAqC1B,GAlCA7B,qBAAU,WACR,GAAKoT,GAAevR,GAAeub,GAC9BhK,EAAWvR,GAChB,GAAKJ,GAA0B,IAAjBA,EAAM5J,QAIpB,GAAK4J,EAAM,GAAGyX,UAAd,CAEA,IAAMsE,EAAW/b,EAAMxK,QAAO,SAACgG,EAAKoc,GAClC,IAAMje,EAAQ2B,OAAOY,OAAO0b,EAAKH,WAAW,GAK5C,OAJKjc,EAAI7B,KAAQ6B,EAAI7B,GAAS,CAAEqiB,KAAM,EAAGrI,OAAQ,IAC7CiE,EAAKjE,OACPnY,EAAI7B,GAAOga,SACNnY,EAAI7B,GAAOqiB,OACXxgB,IACN,IACHiK,EACEkM,EAAWvR,GAAY/F,KAAI,SAAClB,GAAD,2BAAC,eACvBA,GADsB,IAEzB8iB,EAAC,UAAEF,EAAS5iB,EAAI0C,aAAf,aAAE,EAAoBmgB,KACvBrI,OAAM,UAAEoI,EAAS5iB,EAAI0C,aAAf,aAAE,EAAoB8X,mBAjB9BlO,EAAQkM,EAAWvR,GAAY/F,KAAI,SAAClB,GAAD,MAAU,CAAE0C,KAAM1C,EAAI0C,KAAMogB,EAAG,EAAGtI,OAAQ,SAoB9E,CAAChC,EAAY3R,EAAOyF,EAASrF,EAAYub,IAE5Cpd,qBAAU,WAAO,IAAD,EACd,IAAKoT,IAAevR,IAAeub,EAAc,OAAO,KACxD,IAAIhK,EAAWvR,GAAf,CACA,IAAMnG,EAAa,UAAGV,EAAUU,qBAAb,aAAG,EAA0BmG,GAC3CnG,GACL2hB,EAAc3hB,EAAcI,KAAI,SAACwB,GAAD,MAAW,CAAEA,KAAMA,EAAKA,KAAM0Z,OAAO,UACpE,CAAChc,EAAW6G,EAAYub,EAAcC,EAAejK,KAEnDA,IAAevR,IAAeub,EAAc,OAAO,KACxD,IAAKhK,EAAWvR,GAAa,OAAO,KAEpC,IAAM8b,EAAmBjgB,EAAK5B,KAAI,SAACkI,EAAG1C,GAyBpC,OAxBA0C,EAAC,eAAQA,IACP4Z,IACA,cAACZ,GAAA,EAAD,CACE5I,QAASpQ,EAAEgT,MACX1Y,QAAS,WACPZ,EAAK4D,GAAG0V,OAAShT,EAAEgT,MACnBqG,EAAc,aAAI3f,OAIxBsG,EAAE6Z,KACA,cAACve,EAAA,EAAD,CACET,KAAK,mBACLC,MAAO,CAAE+V,QAAS,IAAKvI,WAAY,SACnChO,QAAS,WACP+e,EACE3f,EAAK5B,KAAI,SAACmU,EAAG2F,GAEX,OADA3F,EAAE+G,MAAQpB,IAAMtU,EACT2O,SAMVjM,KAYT,OACE,eAACJ,EAAA,EAAD,WACE,eAACA,EAAA,EAAK4I,MAAN,WACE,cAACjN,EAAA,EAAD,CAAM1B,KAAK,YACX,8BACE,8DAGJ,cAACyB,EAAA,EAAD,CACEiF,SAAO,EACPpF,QAAQ,UACRL,MAAO,CAAE+V,QAAS,MAAOiJ,aAAc,OACvCxf,QArBS,WACb+e,EACE3f,EAAK5B,KAAI,SAACmU,GAER,OADAA,EAAE+G,OAAQ,EACH/G,SAmBT,cAAC,GAAD,CAAemM,SAAUuB,EAAkBrkB,QAAS4jB,SAM3C9U,OAAMC,KAAKgU,IC7TpB0B,GAAgB,SAACljB,GACrB,IAAMmjB,EAAI,CACRla,MAAOjJ,EAAMojB,cAAcC,WAAW,IAAK,KAC3CC,MAAM,EACNC,QAAQ,EACRxX,KAAM,EACNF,SAAS,EACT2X,SAAS,EACT9F,YAAY,GAMd,MAJI,CAAC,QAAS,YAAYrQ,SAASrN,KACjCmjB,EAAEpX,KAAO,EACToX,EAAEG,MAAO,GAEJH,GAGHM,GAAqB,SAAC,GAA+C,IAA7CrkB,EAA4C,EAA5CA,OAAQ0Z,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,gBAC5C2K,EAAS,SAACC,EAAO3jB,EAAOV,EAAKiB,GACjC,IAAMqjB,EAAS,eAAQ9K,EAAaH,QAEpCiL,EAAUD,GAAO3jB,GAAOV,GAAOiB,EAC/BwY,EAAgB,2BAAKD,GAAN,IAAoBH,OAAQiL,MAGvCC,EAAe,SAACF,EAAOvkB,EAAQY,GACnC,MAAc,SAAV2jB,EAAyB,KAE3B,cAACxB,GAAA,EAAD,CACE5I,QAASna,EAAOY,GAAO6L,QACvB3C,SAAU,kBAAMwa,EAAOC,EAAO3jB,EAAO,WAAYZ,EAAOY,GAAO6L,aAK/DiY,EAAa,SAACH,EAAOvkB,EAAQY,GACjC,OACE,cAACgJ,GAAA,EAAD,CACE+C,KAAK,OACLxL,MAAOnB,EAAOY,GAAOiJ,MACrBhF,MAAO,CAAE+V,QAAS,IAAKpQ,MAAO,QAC9BV,SAAU,SAAC9K,EAAG+K,GAAJ,OAAUua,EAAOC,EAAO3jB,EAAO,QAASmJ,EAAE5I,WAKpDwjB,EAAY,SAACJ,EAAOvkB,EAAQY,GAChC,OACE,cAACmiB,GAAA,EAAD,CACE5I,QAASna,EAAOY,GAAOsjB,KACvBpa,SAAU,kBAAMwa,EAAOC,EAAO3jB,EAAO,QAASZ,EAAOY,GAAOsjB,UAK5DU,EAAc,SAACL,EAAOvkB,EAAQY,GAClC,OACE,cAACmiB,GAAA,EAAD,CACE5I,QAASna,EAAOY,GAAOujB,OACvBra,SAAU,kBAAMwa,EAAOC,EAAO3jB,EAAO,UAAWZ,EAAOY,GAAOujB,YAK9DU,EAAe,SAACN,EAAOvkB,EAAQY,GACnC,MAAc,SAAV2jB,EAAyB,KAE3B,cAACxB,GAAA,EAAD,CACE5I,QAASna,EAAOY,GAAOwjB,QACvBta,SAAU,kBAAMwa,EAAOC,EAAO3jB,EAAO,WAAYZ,EAAOY,GAAOwjB,aAK/DU,EAAkB,SAACP,EAAOvkB,EAAQY,GACtC,MAAc,SAAV2jB,EAAyB,KAE3B,cAACxB,GAAA,EAAD,CACE5I,QAASna,EAAOY,GAAO0d,WACvBxU,SAAU,kBAAMwa,EAAOC,EAAO3jB,EAAO,cAAeZ,EAAOY,GAAO0d,gBAKlEyG,EAAY,SAACR,EAAOvkB,EAAQY,GAChC,OACE,cAACgJ,GAAA,EAAD,CACE+C,KAAK,OACLxL,MAAOoM,KAAKmV,MAA2B,IAArB1iB,EAAOY,GAAO+L,MAChCxG,KAAK,SACL0D,MAAM,IACNgR,IAAK,EACLsC,IAAK,IACL0F,KAAM,GACNhe,MAAO,CAAE2F,MAAO,OAAQoQ,QAAS,IAAKtI,OAAQ,QAC9CxI,SAAU,SAAC9K,EAAG+K,GACZ,IAAMib,EAAKlK,OAAO/Q,EAAE5I,OAChBub,MAAMsI,IACVV,EAAOC,EAAO3jB,EAAO,OAAQ2M,KAAKmV,MAAMsC,GAAM,SAMhDxlB,EAAO,SAAC+kB,EAAOvkB,GACnB,IAAMN,EAAIoD,OAAOC,KAAK/C,GAAQpC,OAC9B,OAAOkF,OAAOC,KAAK/C,GAAQ6B,KAAI,SAACjB,EAAOyG,GACrC,OACE,eAACyI,GAAA,EAAMpG,IAAP,WACS,IAANrC,EACC,cAACyI,GAAA,EAAMC,KAAP,CAA8BkV,QAASvlB,EAAvC,SACE,4BAAI6kB,KADN,eAAyBld,IAGvB,KACJ,cAACyI,GAAA,EAAMC,KAAP,UAA+BnP,GAA/B,eAAyByG,IACzB,cAACyI,GAAA,EAAMC,KAAP,CAAgClL,MAAO,CAAE6D,UAAW,QAApD,SACG+b,EAAaF,EAAOvkB,EAAQY,IAD/B,iBAA2ByG,IAG3B,cAACyI,GAAA,EAAMC,KAAP,CAA8BlL,MAAO,CAAE+V,QAAS,OAAhD,SACG8J,EAAWH,EAAOvkB,EAAQY,IAD7B,eAAyByG,IAGzB,cAACyI,GAAA,EAAMC,KAAP,CAA6BlL,MAAO,CAAE+V,QAAS,OAA/C,SACGmK,EAAUR,EAAOvkB,EAAQY,IAD5B,cAAwByG,IAGxB,cAACyI,GAAA,EAAMC,KAAP,CAA6BlL,MAAO,CAAE6D,UAAW,QAAjD,SACGic,EAAUJ,EAAOvkB,EAAQY,IAD5B,cAAwByG,IAGxB,cAACyI,GAAA,EAAMC,KAAP,CAA+BlL,MAAO,CAAE6D,UAAW,QAAnD,SACGkc,EAAYL,EAAOvkB,EAAQY,IAD9B,gBAA0ByG,IAG1B,cAACyI,GAAA,EAAMC,KAAP,CAAgClL,MAAO,CAAE6D,UAAW,QAApD,SACGmc,EAAaN,EAAOvkB,EAAQY,IAD/B,iBAA2ByG,IAG3B,cAACyI,GAAA,EAAMC,KAAP,CAAmClL,MAAO,CAAE6D,UAAW,QAAvD,SACGoc,EAAgBP,EAAOvkB,EAAQY,IADlC,oBAA8ByG,MAzBhC,gBAAyBA,QAiC/B,OACE,eAACyI,GAAA,EAAD,CAAOoV,YAAU,EAAC1U,SAAO,EAACH,aAAW,EAACI,YAAU,EAAhD,UACE,cAACX,GAAA,EAAM7K,OAAP,UACE,eAAC6K,GAAA,EAAMpG,IAAP,WACE,cAACoG,GAAA,EAAMa,WAAP,CAA8BnG,MAAO,GAAf,SACtB,cAACsF,GAAA,EAAMa,WAAP,CAA8BnG,MAAO,EAArC,kBAAsB,SAGtB,cAACsF,GAAA,EAAMa,WAAP,CAAgCnG,MAAO,EAAvC,SACE,cAAClF,EAAA,EAAD,CAAM1B,KAAK,eADS,WAGtB,cAACkM,GAAA,EAAMa,WAAP,CAA8BnG,MAAO,EAArC,kBAAsB,SAGtB,cAACsF,GAAA,EAAMa,WAAP,CAA6BnG,MAAO,EAApC,wBAAsB,QAGtB,cAACsF,GAAA,EAAMa,WAAP,CAA6BnG,MAAO,EAApC,SACE,cAAClF,EAAA,EAAD,CAAM1B,KAAK,UADS,QAGtB,cAACkM,GAAA,EAAMa,WAAP,CAA+BnG,MAAO,EAAtC,SACE,cAAClF,EAAA,EAAD,CAAM1B,KAAK,YADS,UAGtB,cAACkM,GAAA,EAAMa,WAAP,CAAgCnG,MAAO,EAAvC,SACE,cAAClF,EAAA,EAAD,CAAM1B,KAAK,mBADS,WAGtB,cAACkM,GAAA,EAAMa,WAAP,CAAkCnG,MAAO,EAAzC,SACE,cAAClF,EAAA,EAAD,CAAM1B,KAAK,eADS,eAvBT,YA4BjB,eAACkM,GAAA,EAAMc,KAAP,WACGpR,EAAK,OAAQQ,EAAOwZ,MACpBha,EAAK,OAAQQ,EAAOuO,aAMd4W,GA1NY,SAAC,GAA0B,IAAxBpkB,EAAuB,EAAvBA,UAAWyG,EAAY,EAAZA,MACvC,EAA4BxD,mBAAS,CAAEuK,KAAM,GAAIiL,KAAM,KAAvD,mBAAOxZ,EAAP,KAAeiU,EAAf,KACMyF,EAAY,OAAG3Y,QAAH,IAAGA,OAAH,EAAGA,EAAW2Y,aAuBhC,OAlBA3T,qBAAU,WACR,GAAI,OAAC2T,QAAD,IAACA,KAAcH,QACd/R,EAAL,CACA,IAHc,EAGR3D,EAAI6V,EAAaH,OAHT,cAIG/R,GAJH,IAId,2BAAwB,CAAC,IAAhB4X,EAAe,QACtB,GAAIA,EAAKT,WAAY,CAAC,IAAD,gBACGS,EAAKT,YADR,IACnB,2BAAuC,CAAC,IAA/ByG,EAA8B,QAChCvhB,EAAE0K,KAAK6W,KAAYvhB,EAAE0K,KAAK6W,GAAatB,GAAcsB,KAFzC,+BAKrB,GAAIhG,EAAKP,WAAY,CAAC,IAAD,gBACGO,EAAKP,YADR,IACnB,2BAAuC,CAAC,IAA/BwG,EAA8B,QAChCxhB,EAAE2V,KAAK6L,KAAYxhB,EAAE2V,KAAK6L,GAAavB,GAAcuB,KAFzC,iCAVT,8BAgBdpR,EAAUpQ,MACT,CAAC2D,EAAOkS,IACNA,EAGH,qBAAK7U,MAAO,CAAEygB,UAAW,QAAzB,SACE,cAAC,GAAD,CACEtlB,OAAQA,EACR0Z,aAAcA,EACdC,gBA7BkB,SAACC,GACvB9V,EAAGwS,iBAAiBvV,EAAW,eAAgB6Y,QAqBvB,MCnBtB2L,GAAoB,SAAC,GAAmB,IAAjBxkB,EAAgB,EAAhBA,UAC3B,EAA8B0e,GAAS1e,GAAvC,mBAAOyG,EAAP,KAAcge,EAAd,KACA,OAAKzkB,EAGH,8BACE,eAAC0H,EAAA,EAAD,CAAMgB,WAAS,EAACgc,OAAO,aAAapmB,QAAS,EAA7C,UACE,eAACoJ,EAAA,EAAKE,OAAN,CAAayB,cAAc,MAAMsb,WAAS,EAAClb,MAAO,EAAlD,UACE,cAACvF,EAAA,EAAD,CAAQyD,UAAU,SAAS7D,MAAO,CAAEwN,WAAY,UAAWvN,MAAO,SAAlE,iCAGA,cAAC,GAAD,CAAc/D,UAAWA,IACzB,0BAGF,eAAC0H,EAAA,EAAKE,OAAN,CAAa6B,MAAO,EAApB,UACE,cAACvF,EAAA,EAAD,CAAQyD,UAAU,SAAS7D,MAAO,CAAEwN,WAAY,UAAWvN,MAAO,SAAlE,0BAIA,cAAC,GAAD,CAAgB/D,UAAWA,EAAWyG,MAAOA,OAE/C,eAACiB,EAAA,EAAKE,OAAN,CAAa6B,MAAO,EAAG3F,MAAO,CAAE4F,OAAQ,QAAxC,UACE,cAACxF,EAAA,EAAD,CAAQyD,UAAU,SAAS7D,MAAO,CAAEwN,WAAY,UAAWvN,MAAO,SAAlE,gCAGA,qBAAKD,MAAO,CAAE8gB,UAAW,MAAOvV,SAAU,QAA1C,SACE,cAAC,GAAD,CAAoBrP,UAAWA,EAAWyG,MAAOA,MAEnD,sBAAK3C,MAAO,CAAE+H,SAAU,WAAYkN,WAAY,OAAQ1J,SAAU,QAAlE,UACE,cAACnL,EAAA,EAAD,CAAQyD,UAAU,SAAS7D,MAAO,CAAEwN,WAAY,UAAWvN,MAAO,SAAlE,0BAGA,eAACoO,GAAA,EAAD,CACE3G,UAAQ,EACRJ,OAAyB,mBAAjBqZ,GAAsD,YAAjBA,EAF/C,2BAKE,cAACrS,GAAA,EAAD,CAAQxG,KAAK,OAAb,SACoB,mBAAjB6Y,EAAoC,iBAAmB,gBAG5D,cAAC,GAAD,CAAiBhe,MAAOA,EAAOzG,UAAWA,EAAW0G,SAAU,gBAxClD,MAgDnBme,GAAkB,SAAC,GAAoC,IAAlCpe,EAAiC,EAAjCA,MAAOzG,EAA0B,EAA1BA,UAAW0G,EAAe,EAAfA,SAC3C,EAAkCzD,mBAAS,MAA3C,mBAAO0a,EAAP,KAAkBmH,EAAlB,KACA,EAAgD7hB,mBAAS,MAAzD,mBAAO8hB,EAAP,KAAyBC,EAAzB,KAEAhgB,qBAAU,WACR,GAAI,OAACyB,QAAD,IAACA,MAAQkX,GAAY,OAAO,KAChC4B,GAAiBvf,EAAW,CAACyG,EAAMkX,KAAa1Y,MAAK,SAACggB,GACpD,IAAMC,EAAcD,EAAgB,GACpCC,EAAY1e,KAAO,SAAChF,GAAD,OAAiBzC,QAAQC,IAAIwC,IAChDwjB,EAAoBE,QAErB,CAACze,EAAOkX,EAAWqH,EAAqBhlB,IAc3C,QAAI,OAACyG,QAAD,IAACA,KAAO5J,QAAS,EAAU,KAG7B,eAAC6K,EAAA,EAAKE,OAAN,CAAa6B,MAAO,EAApB,UACE,cAAC,kBAAD,CAAiB9K,EAAC,OAAE8H,QAAF,IAAEA,OAAF,EAAEA,EAAO5J,OAAQiO,MAAO6S,EAAWwH,SAAUL,IAf5DC,EAEH,qCACE,cAAC5S,GAAA,EAAD,CAAQ3G,UAAQ,EAACJ,OAA6B,OAArB2Z,EAAzB,SACE,cAAC3S,GAAA,EAAD,MAEF,cAAC,WAAD,CAAUiM,KAAM0G,EAAkBhpB,MAAK,OAAE2K,QAAF,IAAEA,OAAF,EAAEA,EAAU3K,MAAOsE,SAAU,QAN1C,SAsBnB+M,OAAMC,KAAKmX,I,oBCzFbY,GAAc,SAACC,GAC1B,IAAM3e,EAAQ,aACZtB,KAAMigB,EAAajgB,MAChBigB,EAAaA,EAAajgB,OAuB/B,MApB0B,aAAtBigB,EAAajgB,OACfsB,EAASwX,UAAT,aACKxX,EAASwX,UAAUhO,QAAO,SAAC+E,GAAD,OAAoB,MAAbA,EAAEqQ,UAAiC,IAAdrQ,EAAEqQ,YAE7D5e,EAASwX,UAAYxX,EAASwX,UAAUpd,KAAI,SAACmU,GAC3C,IAAMmJ,EAAQ,eAAQnJ,GAGtB,OAFImJ,EAASmH,aAAYnH,EAASriB,MAAQ,CAAC,SAC3CqiB,EAASriB,MAAQoG,2BAAiBic,EAASriB,OACpCqiB,MAIe,cAAtBiH,EAAajgB,OACfsB,EAAS8e,UAAY9e,EAAS8e,UAAU1kB,KAAI,SAAC2kB,GAC3C,IAAMC,EAAQ,eAAQD,GAEtB,OADAC,EAAS3pB,MAAQoG,2BAAiBujB,EAAS3pB,OACpC2pB,MAIJhf,GAuBIif,GAAc,SAACnY,EAAMoY,EAAM7pB,EAAOwG,GAC7C,IADwD,EAClDsjB,EAAU9pB,EAAME,QAAO,SAACgG,EAAKK,GAKjC,MAJoB,kBAATA,GACTL,EAAIK,EAAKA,MAAQ,EACjBL,EAAIK,EAAKwjB,QAAU,GACd7jB,EAAIK,GAAQ,EACZL,IACN,IACGnG,EAAa,GACbiqB,EAAY,aAAOhqB,GACnBiqB,EAAc,GACdC,EAAQzY,EAAK0Y,MAAM,MAX+B,cAYvCD,GAZuC,qBAgBtD,IAhBsD,IAY/CE,EAZ+C,QAahDC,EAASD,EAAK7Z,OAAO,MAEvB+Z,EAAUF,EACd,MAAiB,CAAC,QAAS,WAAY,SAAU,cAAjD,eAAgE,CAA3D,IAAIG,EAAI,KACXD,EAAUA,EAAQH,MAAR,WAAkBI,IAAQ,GAAGrU,OAEzC,GAAgB,KAAZoU,EAAgB,iBAChBR,EAAQQ,IAAUvqB,EAAWgB,KAAKupB,GACtCR,EAAQQ,GAAW,EAEnB,IAAME,EAAa,CACjBjkB,KAAM+jB,EACN9jB,OAAQA,EAAOC,MAAK,SAACC,GAAD,OAAOA,EAAEH,OAAS+jB,KACtCP,OAAQU,GAAWR,EAAaJ,EAAMS,EAASD,GAC/Chb,QAAS+a,EAAKjZ,SAAS,aACvBuZ,OAAQN,EAAKjZ,SAAS,YAGxB,GAAIiZ,EAAKjZ,SAAS,eAAgB,CAChC,IAAMwZ,EAAmBP,EAAKD,MAAM,gBAAgB,GAAGA,MAAM,KAAK,GAClEK,EAAWI,iBAAmBD,EAAiBR,MAAM,KAEvD,GAAIC,EAAKjZ,SAAS,UAAW,CAC3B,IAAInJ,EAAQoiB,EAAKD,MAAM,WAAW,GAAGA,MAAM,KAAK,GAChDK,EAAWxiB,MAAQ6iB,GAAiB7iB,GAEtCgiB,EAAajpB,KAAKypB,IA3BpB,2BAAwB,IAZgC,kDA0CvChkB,GA1CuC,yBA0C/CD,EA1C+C,QA2CtD,GAAIyjB,EAAavjB,MAAK,SAACvE,GAAD,OAAOA,EAAEqE,OAASA,EAAKA,QAAO,iBACpDA,EAAKwjB,OAAS,GACdC,EAAajpB,KAAKwF,IAHpB,2BAAyB,IA1C+B,8BAgDxD,MAAO,CAACyjB,EAAcjqB,IAGlB0qB,GAAa,SAACR,EAAa1jB,EAAM+jB,EAASD,GAG9C,IADA,IAAIN,EAASxjB,EACb,MAAoBP,OAAOC,KAAKgkB,GAAhC,eAA8C,CAAzC,IAAIa,EAAO,KAEVT,GADJS,EAAU9M,OAAO8M,IAEff,EAASE,EAAYa,WAEdb,EAAYa,GACnBb,EAAYI,GAAUC,GAI1B,OADAL,EAAYI,GAAUC,EACfP,GAGHc,GAAmB,SAACE,GACxB,IAAKA,EAAK,MAAO,UAEjB,IAAMC,EAAM5qB,SAAS6qB,cAAc,UAAUC,WAAW,MAGxD,OAFAF,EAAIG,UAAYJ,EAAI7U,OACN8U,EAAIG,W,UC0CdC,GAAe,SAACprB,EAAOuG,EAAMqJ,EAAWyb,GAK5C,IAJA,IAAM7oB,EAAIxC,EAAM6Y,WAAU,SAACnS,GAAD,OAAOA,EAAEH,OAASA,EAAKA,QAC7Cmc,EAAI,KAEF4I,EAAatrB,EAAMwC,GAAGunB,OACnBxf,EAAI,EAAGA,EAAIvK,EAAMc,OAAQyJ,IAC5BA,IAAM/H,GACNxC,EAAMuK,GAAGwf,SAAWuB,IAEN,SAAd1b,GACErF,EAAI/H,IAAY,OAANkgB,GAAcA,EAAInY,KAAImY,EAAInY,GAExB,OAAdqF,GACErF,EAAI/H,IAAY,OAANkgB,GAAcA,EAAInY,KAAImY,EAAInY,IAG5C,GAAU,OAANmY,EAAY,OAAO,KAEvB,IAAM6I,EAAQ,aAAOvrB,GACfgf,EAAOuM,EAAS/oB,GACtB+oB,EAAS/oB,GAAK+oB,EAAS7I,GACvB6I,EAAS7I,GAAK1D,EAEdqM,EAASE,IAGLC,GAAe,SAAC,GAAgD,EAA9C1B,QAA+C,IAAtCvjB,EAAqC,EAArCA,KAAMvG,EAA+B,EAA/BA,MAAOqrB,EAAwB,EAAxBA,SAAUjkB,EAAc,EAAdA,QACtD,EAA0CF,mBAAS,IAAnD,mBAAOukB,EAAP,KAAsBC,EAAtB,KACA,EAAkCxkB,mBAAS,IAA3C,mBAAOykB,EAAP,KAAkBC,EAAlB,KAEMC,EAAU,SAACpa,GACf,GAAa,KAATA,EAAa,OAAO,KACxB,MAAmCmY,GACjCnY,EACAlL,EACAvG,EACAA,EAAMmU,QAAO,SAACzN,GAAD,OAAOA,EAAEF,WAJxB,mBAAOwjB,EAAP,KAAqBjqB,EAArB,KAMA,GAAIA,EAAWe,OAAS,EAEtB,OADA4qB,EAAiB3rB,GACV,KAETsrB,EAASrB,GACT5iB,GAAQ,IAGV,OACE,sBAAKW,MAAO,CAAE+jB,OAAQ,MAAOne,OAAQ,SAArC,UACE,8BACY,KAATpH,EACC,mBAEA,wDACkB,4BAAIA,OAGxB,cAACgC,EAAA,EAAD,CAAQ8L,QAAQ,QAAQX,SAAO,EAAC7D,KAAK,OAAO/H,KAAK,SAASP,QAAS,kBAAMH,GAAQ,SAEnF,eAACyF,EAAA,EAAD,CAAMmJ,SAAU,kBAAM6V,EAAQF,IAA9B,UACE,eAACvd,EAAA,EAAD,CACEjH,KAAMskB,EAAc3qB,OAAS,EAC7B6G,QACE,cAACokB,GAAA,EAAD,CACE5e,WAAS,EACTH,SAAU,SAAC9K,EAAG+K,GACZ2e,EAAa3e,EAAE5I,OACfqnB,EAAiB,KAEnBrnB,MAAOsnB,EACP5jB,MAAO,CAAE4F,OAAQ,SACjBlB,YAAY,kCAXlB,+BAeoB,uBAClB,4BAAIgf,EAAcO,KAAK,WAEzB,cAACzjB,EAAA,EAAD,CAAQkF,OAAK,EAACrF,QAAQ,SAASb,QAAS,kBAAMskB,EAAQF,aAMxDM,GAAc,SAAC,GAAiD,IAA/CnC,EAA8C,EAA9CA,QAASvjB,EAAqC,EAArCA,KAAMvG,EAA+B,EAA/BA,MAAOqrB,EAAwB,EAAxBA,SAAUjkB,EAAc,EAAdA,QAC/C8kB,EAAS,SAACC,GACd,IAAInC,EAAehqB,EAAMmU,QAAO,SAACiY,GAAD,OAAWA,EAAM7lB,OAASA,KAEpDoI,EAAW,GACZwd,EAIHnC,EAAeA,EAAajlB,KAAI,SAACqnB,GAE/B,OADItC,EAAQvjB,GAAMoI,SAASwC,SAASib,EAAM7lB,QAAO6lB,EAAMrC,OAASD,EAAQvjB,GAAMwjB,QACvEqC,MALTC,GAAevC,EAASvjB,EAAMoI,GAC9Bqb,EAAeA,EAAa7V,QAAO,SAACiY,GAAD,OAAYzd,EAASwC,SAASib,EAAM7lB,UAUzE8kB,EAASrB,GACT5iB,GAAQ,IAGV,OACE,sBAAKW,MAAO,CAAE+jB,OAAQ,OAAtB,UACE,wCACS,4BAAIvlB,IADb,OAGA,eAAC+lB,GAAA,EAAD,CAAa7e,OAAK,EAAlB,UACGqc,EAAQvjB,GAAMoI,SAAS7N,OAAS,EAC/B,qCACE,cAACyH,EAAA,EAAD,CAAQP,MAAM,MAAMT,QAAS,kBAAM2kB,GAAO,IAA1C,iBAGA,cAAC3jB,EAAA,EAAD,CAAQP,MAAM,MAAMT,QAAS,kBAAM2kB,GAAO,IAA1C,uCAKF,cAAC3jB,EAAA,EAAD,CAAQP,MAAM,MAAMT,QAAS,kBAAM2kB,GAAO,IAA1C,iBAIF,cAAC3jB,EAAA,EAAD,CAAQhB,QAAS,kBAAMH,GAAQ,IAA/B,2BAMFmlB,GAAgB,SAAC,GAAyD,IAAvDzC,EAAsD,EAAtDA,QAASvjB,EAA6C,EAA7CA,KAAMvG,EAAuC,EAAvCA,MAAOqrB,EAAgC,EAAhCA,SAAUjkB,EAAsB,EAAtBA,QAASZ,EAAa,EAAbA,OAChE,EAAkCU,mBAAS4iB,EAAQvjB,GAAMwjB,QAAzD,mBAAOyC,EAAP,KAAkBC,EAAlB,KACA,EAAkCvlB,mBAASX,GAA3C,mBAAOolB,EAAP,KAAkBC,EAAlB,KAEMc,EAAa,CAAI,QAAJ,oBAAeC,GAAoB7C,EAASvjB,KAEzDqmB,EAAS,SAACtC,EAASkC,GACvB,GAAIlC,IAAY/jB,EAAM,CACpB,GAAgB,KAAZ+jB,EAAgB,OAAO,KAC3B,GAAIR,EAAQQ,GAAU,OAAO,KAE/B,IAAIuC,GAAY,EACZ7C,EAAehqB,EAAM+E,KAAI,SAACqnB,GAS5B,OARIA,EAAM7lB,OAASA,IACjB6lB,EAAM7lB,KAAO+jB,EACb8B,EAAMrC,OAASyC,EACfK,GAAY,GAEVT,EAAMrC,SAAWxjB,IACnB6lB,EAAMrC,OAASO,GAEV8B,KAELS,GAAW7sB,EAAMe,KAAK,CAAEwF,KAAM+jB,EAASP,OAAQyC,EAAWnd,QAAQ,IACtErP,EAAQA,EAAMmU,QAAO,SAAC5N,GAAD,MAA0B,SAAhBA,EAAKwjB,UAEpCsB,EAASrB,GACT5iB,GAAQ,IAGV,OACE,sBAAKW,MAAO,CAAE+jB,OAAQ,OAAtB,UACE,8BACGtlB,EAAS,gBAAkB,6BAC5B,cAAC+B,EAAA,EAAD,CAAQ8L,QAAQ,QAAQX,SAAO,EAAC7D,KAAK,OAAO/H,KAAK,SAASP,QAAS,kBAAMH,GAAQ,SAGnF,eAACyF,EAAA,EAAD,CAAMmJ,SAAU,kBAAM4W,EAAOjB,EAAWa,IAAxC,UACE,eAAC3f,EAAA,EAAK8M,MAAN,CAAYmT,QAAM,EAAlB,UACE,uBAAO/kB,MAAO,CAAEC,MAAO,SAAvB,qBACA,cAAC8R,GAAA,EAAD,CACEzV,MAAOmoB,EACPzkB,MAAO,CAAEiS,SAAU,QACnB9C,QAASwV,EAAc3nB,KAAI,SAACglB,EAAQxf,GAClC,MAAO,CACLnH,IAAK2mB,EACL1lB,MAAO0lB,EACPtY,KAAMsY,MAGVxZ,QAAM,EACNwc,oBAAoB,EACpBC,cAAe,EACfC,aAAc,KACdjgB,SAAU,SAAC9K,EAAG+K,GACZwf,EAAaxf,EAAE5I,aAIpBmC,EAAS,KACR,eAACqG,EAAA,EAAK8M,MAAN,CAAYmT,QAAM,EAAlB,UACE,uBAAO/kB,MAAO,CAAEC,MAAO,SAAvB,mBACA,cAAC8E,GAAA,EAAD,CACEK,WAAS,EACTH,SAAU,SAAC9K,EAAG+K,GACZ2e,EAAa3e,EAAE5I,QAEjBA,MAAOsnB,EACPlf,YAAY,gBAIlB,cAAClE,EAAA,EAAD,CAAQkF,OAAK,EAAClG,QAAS,kBAAMqlB,EAAOjB,EAAWa,IAA/C,2BAQFH,GAAiB,SAAjBA,EAAkBvC,EAASvjB,EAAMoI,GAAc,IAAD,gBAC9Bmb,EAAQvjB,GAAMoI,UADgB,IAClD,2BAA4C,CAAC,IAAlCue,EAAiC,QAC1Cve,EAAS5N,KAAKmsB,GACdb,EAAevC,EAASoD,EAAOve,IAHiB,gCAO9Cge,GAAsB,SAAC7C,EAASvjB,GACpC,IAAMoI,EAAW,GAEjB,OADA0d,GAAevC,EAASvjB,EAAMoI,GACvB3I,OAAOC,KAAK6jB,GAAS3V,QAAO,SAAC4V,GAAD,OAAapb,EAASwC,SAAS4Y,IAAWA,IAAWxjB,MAG3E4mB,GAnYO,SAAC,GAQhB,IAPLrD,EAOI,EAPJA,QACAvjB,EAMI,EANJA,KACAvG,EAKI,EALJA,MACAqrB,EAII,EAJJA,SACA+B,EAGI,EAHJA,iBACAC,EAEI,EAFJA,eACAC,EACI,EADJA,OAEMtf,EAAWC,cACjB,EAAwB/G,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwCF,mBAAS,MAAjD,mBAAOqmB,EAAP,KAAqBC,EAArB,KAEAvkB,qBAAU,WAER,OADA+E,EAAS7E,EAAYhC,IACd,WACL6G,EAAS7E,GAAY,OAEtB,CAAC6E,EAAU7G,IAEd,IAAMsmB,EAAc,CAClB3P,QAAS,IACTgO,OAAQ,IACRpe,MAAO,OACPggB,aAAc,IACdC,UAAW,QA0DPC,EAAmB,WACvB,OAAKrnB,EAAKA,MAAuB,MAAfA,EAAK8I,OAGrB,cAAC9G,EAAA,EAAD,CACEsH,KAAK,OACLZ,GAAI,QACJlH,MAAK,2BACA0lB,GADA,IAEH3P,QAAS,WACTvI,WAAYhP,EAAKyB,OAAS,UAE5B6lB,QAAS,SAAC3rB,GAAD,OAAOmrB,EAAe,CAAE9mB,KAAMA,EAAKA,KAAMyB,MAAO9F,EAAE4rB,OAAOzpB,SAClEgF,KAAK,QACLhF,MAAOkC,EAAKyB,OAAS,UAbqB,MAkB1C+lB,EAAe,SAAClE,GACpB2D,EACE,cAAC,GAAD,CACE1D,QAASA,EACTvjB,KAAMsjB,EAAO,GAAKtjB,EAAKA,KACvBvG,MAAOA,EACPqrB,SAAUA,EACVjkB,QAASA,KAGbA,GAAQ,IAGJ4mB,EAAc,WAClBR,EACE,cAAC,GAAD,CACE1D,QAASA,EACTvjB,KAAMA,EAAKA,KACXvG,MAAOA,EACPqrB,SAAUA,EACVjkB,QAASA,KAGbA,GAAQ,IAGJ6mB,EAAgB,WACpBT,EACE,cAAC,GAAD,CACE1D,QAASA,EACTvjB,KAAMA,EAAKA,KACXvG,MAAOA,EACPqrB,SAAUA,EACVjkB,QAASA,EACTZ,OAAQD,EAAKC,UAGjBY,GAAQ,IAGJ8mB,EAAiB,SAACte,GACtBwb,GAAaprB,EAAOuG,EAAMqJ,EAAWyb,GACrCjkB,GAAQ,IAGV,OACE,cAACgH,EAAA,EAAD,CACEqB,UAAQ,EACRI,KAAK,OACLvB,SAAO,EACPD,WAAS,EACTG,gBAAiB,SACjBrH,KAAMA,EACNc,QAAS,kBAAMb,GAAQ,IACvBO,QA/HW,KAATpB,EACG+mB,EAEH,eAAChB,GAAA,EAAD,CAAa7e,OAAK,EAACzF,MAAM,QAAzB,UACE,cAACO,EAAA,EAAD,CAAQH,QAAQ,YAAYb,QAAS,kBAAMwmB,GAAa,IAAOhmB,MAAO0lB,IADxE,OAFkB,KAQpB,eAACnB,GAAA,EAAD,CAAatkB,MAAM,QAAQ0E,UAAQ,EAACe,OAAK,EAACoC,KAAK,OAAO9H,MAAO,CAAE+V,QAAS,IAAKgO,OAAQ,KAArF,UACE,cAACvjB,EAAA,EAAD,CACEsH,KAAK,OACL/H,KAAMvB,EAAK8I,QAAU9I,EAAK4nB,aAAe,YAAc,aACvD5mB,QAAS,kBAAM6lB,EAAiBptB,EAAOuG,EAAKA,MAAOA,EAAK8I,OAAQgc,IAChEtjB,MAAK,2BAAO0lB,GAAP,IAAoBzlB,MAAOzB,EAAK8I,QAAU9I,EAAK4nB,aAAe,QAAU,UAE/E,cAAC5lB,EAAA,EAAD,CACET,KAAK,WACL4L,SAAO,EACP7D,KAAK,OACLtI,QAAS,kBAAM2mB,EAAe,OAC9BnmB,MAAO0lB,IAET,cAACllB,EAAA,EAAD,CACET,KAAK,aACL4L,SAAO,EACP7D,KAAK,OACLtI,QAAS,kBAAM2mB,EAAe,SAC9BnmB,MAAO0lB,IAGT,cAACllB,EAAA,EAAD,CACEsF,UAAWyf,EACXxlB,KAAK,OACL4L,SAAO,EACP7D,KAAK,OACLtI,QAAS,kBAAMwmB,GAAa,IAC5BhmB,MAAO0lB,IAGT,cAACllB,EAAA,EAAD,CACEsF,SAAUtH,EAAKC,OACfsB,KAAK,QACL4L,SAAO,EACP7D,KAAK,OACLtI,QAASymB,EACTjmB,MAAO0lB,IAET,cAACllB,EAAA,EAAD,CAAQT,KAAK,OAAO4L,SAAO,EAAC7D,KAAK,OAAOtI,QAAS0mB,EAAelmB,MAAO0lB,IACtEG,OA+EH7lB,MAAO,CAAE+V,QAAS,IAAKgO,OAAQ,KATjC,SAWGyB,KCoEDa,GAAoB,SAACzE,EAAUF,EAAWljB,EAAM8nB,GACpD,IAAK5E,EAAW,OAAO,KAEvB,IAAMvS,EAAUoX,GAAuB3E,EAAUF,EAAWljB,GACtDgoB,EAA0BhoB,EAAKqkB,iBAAiB7lB,KAAI,SAACypB,GAAD,MAAQ,QAAUA,KACtEC,EAAsBloB,EAAKmoB,aAAa3pB,KAAI,SAAC4pB,GAAD,MAAQ,gBAAkBA,KACtE/nB,EAAM,uBAAO2nB,GAAP,aAAmCE,IAEzCG,EAAchoB,EAAOuN,QAAO,SAAC+E,GAAD,OAAOhC,EAAQzQ,MAAK,SAACooB,GAAD,OAAOA,EAAExqB,QAAU6U,QAGzE,OAFI0V,EAAY9tB,OAAS8F,EAAO9F,QAAQutB,EAAkB9nB,EAAKA,KAAMqoB,GAGnE,cAAC9U,GAAA,EAAD,CACElD,UAAQ,EACRxH,OAAO,wDACPQ,UAAU,OACVsH,QAASA,EACT7S,MAAOuqB,EACPE,YAAaC,GACb/hB,SAAU,SAAC9K,EAAG+K,GACZ,IAAIrG,EAASqG,EAAE5I,MACfgqB,EAAkB9nB,EAAKA,KAAMK,IAE/BmB,MAAO,CAAEmd,aAAc,IAAKtZ,UAAW,YAKvC0iB,GAAyB,SAAC3E,EAAUF,EAAWljB,GACnD,IAAM2Q,EAAU,GAEX3Q,EAAKmoB,aAAavd,SAAS,cAC9B+F,EAAQnW,KAAK,CACXqC,IAAK,gBACLgF,QACE,qCACE,cAAC4mB,GAAA,EAAD,CAAOhnB,MAAM,MAAb,mBADF,6BAKF3D,MAAO,iBACP2D,MAAO,QAMX,IADA,IAAMpF,EAAI6mB,EAAU3oB,QAAU,EACrByJ,EAAI,EAAGA,EAAI3H,EAAG2H,IACjBkf,EAAUlf,GAAGzD,OAAS6iB,EAAS7iB,OAC9BP,EAAKmoB,aAAavd,SAASsY,EAAUlf,GAAGzD,OAC3CoQ,EAAQnW,KAAK,CACXqC,IAAK,OAASmH,EACdnC,QACE,qCACE,cAAC4mB,GAAA,EAAD,CAAOhnB,MAAM,MAAb,mBACCyhB,EAAUlf,GAAGzD,QAGlBkB,MAAO,MACP3D,MAAO,QAAUolB,EAAUlf,GAAGzD,QAK/BP,EAAKqkB,iBAAiBzZ,SAAS,cAClC+F,EAAQnW,KAAK,CACXqC,IAAK,oBACLgF,QACE,qCACE,cAAC4mB,GAAA,EAAD,CAAOhnB,MAAM,QAAb,0BADF,6BAKF3D,MAAO,yBACP2D,MAAO,UAGX,IAAK,IAAIuC,EAAI,EAAGA,EAAI3H,EAAG2H,IACjBkf,EAAUlf,GAAGzD,OAAS6iB,EAAS7iB,OAC9BP,EAAKqkB,iBAAiBzZ,SAASsY,EAAUlf,GAAGzD,OAC/CoQ,EAAQnW,KAAK,CACXqC,IAAK,WAAamH,EAClBnC,QACE,qCACE,cAAC4mB,GAAA,EAAD,CAAOhnB,MAAM,QAAb,0BACCyhB,EAAUlf,GAAGzD,QAGlBkB,MAAO,QACP3D,MAAO,gBAAkBolB,EAAUlf,GAAGzD,QAK5C,OAAOoQ,GAGH6X,GAA6B,SAAChiB,GAAD,MAAY,CAC7C3E,QAAS2E,EAAM1I,MAAMb,QAAQ,QAAS,IAAIA,QAAQ,gBAAiB,IACnEuE,MAAO,CACL6L,SAAU,OACVkK,QAAS,IACT9V,MAAO+E,EAAM/E,MACbuN,WAAY,QACZC,OAAQ,IACRyZ,UAAW,UAITC,GAAkB,SAAC,GAAwC,IAAtClvB,EAAqC,EAArCA,MAAOmvB,EAA8B,EAA9BA,cAAe9D,EAAe,EAAfA,SACzCrd,EAAWC,cACjB,EAAwB/G,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAkCF,mBAAS,IAA3C,mBAAOykB,EAAP,KAAkBC,EAAlB,KACA,EAA0C1kB,mBAAS,IAAnD,mBAAOukB,EAAP,KAAsBC,EAAtB,KAEAziB,qBAAU,WAER,OADA+E,EAAS7E,EAAYhC,IACd,WACL6G,EAAS7E,GAAY,OAEtB,CAAC6E,EAAU7G,IAEd8B,qBAAU,WACR2iB,EFhUqB,SAACwD,GAA6C,IAEjEhF,EAFgE,EAAvCiF,EAAuC,uDAAxB,EAAGC,EAAqB,uDAAP,GACzDC,EAAM,GAD0D,cAGnDH,GAHmD,IAGpE,2BAAsB,CAAC,IAAd7oB,EAAa,QACpB6jB,EAAO,GACPA,GAAQ/jB,MAAM,EAAIE,EAAKipB,MAAQH,GAAcrD,KAAK,KAGlD,IAAMyD,EAAWH,GAFjBlF,GAAQ7jB,EAAKA,MAEuBzF,OAChC2uB,EAAW,IAAGrF,GAAQ/jB,MAAMopB,GAAUzD,KAAK,MAC/C5B,GAAI,kBAAe7jB,EAAKyB,MAApB,KACCzB,EAAK8I,SAAQ+a,GAAQ,cACtB7jB,EAAKmkB,SAAQN,GAAQ,YACrB7jB,EAAKqkB,kBAAoBrkB,EAAKqkB,iBAAiB9pB,OAAS,IAC1DspB,GAAI,uBAAoB7jB,EAAKqkB,iBAAiBoB,KAAK,KAA/C,MACNuD,GAAOnF,EAAO,MAfoD,8BAiBpE,OAAOmF,EE+SQG,CAAUP,EAAe,EAAG,OACxC,CAACA,IAiBJ,OACE,eAAC1nB,EAAA,EAAD,CACE8G,GAAG,QACHpH,KAAMA,EACNY,MAAO,CAAE2F,MAAO,QAASiiB,SAAU,OAAQnH,UAAW,OAAQ1K,QAAS,SACvEnW,QACE,cAACY,EAAA,EAAD,CACEkF,OAAK,EACLlG,QAAS,kBAAMH,GAAQ,IACvBW,MAAO,CAAE+V,QAAS,YAAa4P,aAAc,KAH/C,+BALJ,UAcE,eAACtf,EAAA,EAAD,CACEjH,KAAMskB,EAAc3qB,OAAS,EAC7B6G,QACE,cAACokB,GAAA,EAAD,CACE5e,WAAS,EACTzK,KAAM,GACNsK,SAAU,SAAC9K,EAAG+K,GACZ2e,EAAa3e,EAAE5I,QAEjBA,MAAOsnB,EACP5jB,MAAO,CAAE6nB,WAAY,YAAajiB,OAAQ,OAAQD,MAAO,QACzDjB,YAAY,+IAXlB,+BAeoB,uBAClB,4BAAIgf,EAAcO,KAAK,WAGzB,eAACvkB,EAAA,EAAMa,QAAP,WACE,cAACC,EAAA,EAAD,CAAQP,MAAM,QAAQT,QAAS,kBAAMH,GAAQ,IAA7C,oBAGA,cAACmB,EAAA,EAAD,CAAQH,QAAQ,eAAeb,QArDtB,WACb,MAAmCqiB,GACjC+B,EACA,GACA,GACA3rB,EAAMmU,QAAO,SAACzN,GAAD,OAAOA,EAAEF,WAJxB,mBAAOwjB,EAAP,KAAqBjqB,EAArB,KAMA,GAAIA,EAAWe,OAAS,EAEtB,OADA4qB,EAAiB3rB,GACV,KAETsrB,EAASrB,GACT5iB,GAAQ,IAyC4CyoB,UAAQ,WAM1DC,GAAkB,SAACvpB,EAAMyB,EAAOhI,EAAOqrB,GAK3CA,EAJmBrrB,EAAM+E,KAAI,SAACqnB,GAE5B,OADIA,EAAM7lB,OAASA,IAAM6lB,EAAMpkB,MAAQA,GAChCokB,OAKLgB,GAAmB,SAACptB,EAAOuG,EAAM8I,EAAQgc,GAC7C,IAAIrB,EAAY,aAAOhqB,GAEjB+vB,EAAe/F,EAAajP,MAAK,SAACqR,GAAD,OAAWA,EAAM7lB,OAASA,KAI7DwpB,EACFA,EAAa1gB,OAASA,EACjB2a,EAAajpB,KAAK,CAAEwF,KAAMA,EAAMwjB,OAAQ,GAAI1a,QAAQ,IAE3Dgc,EAASrB,IAGLgG,GAAiB,SAAChwB,EAAOuG,EAAMmkB,EAAQW,GAC3C,IAAIrB,EAAY,aAAOhqB,GAEjB+vB,EAAe/F,EAAajP,MAAK,SAACqR,GAAD,OAAWA,EAAM7lB,OAASA,KAI7DwpB,EACFA,EAAarF,QAAUA,EAClBV,EAAajpB,KAAK,CAAEwF,KAAMA,EAAMwjB,OAAQ,GAAI1a,QAAQ,EAAMqb,QAASA,IAE1EW,EAASrB,IAGIiG,GAnbK,SAAC,GAA8E,IAA5EjwB,EAA2E,EAA3EA,MAAOqrB,EAAoE,EAApEA,SAAU5B,EAA0D,EAA1DA,UAAWE,EAA+C,EAA/CA,SAA+C,IAArC2D,cAAqC,aAAtB3f,cAAsB,MAAb,OAAa,EAChG,EAA8BzG,mBAAS,IAAvC,mBAAO4iB,EAAP,KAAgBoG,EAAhB,KACA,EAA0ChpB,mBAAS,IAAnD,mBAAOioB,EAAP,KAAsBgB,EAAtB,KACA,EAAsCjpB,mBAAS,MAA/C,mBAAOkpB,EAAP,KAAoB/C,EAApB,KAIApkB,qBAAU,WACR,GAAKjJ,GAA0B,IAAjBA,EAAMc,OAApB,CAIA,IAAMuvB,EAAKC,6BAAmBtwB,GAC9BkwB,EAAWG,GACXF,EAAiBI,2BAAiBF,EATjB,YAIfF,EAAiB,MAMlB,CAACnwB,EAAOmwB,EAAkBD,EAVV,OAYnBjnB,qBAAU,WACR,IAAM4I,EAAQC,YAAW,WACnBse,GACFN,GAAgBM,EAAY7pB,KAAM6pB,EAAYpoB,MAAOhI,EAAOqrB,GAE9DgC,EAAe,QACd,KACH,OAAO,kBAAMrb,aAAaH,MACzB,CAAC7R,EAAOqrB,EAAU+E,EAAa/C,IAElC,IAAMmD,EAAa,SAACjqB,GAClB,IAAMyB,EAAuB,MAAfzB,EAAK8I,QAAkB9I,EAAK8I,OAAS,QAAU,OAC7D,OAAmB,IAAf9I,EAAKipB,MAAoB,CAAE/R,WAAY,OAAQ7J,SAAU,OAAQ5L,SAClD,IAAfzB,EAAKipB,OACU,IAAfjpB,EAAKipB,MADoB,CAAE5b,SAAU,OAAQ5L,SAE1C,CAAE4L,SAAU,OAAQ5L,UAGvBqmB,EAAoB,SAAC9nB,EAAMK,GAC/B,IAD0C,EACpC2kB,EAAQ,aAAOvrB,GACf4qB,EAAmB,GACnB8D,EAAe,GAHqB,cAK5B9nB,GAL4B,IAK1C,2BAAsB,CAAC,IACrB,EADoB,QACIujB,MAAM,SAA9B,mBAAO9gB,EAAP,KAAahF,EAAb,KACa,SAATgF,GAAiBuhB,EAAiB7pB,KAAKsD,GAC9B,iBAATgF,GAAyBqlB,EAAa3tB,KAAKsD,IARP,8BAW1C,IAAMosB,EAAalF,EAASxQ,MAAK,SAAC2V,GAAD,OAAQA,EAAGnqB,OAASA,KACrDkqB,EAAW7F,iBAAmBA,EAC9B6F,EAAW/B,aAAeA,EAAava,QAAO,SAACwa,GAAD,OAAS/D,EAAiBzZ,SAASwd,MACjFtD,EAASE,IAGX,OACE,8BACE,eAACvY,GAAA,EAAD,CACEzQ,QAAS,EACTgR,aAAW,EACX3H,UAAU,OACV7D,MAAO,CAAEyN,OAAQ,IAAKyZ,UAAW,IAAKvhB,MAAO,QAJ/C,UAME,cAACsF,GAAA,EAAM7K,OAAP,CAAcwoB,UAAU,gBACxB,eAAC3d,GAAA,EAAMc,KAAP,CACE/L,MAAO,CAAE4F,OAAQA,EAAQme,OAAQ,IAAKxY,SAAU,WAChDqd,UAAU,cAFZ,UAIE,eAAC3d,GAAA,EAAMpG,IAAP,CAAW+jB,UAAU,WAArB,UACE,cAAC3d,GAAA,EAAMa,WAAP,CAAkBjI,UAAU,SAA5B,SACE,cAACpD,EAAA,EAAD,CAAM1B,KAAK,eAEb,cAACkM,GAAA,EAAMa,WAAP,CAAkB9L,MAAO,CAAE+H,SAAU,WAAY4L,YAAa,SAA9D,sBAGA,cAAC1I,GAAA,EAAMa,WAAP,CAAkB9L,MAAO,CAAE6D,UAAW,SAAtC,SACE,sBAAKglB,OAAoB,MAAZjH,EAAkB5hB,MAAO,CAAE8oB,YAAa,QAArD,sBAEE,cAAC,GAAD,CACEzhB,OAAO,kDACP2V,MAAO,CAAC,iTAAD,0aAcd,aAAIoK,GAAepqB,KAAI,SAACwB,EAAMgE,GAC7B,OAAIhE,EAAKuqB,aAAqB,KAG5B,eAAC9d,GAAA,EAAMpG,IAAP,CAAW+jB,UAAU,WAAmB5oB,MAAO,GAA/C,UACE,cAACiL,GAAA,EAAMC,KAAP,CACE0d,UAAU,WACVjjB,MAAO,EACP3F,MAAO,CACLyN,OAAQ,kBACRsI,QAAS,IACTgO,OAAQ,IACRvW,WAAY,UAEZwb,YAA4B,MAAfxqB,EAAK8I,OAAiB,KAAO,mBAT9C,SAYE,cAAC,GAAD,CACEya,QAASA,EACTvjB,KAAMA,EACNvG,MAAOA,EACPqrB,SAAUA,EACV+B,iBAAkBA,GAClBC,eAAgBA,EAChBC,OAAQA,MAIZ,cAACta,GAAA,EAAMC,KAAP,CACE0d,UAAU,WACV5oB,MAAO,CACL2T,YAAa,QACbsV,UAA0B,IAAfzqB,EAAKipB,MAAc,kBAAoB,MAJtD,SAQE,uBAAMznB,MAAK,2BAAOyoB,EAAWjqB,IAAlB,IAAyBgX,WAAW,GAAD,OAAK,EAAIhX,EAAKipB,MAAd,QAA9C,UACGjpB,EAAKA,KACkB,IAAvBA,EAAK0qB,eAAsC,MAAf1qB,EAAK8I,OAAiB,KACjD,qCACE,cAAC7G,EAAA,EAAD,CACET,MAAO,CACL+V,QAAS,IACTgO,OAAQ,IACRvO,WAAY,MACZ2T,OAAQ,WAEV3pB,QAAS,kBACPyoB,GACEhwB,EACAuG,EAAKA,KACU,MAAfA,EAAKmkB,QAAkBnkB,EAAKmkB,OAC5BW,IAGJvkB,KAAMP,EAAKmkB,OAAS,cAAgB,aAEpCnkB,EAAKmkB,OACL,sBACE3iB,MAAO,CAAEC,MAAO,QADlB,mBAEKzB,EAAK4qB,oBAFV,YAEiC5qB,EAAK0qB,iBAHxB,aASxB,cAACje,GAAA,EAAMC,KAAP,CACE0d,UAAU,WACV5oB,MAAO,CACL6D,UAAW,QACX8P,YAAa,QAEbsV,UAA0B,IAAfzqB,EAAKipB,MAAc,kBAAoB,MANtD,SAUGpB,GAAkBzE,EAAUF,EAAWljB,EAAM8nB,OAxEb9jB,MA6EzC,cAAC,GAAD,CACEuf,QAASA,EACTvjB,KAAM,GACNvG,MAAOA,EACPqrB,SAAUA,EACVgC,eAAgBA,EAChBC,OAAQA,EANV,SAQE,cAAC9kB,EAAA,EAAD,CAAM1B,KAAK,MAAMiB,MAAO,CAAEwV,WAAY,QAAS2T,OAAQ,eAEzD,cAAC,GAAD,CAAiBlxB,MAAOA,EAAOmvB,cAAeA,EAAe9D,SAAUA,a,UCvE3E+F,GAAa,SAAC,GAAwC,IAAtCjP,EAAqC,EAArCA,UAAWkP,EAA0B,EAA1BA,aAActiB,EAAY,EAAZA,MAC7C,EAAsC7H,mBAAS,IAA/C,mBAAOoqB,EAAP,KAAoBC,EAApB,KACMvjB,EAAWC,cAiBjB,OAfAhF,qBAAU,WACR,GAAyB,IAArBkZ,EAAUrhB,QACTwwB,GAAeA,IAAgBnP,EAAUpT,GAAOjI,MACjDqb,EAAUpT,GAAOjI,OAASwqB,EAA9B,CACA,IAAMzf,EAAQC,YAAW,YAhBV,SAAChL,EAAMqb,EAAWpT,EAAOsiB,GAC1C,GAAIlP,EAAUpT,GAAOjI,OAASA,EAA9B,CACA,IAAM0qB,EAAUrP,EAAUpT,GAAOjI,KACjCqb,EAAUpT,GAAOjI,KAAO2qB,GAAW3qB,EAAMqb,EAAWpT,GACpD2iB,GAAkBvP,EAAWqP,EAASrP,EAAUpT,GAAOjI,MACvDuqB,EAAalP,IAYTwP,CAAWL,EAAYpb,OAAQiM,EAAWpT,EAAOsiB,KAChD,KACH,OAAO,kBAAMrf,aAAaH,OACzB,CAACyf,EAAanP,EAAWpT,EAAOsiB,IAEnCpoB,qBAAU,WACiB,IAArBkZ,EAAUrhB,QACdywB,EAAepP,EAAUpT,GAAOjI,QAC/B,CAACqb,EAAWpT,EAAOwiB,IAEG,IAArBpP,EAAUrhB,OAAqB,KAGjC,cAAC+L,EAAA,EAAD,CAAM9E,MAAO,CAAE2F,MAAO,OAAtB,SACE,eAACb,EAAA,EAAK4I,MAAN,CAAY+H,SAAO,EAAnB,UACE,yCADF,IACsB,sBAAMzV,MAAO,CAAE6L,SAAU,QAAzB,6BACpB,cAAC/G,EAAA,EAAK8M,MAAN,UACE,cAAC7M,GAAA,EAAD,CACEe,SAAsC,MAA5BsU,EAAUpT,GAAOwa,QAC3BllB,MAAOitB,EACPvpB,MAAO,CAAE2F,MAAO,SAChBkkB,QAAS,kBAAM5jB,EAAS7E,GAAY,KACpC0oB,OAAQ,kBAAM7jB,EAAS7E,GAAY,KACnC6D,SAAU,SAAC9K,EAAG+K,GAAJ,OAAUskB,EAAetkB,EAAE5I,YAE3B,UAMhBytB,GAAe,SAAC,GAAkD,IAAhD3P,EAA+C,EAA/CA,UAAWkP,EAAoC,EAApCA,aAActiB,EAAsB,EAAtBA,MAAOqa,EAAe,EAAfA,SACtD,EAAoCliB,oBAAS,GAA7C,mBAAO6qB,EAAP,KAAmBC,EAAnB,KAaA,OAAI7P,EAAUrhB,QAAU,GACQ,MAA5BqhB,EAAUpT,GAAOwa,QADa,KAIhC,eAACnb,EAAA,EAAD,CACEC,WAAS,EACTlH,KAAM4qB,EACN9pB,QAAS,kBAAM+pB,GAAc,IAC7BrqB,QACE,cAACY,EAAA,EAAD,CACET,KAAK,SACLuM,QAAQ,QACRtM,MAAO,CAAEwN,WAAY,MAAO0c,OAAQ,KACpC1qB,QAAS,kBAAMyqB,GAAeD,MATpC,UAaE,wCACS,4BAAI5P,EAAUpT,GAAOjI,OAD9B,OAIA,cAACyB,EAAA,EAAD,CAAQR,MAAO,CAAEwN,WAAY,OAAShO,QAhCzB,WAEf,IADA,IAAM2qB,EAAe,GACZ3nB,EAAI,EAAGA,EAAI4X,EAAUrhB,OAAQyJ,IAChCA,IAAMwE,GAAOmjB,EAAanxB,KAAKohB,EAAU5X,IAG/C8mB,EAAaa,GACbF,GAAc,GACd5I,EAAS3Y,KAAK4P,IAAI,EAAGtR,EAAQ,KAwB3B,4BAOAojB,GAAc,SAAC,GAAqD,IAAnD5nB,EAAkD,EAAlDA,EAAG4X,EAA+C,EAA/CA,UAAWkP,EAAoC,EAApCA,aAActiB,EAAsB,EAAtBA,MAAOqa,EAAe,EAAfA,SAClDgJ,EAAS,SAACxiB,EAAWrF,GACzB,IAAMsU,EAAkB,SAAdjP,EAAuBa,KAAK4P,IAAI,EAAG9V,EAAI,GAAKkG,KAAKsN,IAAIoE,EAAUrhB,OAAS,EAAGyJ,EAAI,GACnFyU,EAAOmD,EAAU5X,GAEvB4X,EAAU5X,GAAK4X,EAAUtD,GACzBsD,EAAUtD,GAAKG,EAEfqS,EAAalP,GACbiH,EAASvK,IAGX,OAAI9P,IAAUxE,EAAU,KAEtB,eAAChC,EAAA,EAAOkN,MAAR,WACGlL,EAAI,EACH,cAAChC,EAAA,EAAD,CACET,KAAK,aACLP,QAAS,SAACrF,GACRA,EAAEmwB,kBACFD,EAAO,OAAQ7nB,IAEjBxC,MAAO,CACL2lB,aAAc,IACd5P,QAAS,MACTvI,WAAY,mBAGd,KACHhL,EAAI4X,EAAUrhB,OAAS,EACtB,cAACyH,EAAA,EAAD,CACET,KAAK,cACLP,QAAS,SAACrF,GACRA,EAAEmwB,kBACFD,EAAO,QAAS7nB,IAElBxC,MAAO,CACL2lB,aAAc,IACd5P,QAAS,MACTvI,WAAY,mBAGd,SAKJkc,GAAa,SAACa,EAASnQ,EAAWpT,GAKtC,IAJA,IAAIwjB,EAAgBD,EAChB/nB,EAAI,EAEFioB,EAAgB,CAAC,aACdjoB,EAAI,EAAGA,EAAI4X,EAAUrhB,OAAQyJ,IACtB,OAAVwE,GAAkBxE,IAAMwE,GAC5ByjB,EAAczxB,KAAKohB,EAAU5X,GAAGzD,MAGlC,KAAO0rB,EAAcrhB,SAASohB,IAC5BA,EAAgBD,EAAO,WAAO/nB,GAC9BA,IAEF,OAAOgoB,GAGHb,GAAoB,SAACvP,EAAWqP,EAASiB,GAAa,IAAD,gBAC3CtQ,GAD2C,IACzD,2BAAyB,CAAC,IAAjBjJ,EAAgB,QACvBA,EAAElZ,MAAQkZ,EAAElZ,MAAM+E,KAAI,SAAC2B,GAKrB,OAJIA,EAAEkkB,mBACJlkB,EAAEkkB,iBAAmBlkB,EAAEkkB,iBAAiB7lB,KAAI,SAACypB,GAAD,OAASA,IAAOgD,EAAUiB,EAAUjE,MAC9E9nB,EAAEgoB,eACJhoB,EAAEgoB,aAAehoB,EAAEgoB,aAAa3pB,KAAI,SAAC4pB,GAAD,OAASA,IAAO6C,EAAUiB,EAAU9D,MACnEjoB,MAP8C,gCAY5CgsB,GAhRM,SAAC,GAOf,IANL/jB,EAMI,EANJA,SACAwT,EAKI,EALJA,UACAkP,EAII,EAJJA,aACAtiB,EAGI,EAHJA,MACAqa,EAEI,EAFJA,SACAuJ,EACI,EADJA,oBAEA,EAAwBzrB,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAmBA,OACE,gCACE,eAACQ,EAAA,EAAD,CAAM8E,SAAS,MAAM3E,MAAO,CAAE2F,MAAO,OAAQ8a,UAAW,QAAxD,UACGniB,MAAM8b,EAAUrhB,QACdqe,KAAK,GACLpa,KAAI,SAACmU,EAAG3O,GACP,OACE,cAAC3C,EAAA,EAAKC,KAAN,CACEN,QAAS,SAACrF,EAAG+K,GAAJ,OAAUmc,EAAS7e,IAC5B8E,OAAQN,IAAUxE,EAClBxC,MAAO,CAAE+V,QAAS,MAAOhO,SAAU,YAHrC,SAKE,8BACE,sBACE/H,MAAO,CACL+V,QAAS,UACTnQ,OAAQ,OACRujB,OAAQ,WAJZ,UAO2B,MAAxB/O,EAAU5X,GAAGgf,QACZ,cAACtD,GAAA,EAAD,CACE5I,QAAS8E,EAAU5X,GAAGgf,QACtBvc,SAAU,WACRmV,EAAU5X,GAAGgf,SAAWpH,EAAU5X,GAAGgf,QACrC8H,EAAalP,IAEfpV,MAAOoV,EAAU5X,GAAGzD,KACpBiB,MAAO,CAAE+jB,OAAQ,uBAGnB,qBAAK/jB,MAAO,CAAE+jB,OAAQ,oBAAtB,SAA6C3J,EAAU5X,GAAGzD,OAE5D,qBAAKiB,MAAO,CAAE+H,SAAU,WAAY8iB,OAAQ,KAA5C,SACE,cAAC,GAAD,CACEroB,EAAGA,EACH4X,UAAWA,EACXkP,aAAcA,EACdtiB,MAAOA,EACPqa,SAAUA,gBAQ1B,cAACxhB,EAAA,EAAKC,KAAN,CACEC,KAAK,OACL4E,SAAS,QACToD,SAAS,QACT/H,MAAO,CAAEwN,WAAY,aACrBhO,QAtEM,WACZ,IAAM2qB,EAAY,2BACbS,GADa,IAEhB7rB,KAAM2qB,GAAWkB,EAAoB7rB,KAAMqb,EAAW,QAExDA,EAAUphB,KAAKmxB,GACfb,EAAalP,SAmEX,eAAC3V,EAAA,EAAD,CAASE,SAAS,SAAS3E,MAAO,CAAE+V,QAAS,OAA7C,UACE,cAAC,GAAD,CACEqE,UAAWA,EACXkP,aAAcA,EACdtiB,MAAOA,EACPqa,SAAUA,IAEZ,eAACyJ,GAAA,EAAD,WACE,eAACA,GAAA,EAAUC,MAAX,CAAiBzjB,OAAQlI,EAAMI,QAAS,kBAAMH,GAASD,IAAvD,UACE,oBAAGY,MAAO,CAAEC,MAAO,QAAnB,UAA8Bb,EAAO,OAAS,OAA9C,eAAmE,IACnE,cAACqB,EAAA,EAAD,CAAM1B,KAAK,gBAEb,eAAC+rB,GAAA,EAAUxqB,QAAX,CAAmBgH,OAAQlI,EAA3B,UACG,IA5EuB,MAA5Bgb,EAAUpT,GAAOwa,QAAwB,KAE3C,6BACE,uDA2EI,cAAC,GAAD,CAAYpH,UAAWA,EAAWkP,aAAcA,EAActiB,MAAOA,IACpEJ,eCzGPokB,GAA0B,CAC9B1pB,KAAM,cACNvC,KAAM,gBACN6iB,SAAU,sBACV3pB,MAAO,CAAC,KAAM,OAAQ,QA+BlBgzB,GAAe,SAAC,GAAoE,IAAlE1J,EAAiE,EAAjEA,aAAc2J,EAAmD,EAAnDA,gBAAiBrW,EAAkC,EAAlCA,aAAcsW,EAAoB,EAApBA,cAC7DzJ,EAAYH,EAAaG,UAAUA,UAUzC,OACE,cAAC,GAAD,CACE0J,aAAc1J,EAAUyJ,GACxBE,gBAXoB,SAAC/uB,GACvB,IAAMgvB,EAAe,eAAQ/J,GACvBgK,EAAQ,eAAQjvB,GAEtBgvB,EAAgB5J,UAAUA,UAAUyJ,GAAiBI,EACrDL,EAAgBI,IAOdJ,gBAAiBA,EACjBxJ,UAAWA,EACXyJ,cAAeA,EACftW,aAAcA,KAKd2W,GAAuB,SAAC,GAAgE,IAA9DJ,EAA6D,EAA7DA,aAAcC,EAA+C,EAA/CA,gBAAiB3J,EAA8B,EAA9BA,UAAW7M,EAAmB,EAAnBA,aACxE,EAA8B1V,mBAAS,IAAvC,mBAAOse,EAAP,KAAgBC,EAAhB,KACA,EAAwBve,mBAAS,IAAjC,mBAAOssB,EAAP,KAAaC,EAAb,KAEAxqB,qBAAU,WACR,GAAKuc,GACD2N,EAAaxJ,WAAanE,EAAQmE,SAAtC,CACA,IAAM9X,EAAQC,YAAW,WAGvBshB,EAAgB,2BAAKD,GAAN,IAAoBrsB,KAAM0e,EAAQ1e,KAAM6iB,SAAUnE,EAAQmE,cACxE,KACH,OAAO,kBAAM3X,aAAaH,OACzB,CAAC2T,EAAS2N,EAAcC,IAE3BnqB,qBAAU,WACR,GAAKkqB,EAAL,CACA,IAAIO,EAAU,GAEKP,EAAaxJ,SAASpZ,OAAO,eAAiB,GAEf,kBAApB,OAAZqM,QAAY,IAAZA,OAAA,EAAAA,EAAcf,gBAC9B6X,EAAQ3yB,KACN,6FAGJ0yB,EAAQC,GACRjO,EAAW,CAAE3e,KAAMqsB,EAAarsB,KAAM6iB,SAAUwJ,EAAaxJ,cAC5D,CAAClE,EAAY0N,EAAcM,EAAS7W,IAcvC,OAAKuW,EAEH,eAACtmB,EAAA,EAAD,WACE,eAACA,EAAA,EAAK4I,MAAN,CAAY+H,SAAO,EAAnB,UACE,6CAEE,cAAC,GAAD,CACEpO,OAAQ,8CACR2V,MAAO,CACL,mJAILyO,EAAK1yB,OAAS,EAAI,cAAC,GAAD,CAAMuI,KAAK,OAAO+F,OAAO,GAAG2V,MAAOyO,IAAW,KACjE,cAAC3mB,EAAA,EAAK8M,MAAN,UACE,cAACoS,GAAA,EAAD,CACE1nB,MAAOmhB,EAAQmE,SACf3c,SAAU,SAAC9K,EAAG+K,GAAJ,OAAUwY,EAAW,2BAAKD,GAAN,IAAemE,SAAU1c,EAAE5I,iBAK/D,eAACwI,EAAA,EAAK4I,MAAN,CAAY+H,SAAO,EAAnB,UACE,mDACA,cAAC3Q,EAAA,EAAK8M,MAAN,UACE,cAAC2D,GAAA,EAAD,CACEjZ,MAAM,cACN0I,MAAM,8BACNsQ,QAA+B,gBAAtB8V,EAAa9pB,KACtB2D,SAAU,kBAAMomB,EAAgB,2BAAKD,GAAN,IAAoB9pB,KAAM,sBAG7D,cAACwD,EAAA,EAAK8M,MAAN,UACE,cAAC2D,GAAA,EAAD,CACEjZ,MAAM,cACN0I,MAAM,2BACNsQ,QAA+B,gBAAtB8V,EAAa9pB,KACtB2D,SAAU,kBAAMomB,EAAgB,2BAAKD,GAAN,IAAoB9pB,KAAM,sBAI7D,cAACwD,EAAA,EAAK8M,MAAN,UACE,cAAC2D,GAAA,EAAD,CACEjZ,MAAM,aACN0I,MAAM,mCACNsQ,QAA+B,eAAtB8V,EAAa9pB,KACtB2D,SAAU,kBAAMomB,EAAgB,2BAAKD,GAAN,IAAoB9pB,KAAM,wBAI/D,uBAaA,uBACA,cAAC,GAAD,CAAkB8pB,aAAcA,EAAcC,gBAAiBA,IAC/D,qBAAKrrB,MAAO,CAAE+jB,OAAQ,QAAtB,SA1EA,cAAC,GAAD,CACE9rB,MAAOoG,2BAAiB+sB,EAAanzB,OACrCqrB,SAAU,SAACE,GAAD,OAAc6H,EAAgB,2BAAKD,GAAN,IAAoBnzB,MAAOurB,MAClE9B,UAAWA,EACXE,SAAUwJ,SAKU,MAsEtBQ,GAAmB,SAAC,GAAuC,IAAD,MAApCR,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,gBACxC,EAA4BlsB,mBAAS,CAAE0sB,KAAM,KAAMC,GAAI,KAAMC,MAAO,OAApE,mBAAOC,EAAP,KAAeC,EAAf,KAEA/qB,qBAAU,WAER,GAA0B,eAAtBkqB,EAAa9pB,KAAuB,OAAO,KAC/C,IAHc,EAGRkiB,EAAQ,aAAO4H,EAAanzB,OAC9Bi0B,GAAY,EAJF,cAKG1I,GALH,IAKd,gCAAShlB,EAAT,QAA2B,OAAIA,QAAJ,IAAIA,KAAM2tB,QAAOD,GAAY,IAL1C,8BAMd,IAAKA,EAAW,OAAO,KAEvB,IADA,IAAME,EAAa,CAAC,OAAQ,KAAM,SACzB5pB,EAAI,EAAGA,EAAI,EAAGA,IACjBghB,EAASzqB,OAASyJ,IACO,kBAAhBghB,EAAShhB,GAClBghB,EAAShhB,GAAT,2BAAmBghB,EAAShhB,IAA5B,IAAgC2pB,MAAOC,EAAW5pB,KAC7CghB,EAAShhB,GAAK,CAAEhE,KAAMglB,EAAShhB,GAAI2pB,MAAOC,EAAW5pB,KAGhE6oB,EAAgB,2BAAKD,GAAN,IAAoBnzB,MAAOurB,OACzC,CAAC4H,EAAcC,IAElBnqB,qBAAU,WACR,IAAMmrB,EAAe,SAACxkB,GACpB,OAAOujB,EAAanzB,MAAM+a,MAAK,SAACxU,GAC9B,MAAoB,kBAATA,IACJA,EAAK2tB,OAAS3tB,EAAK2tB,QAAUtkB,OAGlCgkB,EAAOQ,EAAa,SAAW,KAC/BP,EAAKO,EAAa,OAAS,KAC3BN,EAAQM,EAAa,UAAY,KACvCJ,EAAU,CAAEJ,OAAMC,KAAIC,YACrB,CAACX,EAAca,IAElB,IAAMK,EAAW,SAACzkB,EAAW0kB,GAC3B,IAAM/I,EAAW4H,EAAanzB,MAAM+E,KAAI,SAACwB,GACvC,IAAMguB,EAA0B,kBAAThuB,EAAoB,CAAEA,QAA7B,eAA2CA,GAC3D,OAAIguB,EAAQhuB,OAAS+tB,EACZ,2BAAKC,GAAZ,IAAqBL,MAAOtkB,IAExB2kB,EAAQL,OAASK,EAAQL,QAAUtkB,EAAkB,2BAAK2kB,GAAZ,IAAqBL,MAAO,QAE3EK,EAAQL,QAAOK,EAAQL,MAAQ,MAC7BK,MAETnB,EAAgB,2BAAKD,GAAN,IAAoBnzB,MAAOurB,MAG5C,GAA0B,eAAtB4H,EAAa9pB,KAAuB,OAAO,KAE/C,IAAM6N,EAAUic,EAAanzB,MAAM+E,KAAI,SAACwB,EAAMgE,GAC5C,MAAO,CAAEnH,IAAKmH,EAAGkH,KAAMlL,EAAKA,MAAQA,EAAMlC,MAAOkC,EAAKA,MAAQA,MAGhE,OACE,eAACsG,EAAA,EAAD,WACE,eAAClB,EAAA,EAAD,CAAMC,UAAU,SAAS0B,cAAc,SAAvC,UACE,cAAC3B,EAAA,EAAKiB,IAAN,CAAU7E,MAAO,CAAEod,cAAe,KAAlC,SACE,cAACxZ,EAAA,EAAKE,OAAN,CAAa6B,MAAO,EAApB,SACE,eAACb,EAAA,EAAK4I,MAAN,CAAY+H,SAAO,EAAnB,UACE,sCADF,OACkB,yCAChB,uBACA,cAAC1D,GAAA,EAAD,CACErN,YAAY,WACZsN,WAAS,EACT1V,OAAO,UAAA0vB,EAAOF,UAAP,eAAWttB,OAAQ,KAC1B2Q,QAASA,EACTzT,WAAS,EACTsE,MAAO,CAAEiS,SAAU,OAAQ2V,SAAU,QACrC3iB,SAAU,SAAC9K,EAAG+K,GAAJ,OAAUonB,EAAS,KAAMpnB,EAAE5I,iBAK7C,eAACsH,EAAA,EAAKiB,IAAN,WACE,eAACjB,EAAA,EAAKE,OAAN,CAAa6B,MAAO,EAApB,UACE,sCADF,OACkB,2CAChB,uBACA,cAACoM,GAAA,EAAD,CACErN,YAAY,WACZsN,WAAS,EACT1V,OAAO,UAAA0vB,EAAOH,YAAP,eAAartB,OAAQ,KAC5B2Q,QAASA,EACTzT,WAAS,EACTsE,MAAO,CAAEiS,SAAU,OAAQ2V,SAAU,QACrC3iB,SAAU,SAAC9K,EAAG+K,GAAJ,OAAUonB,EAAS,OAAQpnB,EAAE5I,aAG3C,eAACsH,EAAA,EAAKE,OAAN,CAAa6B,MAAO,EAApB,UACE,sCADF,OACkB,4CAChB,uBACA,cAACoM,GAAA,EAAD,CACErN,YAAY,WACZsN,WAAS,EACT1V,OAAO,UAAA0vB,EAAOD,aAAP,eAAcvtB,OAAQ,KAC7B2Q,QAASA,EACTzT,WAAS,EACTsE,MAAO,CAAEiS,SAAU,OAAQ2V,SAAU,QACrC3iB,SAAU,SAAC9K,EAAG+K,GAAJ,OAAUonB,EAAS,QAASpnB,EAAE5I,mBAKhD,uBACA,2BAKSmwB,GAhRc,SAAC,GAAqD,IAAnDlL,EAAkD,EAAlDA,aAAc2J,EAAoC,EAApCA,gBAAiBrW,EAAmB,EAAnBA,aAC7D,EAA0C1V,mBAAS,GAAnD,mBAAOgsB,EAAP,KAAsBuB,EAAtB,KASA,OACE,eAAC,GAAD,CACEtS,UAAWmH,EAAaG,UAAUA,UAClC4H,aAViB,SAAClP,GACpB8Q,EAAgB,2BACX3J,GADU,IAEbG,UAAW,CAAEnlB,SAAUglB,EAAaG,UAAUnlB,SAAUmlB,UAAWtH,OAQnEpT,MAAOmkB,EACP9J,SAAUqL,EACV9B,oBAAqBI,GALvB,UAOE,cAAC,GAAD,CACEzJ,aAAcA,EACd2J,gBAAiBA,EACjBrW,aAAcA,EACdsW,cAAeA,IACd,QC3BHwB,GAA0B,CAC9B5tB,KAAM,gBACN6tB,YAAa,8BACbC,WAAY,MACZC,UAAU,EACVC,WAAW,EACXtL,YAAY,EACZxpB,MAAO,CAAC,KAAM,OAAQ,QAmClB+0B,GAAyB,SAAC,GAAuC,IAAD,IAApCzL,EAAoC,EAApCA,aAAc2J,EAAsB,EAAtBA,gBAC9CjwB,QAAQC,IAAIqmB,GACZ,IAAM0L,EAAc,OAAG1L,QAAH,IAAGA,GAAH,UAAGA,EAAc2L,gBAAjB,aAAG,EAAwB3wB,SACzC6d,EAAS,OAAGmH,QAAH,IAAGA,GAAH,UAAGA,EAAc2L,gBAAjB,aAAG,EAAwB9S,UAQ1C,OAAK6S,GAAmB7S,EAGtB,cAACtV,EAAA,EAAD,UACE,cAACA,EAAA,EAAK4I,MAAN,UACE,eAAC5I,EAAA,EAAK8M,MAAN,WACE,cAACsM,GAAA,EAAD,CACEpY,SAAUsU,EAAUhO,QAAO,SAAC+E,GAAD,OAAoB,MAAbA,EAAEqQ,SAAmBrQ,EAAEqQ,WAASzoB,QAAU,EAC5EolB,QAAM,EACNnZ,MAAM,kBACNsQ,QAAS2X,EAAeE,QACxBloB,SAAU,SAAC9K,EAAG+K,GAAJ,OAlBO3I,EAkBqB,2BAAK0wB,GAAN,IAAsBE,QAASjoB,EAAEoQ,eAjB9E4V,EAAgB,2BACX3J,GADU,IAEb2L,SAAU,CAAE3wB,WAAU6d,UAAWmH,EAAa2L,SAAS9S,cAHjC,IAAC7d,KAoBnB,cAAC,GAAD,CACE8K,OAAO,sBACP2V,MAAO,CAAC,qHAfwB,MAyBtCoQ,GAAe,SAAC,GAAsD,IAAD,IAAnD7L,EAAmD,EAAnDA,aAAc2J,EAAqC,EAArCA,gBAAiBmC,EAAoB,EAApBA,cAC/CC,EAAe/L,EAAa2L,SAAS9S,UAAUiT,GAE/CE,EAAkB,SAACjxB,GACvB,IAAMgvB,EAAe,eAAQ/J,GACvBgK,EAAQ,eAAQjvB,GAEtBgvB,EAAgB4B,SAAS9S,UAAUiT,GAAiB9B,EACpDL,EAAgBI,IA0DlB,OAAI,OAAC/J,QAAD,IAACA,GAAD,UAACA,EAAc2L,gBAAf,iBAAC,EAAwB9S,iBAAzB,OAAC,EAAoCiT,GAGvC,eAACvoB,EAAA,EAAD,WACE,cAAC,GAAD,CAAuBwoB,aAAcA,EAAcC,gBAAiBA,IAEpE,eAACzoB,EAAA,EAAK4I,MAAN,WACE,cAACjN,EAAA,EAAD,CAAM1B,KAAK,YACX,8DAGF,cAAC+F,EAAA,EAAK4I,MAAN,UAxD0B,MAAxB4f,EAAa9L,QAGb,cAAC1c,EAAA,EAAK8M,MAAN,UACE,cAACsM,GAAA,EAAD,CACElZ,MAAM,4BACNsQ,QAASgY,EAAa7L,WACtBxc,SAAU,SAAC9K,EAAG+K,GAAJ,OAAUqoB,EAAgB,2BAAKD,GAAN,IAAoB7L,WAAYvc,EAAEoQ,gBAMzE,qCACE,eAACxQ,EAAA,EAAK8M,MAAN,WACE,cAACsM,GAAA,EAAD,CACElZ,MAAM,YACNsQ,QAASgY,EAAaE,SACtBvoB,SAAU,SAAC9K,EAAG+K,GAAJ,OAAUqoB,EAAgB,2BAAKD,GAAN,IAAoBE,SAAUtoB,EAAEoQ,cAErE,cAAC,GAAD,CACEjO,OAAO,YACP2V,MAAO,CACL,2FAIN,eAAClY,EAAA,EAAK8M,MAAN,WACE,cAACsM,GAAA,EAAD,CACElZ,MAAM,aACNsQ,QAASgY,EAAaE,SACtBvoB,SAAU,SAAC9K,EAAG+K,GAAJ,OAAUqoB,EAAgB,2BAAKD,GAAN,IAAoBE,SAAUtoB,EAAEoQ,cAErE,cAAC,GAAD,CACEjO,OAAO,YACP2V,MAAO,CACL,gGAqBV,cAAClY,EAAA,EAAK4I,MAAN,UACE,eAAC5I,EAAA,EAAK8M,MAAN,WACE,cAACsM,GAAA,EAAD,CACElZ,MAAM,WACNsQ,QAASgY,EAAaze,SACtB5J,SAAU,SAAC9K,EAAG+K,GAAJ,OAAUqoB,EAAgB,2BAAKD,GAAN,IAAoBze,SAAU3J,EAAEoQ,cAErE,cAAC,GAAD,CACEjO,OAAO,wBACP2V,MAAO,CAAC,oFAKd,eAAClY,EAAA,EAAK4I,MAAN,CAAY+H,SAAO,EAACzV,MAAO,CAAEytB,QAASH,EAAa7L,WAAa,OAAS,SAAzE,UACE,iDAEA,eAAC3c,EAAA,EAAK8M,MAAN,WACE,cAAC2D,GAAA,EAAD,CACEjZ,MAAM,MACN0I,MAAM,iBACNsQ,QAAqC,QAA5BgY,EAAaT,WACtB5nB,SAAU,kBAAMsoB,EAAgB,2BAAKD,GAAN,IAAoBT,WAAY,YAEjE,cAAC,GAAD,CACExlB,OAAQ,wBACR2V,MAAO,CACL,6CACA,mFAGJ,cAAClY,EAAA,EAAK8M,MAAN,CAAY5R,MAAO,CAAEwV,WAAY,QAAjC,SACE,cAAC0I,GAAA,EAAD,CACElZ,MAAM,uBACNc,SAAsC,WAA5BwnB,EAAaT,WACvBvX,QAASgY,EAAaP,UACtB9nB,SAAU,SAAC9K,EAAG+K,GAAJ,OAAUqoB,EAAgB,2BAAKD,GAAN,IAAoBP,UAAW7nB,EAAEoQ,mBAI1E,eAACxQ,EAAA,EAAK8M,MAAN,WACE,cAAC2D,GAAA,EAAD,CACEjZ,MAAM,SACN0I,MAAM,qBACNsQ,QAAqC,WAA5BgY,EAAaT,WACtB5nB,SAAU,kBAAMsoB,EAAgB,2BAAKD,GAAN,IAAoBT,WAAY,eAEjE,cAAC,GAAD,CACExlB,OAAQ,2BACR2V,MAAO,CACL,wDACA,8MAMR,uBACA,qBACEhd,MAAO,CACLuL,SAAU,OACVwY,OAAQ,OACR0J,QAASH,EAAa7L,WAAa,OAAS,SAJhD,SA3HA,cAAC,GAAD,CACExpB,MAAOoG,2BAAiBivB,EAAar1B,OACrCqrB,SAAU,SAACE,GAAD,OAAc+J,EAAgB,2BAAKD,GAAN,IAAoBr1B,MAAOurB,aAmDR,MAmF5DkK,GAAwB,SAAC,GAAuC,IAArCJ,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,gBAC7C,EAAsCpuB,mBAASmuB,EAAaV,aAAe,IAA3E,mBAAOA,EAAP,KAAoBe,EAApB,KACM1nB,EAAWC,cAejB,OAbAhF,qBAAU,WACR,GAAoB,OAAhB0rB,GAAuC,MAAfA,GACxBU,EAAaV,cAAgBA,EAAjC,CACA,IAAM9iB,EAAQC,YAAW,WACvBwjB,EAAgB,2BAAKD,GAAN,IAAoBV,mBAClC,KACH,OAAO,kBAAM3iB,aAAaH,OACzB,CAAC8iB,EAAaU,EAAcC,IAE/BrsB,qBAAU,WACRysB,EAAeL,EAAaV,eAC3B,CAACU,IAGF,eAACxoB,EAAA,EAAK4I,MAAN,CAAY+H,SAAO,EAAnB,UACE,gDACA,cAAC3Q,EAAA,EAAK8M,MAAN,UACE,cAACoS,GAAA,EAAD,CACE1nB,MAAOswB,EACP/C,QAAS,kBAAM5jB,EAAS7E,GAAY,KACpC0oB,OAAQ,kBAAM7jB,EAAS7E,GAAY,KACnC6D,SAAU,SAAC9K,EAAG+K,GAAJ,OAAUyoB,EAAezoB,EAAE5I,gBAOhCsxB,GAzPc,SAAC,GAAuC,IAArCrM,EAAoC,EAApCA,aAAc2J,EAAsB,EAAtBA,gBAC5C,EAA0C/rB,mBAAS,GAAnD,mBAAOkuB,EAAP,KAAsBQ,EAAtB,KASA,OACE,qCACE,iDACA,cAAC,GAAD,CAAwBtM,aAAcA,EAAc2J,gBAAiBA,IACrE,2CACA,eAAC,GAAD,CACE9Q,UAAWmH,EAAa2L,SAAS9S,UACjCkP,aAde,SAAClP,GACpB8Q,EAAgB,2BACX3J,GADU,IAEb2L,SAAU,CAAE3wB,SAAUglB,EAAa2L,SAAS3wB,SAAU6d,UAAWA,OAY/DpT,MAAOqmB,EACPhM,SAAUwM,EACVjD,oBAAqB+B,GALvB,UAOE,cAAC,GAAD,CACEpL,aAAcA,EACd2J,gBAAiBA,EACjBmC,cAAeA,IACd,WCxCLS,GAAsB,CAI1BxsB,KAAM,KAGN4rB,SAAU,CACR3wB,SAAU,CAAE4wB,SAAS,GACrB/S,UAAW,CACT,CACErb,KAAM,gBACN8tB,WAAY,MACZC,UAAU,EACVje,UAAU,EACVke,WAAW,EACX90B,MAAO,CAAC,OAAQ,UAAW,cAMjCypB,UAAW,CACTnlB,SAAU,GACVmlB,UAAW,CACT,CACE3iB,KAAM,gBACNuC,KAAM,cACNsgB,SAAU,wBACV3pB,MAAO,CAAC,KAAM,OAAQ,WAMxB81B,GAAe,SAAC,GAAmB,IAAjB7xB,EAAgB,EAAhBA,UAChB2Y,EAAY,OAAG3Y,QAAH,IAAGA,OAAH,EAAGA,EAAW2Y,aAC1B0M,GAAwB,OAATrlB,QAAS,IAATA,OAAA,EAAAA,EAAWqlB,eAAgBuM,GAC1C5C,EAAkB,SAAC8C,GACvB/uB,EAAGwS,iBAAiBvV,EAAW,eAAgB8xB,IAsBjD,OAnBA9sB,qBAAU,WACR,GAAI,OAAChF,QAAD,IAACA,KAAWqlB,cACXrlB,EAAUU,cACf,IAHc,iBAGT,IAAI0d,EAAQ,KACTriB,EAAQiE,EAAUU,cAAc0d,GAChC0T,EAAK9xB,EAAUqlB,aAChByM,EAAGd,SAAS9S,UAAU1b,MAAK,SAACyS,GAAD,OAAOA,EAAEpS,OAASub,OAChD0T,EAAGd,SAAS9S,UAAUphB,KAAK,CACzB+F,KAAMub,EACNuS,WAAY50B,EAAMc,OAAS,GAAK,SAAW,MAC3Cg0B,UAAW90B,EAAMc,OAAS,GAC1Bd,QACAupB,SAAS,IAEXviB,EAAGwS,iBAAiBvV,EAAW,eAAgB8xB,KAXnD,MAAqB/vB,OAAOC,KAAKhC,EAAUU,eAA3C,eAA4D,MAc3D,CAACV,IAECqlB,GAAiB1M,EAGpB,sBAAK7U,MAAO,CAAEuF,cAAe,MAAOyP,MAAO,MAAOrB,YAAa,OAA/D,UACE,cAAC,GAAD,CAAU4N,aAAcA,EAAc2J,gBAAiBA,IACvD,cAAC5lB,EAAA,EAAD,IACuB,cAAtBic,EAAajgB,KACZ,cAAC,GAAD,CACEigB,aAAcA,EACd2J,gBAAiBA,EACjBrW,aAAcA,IAEd,KACmB,aAAtB0M,EAAajgB,KACZ,cAAC,GAAD,CACEigB,aAAcA,EACd2J,gBAAiBA,EACjBrW,aAAcA,IAEd,QAnBmC,MAwBvCoZ,GAAW,SAAC,GAAuC,IAArC1M,EAAoC,EAApCA,aAAc2J,EAAsB,EAAtBA,gBAChChqB,qBAAU,WACJ,OAACqgB,QAAD,IAACA,KAAcjgB,MACjB4pB,EAAgB,2BACX3J,GADU,IAEbjgB,KAAM,gBAET,CAACigB,EAAc2J,IAElB,IAAM/V,EAAc,SAAC7Y,EAAO0I,GAC1B,OACE,cAACF,EAAA,EAAK8M,MAAN,UACE,cAAC2D,GAAA,EAAD,CACEjZ,MAAOA,EACP0I,MAAOA,EACPsQ,QAASiM,EAAajgB,OAAShF,EAC/B2I,SAAU,SAAC9K,EAAG+K,GAAJ,OACRgmB,EAAgB,2BACX3J,GADU,IAEbjgB,KAAMhF,WAQlB,OACE,eAACwI,EAAA,EAAD,WACE,eAACA,EAAA,EAAK4I,MAAN,WACE,cAACjN,EAAA,EAAD,CAAM1B,KAAK,YACX,qDAEF,eAAC+F,EAAA,EAAK4I,MAAN,CAAY+H,SAAO,EAAC9H,OAAO,QAA3B,UACGwH,EAAY,WAAY,YACxBA,EAAY,YAAa,mBAMnB7L,OAAMC,KAAKwkB,IC3HpBG,GAAa,SAAC,GAAmB,IAAD,EAAhBhyB,EAAgB,EAAhBA,UAIpB,EAAgB0e,GAAS1e,GAAlByG,EAAP,oBAEA,IAAKzG,EAAW,OAAO,KACvB,IAAIiyB,EAAU,CAAC,EAAG,GAMlB,OALA,UAAIjyB,EAAUqlB,oBAAd,OAAI,EAAwBjgB,OACU,aAAhCpF,EAAUqlB,aAAajgB,OAAqB6sB,EAAU,CAAC,EAAG,KAC1B,cAAhCjyB,EAAUqlB,aAAajgB,OAAsB6sB,EAAU,CAAC,EAAG,KAI/D,8BACE,eAACvqB,EAAA,EAAD,CAAMgB,WAAS,EAACpK,QAAS,EAAzB,UACE,eAACoJ,EAAA,EAAKE,OAAN,CAAayB,cAAc,MAAMsb,WAAS,EAAClb,MAAOwoB,EAAQ,GAA1D,UACE,cAAC/tB,EAAA,EAAD,CAAQyD,UAAU,SAAS7D,MAAO,CAAEwN,WAAY,UAAWvN,MAAO,SAAlE,sBAGA,cAAC,GAAD,CAAc/D,UAAWA,OAE3B,cAAC0H,EAAA,EAAKE,OAAN,CAAa6B,MAAOwoB,EAAQ,GAA5B,SACE,cAACC,GAAD,CAAalyB,UAAWA,EAAWyG,MAAOA,YAO9CyrB,GAAc9kB,IAAMC,MAAK,YAA2B,IAAD,EAAvBrN,EAAuB,EAAvBA,UAAWyG,EAAY,EAAZA,MAC3C,EAA0BxD,mBAAS,MAAnC,mBAAO6H,EAAP,KAAcqa,EAAd,KACA,EAAgDliB,mBAAS,MAAzD,mBAAO8hB,EAAP,KAAyBC,EAAzB,KACA,EAAgC/hB,mBAAS,MAAzC,mBAAOyD,EAAP,KAAiByrB,EAAjB,KAyBA,GAvBAntB,qBAAU,WACJ,OAAChF,QAAD,IAACA,KAAWqlB,cAChB8M,EAAY/M,GAAYplB,EAAUqlB,iBACjC,CAACrlB,EAAUqlB,eAEdtmB,QAAQC,IAAI+lB,GACZ/f,qBAAU,WACR,OAAKyB,GAAmB,OAAVqE,EAIVA,GAASrE,EAAM5J,OAAe,UAClC0iB,GAAiBvf,EAAW,CAACyG,EAAMqE,KAAS7F,MAAK,SAACmtB,GAChDrzB,QAAQC,IAAIozB,GACZ,IAAMC,EAAcD,EAAgB,GACpCC,EAAYC,UAAY,CACtBC,gBAAiB,SAAChxB,EAASmB,GAAV,OAAmB3D,QAAQC,IAAR,wBAA6B0D,EAAK7F,OAAlC,mBAEtCw1B,EAAYG,SAAW,CAAEC,gBAAgB,EAAMC,eAAe,GAC9D1N,EAAoBqN,OAXpBrN,EAAoB,MACb,QAYR,CAACla,EAAOrE,EAAOue,EAAqBhlB,KAElCyG,EAAO,OAAO,KA6BnB,OAAI,OAACzG,QAAD,IAACA,GAAD,UAACA,EAAWqlB,oBAAZ,OAAC,EAAyBjgB,KA3BJ,SAACA,GACzB,OAAQA,GACN,IAAK,YACH,OACE,cAACutB,GAAD,CACEjsB,SAAUA,EACVqe,iBAAkBA,EAClBD,aAAcK,EAHhB,SAKE,cAAC,kBAAD,CAAiBxmB,EAAC,OAAE8H,QAAF,IAAEA,OAAF,EAAEA,EAAO5J,OAAQiO,MAAOA,EAAOqa,SAAUA,MAGjE,IAAK,WACH,OACE,cAAC,GAAD,CACEze,SAAUA,EACVqe,iBAAkBA,EAClBD,aAAcK,EAHhB,SAKE,cAAC,kBAAD,CAAiBxmB,EAAC,OAAE8H,QAAF,IAAEA,OAAF,EAAEA,EAAO5J,OAAQiO,MAAOA,EAAOqa,SAAUA,MAGjE,QACE,OAAO,MAKNyN,CAAkB5yB,EAAUqlB,aAAajgB,MADL,QAIvCutB,GAAsBvlB,IAAMC,MAAK,YAA6D,IAA1D3C,EAAyD,EAAzDA,SAAUhE,EAA+C,EAA/CA,SAAUqe,EAAqC,EAArCA,iBAAkBD,EAAmB,EAAnBA,aAC9E,OAAKpe,EACmB,gBAApB,OAACA,QAAD,IAACA,KAAUtB,MAA6B,KAG1C,qCACE,eAAClB,EAAA,EAAD,CAAQyD,UAAU,SAAS7D,MAAO,CAAEwN,WAAY,UAAWvN,MAAO,QAAS2F,OAAQ,QAAnF,oBAEGgB,KAGH,qBACE5G,MAAO,CACL+V,QAAS,IACT0X,QAAS,OACTsB,eAAgB,SAChBnpB,OAAQ,sBACRggB,UAAW,QACX9E,UAAW,SAPf,SAUE,qBACE9gB,MAAO,CACL+V,QAAS,MACTpQ,MAAO,MACPsP,WAAY,MACZrP,OAAQ,QALZ,SAQE,cAAC,eAAD,CACE2U,KAAM0G,EACNre,SAAUA,EACVoe,aAAcA,EACd5f,aAAa,WAhCD,QAwClB4tB,GAAsB,SAAC,GAA4D,IAA1DpoB,EAAyD,EAAzDA,SAAUhE,EAA+C,EAA/CA,SAAUqe,EAAqC,EAArCA,iBAAkBD,EAAmB,EAAnBA,aAC7D5f,EAAc6tB,aAAY,SAACpU,GAAD,OAAWA,EAAMqU,iBACjD,OAAKtsB,EACiB,aAAlBA,EAAStB,KAA4B,KAGvC,qCACE,cAAClB,EAAA,EAAD,CAAQyD,UAAU,SAAS7D,MAAO,CAAEwN,WAAY,UAAWvN,MAAO,SAAlE,qBAGC2G,EAED,qBACE5G,MAAO,CACL+V,QAAS,IACTpQ,MAAO,OACPC,OAAQ,sBACRggB,UAAW,SALf,SAQE,qBAAK5lB,MAAO,CAAE+V,QAAS,IAAKnQ,OAAQ,QAApC,SACE,cAAC,eAAD,CACE2U,KAAM0G,EACNre,SAAUA,EACVoe,aAAcA,EACd5f,YAAaA,WAvBD,MA+BTkI,OAAMC,KAAK2kB,ICzKpBiB,GAAwB,CAC5BC,OAAQ,KACRC,QAAS,EACTC,WAAY,IAuBRC,GAAa,SAAC,GAAsD,IAAD,EAAnDrzB,EAAmD,EAAnDA,UAAWszB,EAAwC,EAAxCA,eAAgBC,EAAwB,EAAxBA,kBAC/C,EAA8BtwB,mBAAS,MAAvC,mBAAOse,EAAP,KAAgBC,EAAhB,KACMzJ,GAAsB,OAAT/X,QAAS,IAATA,GAAA,UAAAA,EAAW2Y,oBAAX,eAAyBZ,aAAc,EAE1D/S,qBAAU,WACRwc,EAAW8R,KACV,CAACA,EAAgB9R,IAEpBxc,qBAAU,WACR,GAAIuc,IAAY+R,EAAgB,OAAO,KACvC,IAAM1lB,EAAQC,YAAW,WAEvB0lB,EAAkBhS,KACjB,KACH,OAAO,kBAAMxT,aAAaH,MACzB,CAAC2T,EAAS+R,EAAgBC,IAE7B,IAAMta,EAAc,SAAC7Y,EAAO0I,GAC1B,OACE,cAACF,EAAA,EAAK8M,MAAN,UACE,cAAC2D,GAAA,EAAD,CACEjZ,MAAOA,EACP0I,MAAOA,EACPsQ,QAASka,EAAeJ,SAAW9yB,EACnC2I,SAAU,SAAC9K,EAAG+K,GAAJ,OACRuqB,EAAkB,2BACbD,GADY,IAEfJ,OAAQ9yB,WA8FpB,OAAgB,OAAZmhB,EAAyB,KAG3B,eAAC3Y,EAAA,EAAD,WACE,eAACA,EAAA,EAAK4I,MAAN,WACE,cAACjN,EAAA,EAAD,CAAM1B,KAAK,YACX,qDAEF,eAAC+F,EAAA,EAAK4I,MAAN,CAAY+H,SAAO,EAAC9H,OAAO,QAA3B,UACGwH,EAAY,OAAQ,QACpBA,EAAY,QAAS,YA/FnB,wBAEY,WAAO,IAAD,EACzB,MAA8B,SAA1Bqa,EAAeJ,OAA0B,KAE3C,qCACE,uBACA,eAACtqB,EAAA,EAAK4I,MAAN,WACE,cAACjN,EAAA,EAAD,CAAM1B,KAAK,YACX,mDAEF,eAAC+F,EAAA,EAAK4I,MAAN,WACE,eAAC5I,EAAA,EAAK8M,MAAN,CAAYjM,MAAO,EAAnB,UACE,2CAEG8X,EAAQ4R,QAAU,GAAlB,OAAuBnzB,QAAvB,IAAuBA,GAAvB,UAAuBA,EAAW2Y,oBAAlC,OAAuB,EAAyBV,QAC/C,cAAC,GAAD,CACE9M,OAAO,sCACP/F,KAAK,OACL0b,MAAO,CAAC,gRAMR,QAGN,cAACjY,GAAA,EAAD,CACE+C,KAAK,OACLxG,KAAK,SACL0U,IAAK,EACL1Z,MAAOmhB,EAAQ4R,QACfpqB,SAAU,SAAC9K,EAAG+K,GAAJ,OAAUwY,GAAW,SAAC7C,GAAD,mBAAC,eAAgBA,GAAjB,IAAwBwU,QAASnqB,EAAE5I,iBAItE,eAACwI,EAAA,EAAK8M,MAAN,CAAYjM,MAAO,EAAnB,UACE,4CAE0B,MAAvB8X,EAAQ6R,WACP,cAAC,GAAD,CACEjoB,OAAO,gBACP/F,KAAK,OACL0b,MAAO,CAAC,wGAIR,QAEN,cAACjY,GAAA,EAAD,CACE+C,KAAK,OACLxG,KAAK,SACL0c,KAAM,EACNhI,IAAK,EACLsC,IAAK,IACLtT,MAAM,IACNkR,cAAc,QACd5Z,MAAOmhB,EAAQ6R,WACfrqB,SAAU,SAAC9K,EAAG+K,GAAJ,OAAUwY,GAAW,SAAC7C,GAAD,mBAAC,eAAgBA,GAAjB,IAAwByU,WAAYpqB,EAAE5I,iBAkBzE,cAACwI,EAAA,EAAK8M,MAAN,CAAYjM,MAAO,EAAnB,SACE,cAAC,GAAD,CAAmBsO,WAAYA,EAAY1X,SAAUkhB,YAoB1DiS,OAyBDC,GAAoB,SAAC,GAA8B,IAA5B1b,EAA2B,EAA3BA,WAAY1X,EAAe,EAAfA,SACvC,IAAKA,EAAU,OAAO,KAEtB,IAAMqzB,EAAalnB,KAAKmV,MAAO5J,EAAa1X,EAAS+yB,WAAc,KAG7DO,EAAcD,GAFJ3b,EAAa2b,GAEcrzB,EAAS8yB,QAEpD,OACE,sBAAKrvB,MAAO,CAAE6D,UAAW,SAAU5D,MAAO,QAA1C,kCACuB,uBACrB,mBAAGD,MAAO,CAAE6L,SAAU,SAAtB,SAAkCnD,KAAKmV,MAAoB,IAAdgS,GAAqB,UAiDzDC,GA9OQ,SAAC,GAAmB,IAAjB5zB,EAAgB,EAAhBA,UAClBszB,GAA0B,OAATtzB,QAAS,IAATA,OAAA,EAAAA,EAAWszB,iBAAkBL,GAKpD,OAAKK,EAGH,qBAAKxvB,MAAO,CAAEuF,cAAe,MAAOyP,MAAO,MAAOrB,YAAa,OAA/D,SACE,cAAC,GAAD,CACEzX,UAAWA,EACXszB,eAAgBA,EAChBC,kBAXoB,SAAC1a,GACzB9V,EAAGwS,iBAAiBvV,EAAW,iBAAkB6Y,QAGvB,M,+BCoCxBgb,GAAkB,SAACxyB,GACvB,IAAMsX,EAAetX,EAAiBsF,WAAWgS,aAC3C2a,EAAiBjyB,EAAiBsF,WAAW2sB,eAC/C7sB,EAAQpF,EAAiBoF,MAAM3F,KAAI,SAACmb,GAAD,OAAOA,EAAEoC,QAEhD,GAA6B,IAAzB1F,EAAawa,QACf,MAAO,CAAC,CAAEW,IAAK,EAAG5yB,MAAOG,EAAiBH,MAAOwF,SAAUrF,EAAiBqF,SAAUD,UAYxF,IAVA,IAAMstB,EAAWvnB,KAAKmV,MAAOhJ,EAAaZ,WAAaub,EAAeF,WAAc,KAI9EM,GADNjtB,EAAQwT,GAAWxT,EAAOA,EAAM5J,QAAQ,EAAO,GAAI,OAC1BiQ,MAAM,EAAGinB,GAC5BC,EAAUvtB,EAAMqG,MAAMinB,GAExBE,EAAW7xB,MAAM2X,OAAOuZ,EAAeH,UACxCjY,KAAK,IACLpa,KAAI,SAACgzB,GAAD,oBAAaJ,MACXptB,EAAI,EAAGA,EAAI0tB,EAAQn3B,OAAQyJ,IAClC2tB,EAAS3tB,EAAI2tB,EAASp3B,QAAQC,KAAKk3B,EAAQ1tB,IAG7C,OAAO2tB,EAASnzB,KAAI,SAAC+X,EAAIvS,GAAL,MAAY,CAC9BwtB,IAAKxtB,EAAI,EACTpF,MAAOG,EAAiBH,MACxBwF,SAAUrF,EAAiBqF,SAC3BD,MAAOwT,GAAWpB,EAAIA,EAAGhc,QAAQ,EAAO,GAAI,WAIjCq3B,GA9EI,SAAC,GAA0B,IAAxB7yB,EAAuB,EAAvBA,iBACpB,EAA0B4B,mBAAS,IAAnC,mBAAO/B,EAAP,KAAcizB,EAAd,KAEAnvB,qBAAU,WACR,OAAI3D,QAAJ,IAAIA,KAAkBH,OAAOizB,EAAS9yB,EAAiBH,SACtD,CAACG,IAEJ,IAAM+yB,EAAU,uCAAG,oCAAA71B,EAAA,sDAKjB,IAJM81B,EAASR,GAAgBxyB,IAEzBizB,EAAM,IAAIC,MACZC,KAAJ,0BAA4BtzB,EAA5B,SAA0CkG,KAAKC,UAAUhG,IAChDiF,EAAI,EAAGA,EAAI+tB,EAAOx3B,OAAQyJ,IAC3BmuB,EADgC,cACjBJ,EAAO/tB,GAAGwtB,IADO,kBACMO,EAAO/tB,GAAGG,MAAM5J,OADtB,YACgCqE,EADhC,SAEtCozB,EAAIE,KAAKC,EAAOrtB,KAAKC,UAAUgtB,EAAO/tB,KAPvB,gBAUKguB,EAAII,cAAc,CAAEtvB,KAAM,SAV/B,OAUXjB,EAVW,OAWjBwwB,kBAAOxwB,EAAD,0BAA6BjD,EAA7B,SAXW,2CAAH,qDAchB,OACE,gCACE,cAAC0H,EAAA,EAAD,CAAMmJ,SAAU,kBAAMqiB,KAAtB,SACE,cAACxrB,EAAA,EAAKC,MAAN,CACEL,YAAY,WACZpI,MAAOc,EACP0zB,UAAW,GACX7rB,SAAU,SAAC9K,EAAG+K,GAAJ,OAAUmrB,EAASnrB,EAAE5I,QAC/B8I,WAAS,EACTpF,MAAO,CAAE2F,MAAO,YAGpB,uBAEA,eAACnF,EAAA,EAAD,CACEiF,SAAO,EACPC,OAAK,EACLwE,QAA8B,OAArB3M,EACTuI,SAAU1I,EAAMrE,OAAS,EACzByG,QAAS8wB,EALX,UAOGlzB,EAAMrE,OAAS,EAAI,kCAAoC,2BAA4B,WCQ7Eg4B,GAnDK,SAAC,GAA0B,IAAD,EAAvBxzB,EAAuB,EAAvBA,iBACrB,EAAwB4B,mBAAS,IAAjC,mBAAOJ,EAAP,KAAaiyB,EAAb,KACA,EAA6B7qB,YAAW,CAAC,UAAzC,mBAAOlD,EAAP,KAAgBguB,EAAhB,KAEA/vB,qBAAU,WACR,OAAI3D,QAAJ,IAAIA,KAAkBwB,MAAMiyB,EAAQzzB,EAAiBwB,QACpD,CAACxB,IAEJ,IAAM2zB,EAAM,uCAAG,gCAAAz2B,EAAA,6DACP2I,EAAQpB,GAAgBiB,EAAQG,MAAM5B,KAAMyB,EAAQG,MAAMrB,OADnD,kBAGMqB,EAAM+tB,cAAc5zB,EAAkBwB,GAH5C,OAGL/C,EAHK,OAILqB,EAJK,UAII+F,EAAM5B,KAJV,sBAI4BxF,EAAG4C,KAAK5C,IAC/CiD,EAAGmyB,kBAAkBryB,EAAM1B,GALhB,gDAOXpC,QAAQC,IAAR,MACA+1B,EAAU,QAAS3tB,KAAKC,UAAL,2BAAoBN,EAAQG,OAA5B,IAAmCrB,MAAO,QAAS,CAAEU,KAAM,MARnE,yDAAH,qDAYZ,OAAI,OAACQ,QAAD,IAACA,GAAD,UAACA,EAASG,aAAV,OAAC,EAAgBrB,MAWnB,gCACE,cAAC+C,EAAA,EAAD,CAAMmJ,SAAU,kBAAMijB,KAAtB,SACE,cAACpsB,EAAA,EAAKC,MAAN,CACEL,YAAY,kBACZpI,MAAOyC,EACP+xB,UAAW,GACX7rB,SAAU,SAAC9K,EAAG+K,GAAJ,OAAU8rB,EAAQ9rB,EAAE5I,QAC9B8I,WAAS,EACTpF,MAAO,CAAE2F,MAAO,YAGpB,uBAEA,cAACnF,EAAA,EAAD,CAAQkF,OAAK,EAACD,SAAO,EAACK,SAAU/G,EAAKhG,OAAS,EAAGyG,QAAS,kBAAM0xB,KAAhE,SACGnyB,EAAKhG,OAAS,EAAI,kCAAoC,uBAvBzD,cAAC,GAAD,CACEkK,QAASA,EACTC,WAAY+tB,EACZ5xB,QAAS,kBAAM,MACf8D,YAAa,kBAAM,S,qBCxBrBkuB,GAAY,CAChB,CAAEtyB,KAAM,KAAM4G,MAAO,GACrB,CAAE5G,KAAM,SACR,CAAEA,KAAM,OACR,CAAEA,KAAM,YAgDJuyB,GAAY,CAChB,CAAEvyB,KAAM,eACR,CAAEA,KAAM,WACR,CAAEA,KAAM,SACR,CAAEA,KAAM,YACR,CAAEA,KAAM,SACR,CAAEA,KAAM,UACR,CAAEA,KAAM,UACR,CAAEA,KAAM,SAGJwyB,GAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACtB,EAAsCryB,mBAAS,IAA/C,mBAAOzB,EAAP,KAAoB+zB,EAApB,KACA,EAAkBtrB,YAAW,CAAC,UAAvBlD,EAAP,oBAUA,OARA/B,qBAAU,WACR,IAAKswB,EAAQ,OAAO,KACpB,IAAKvuB,EAAQG,MAAO,OAAO,KAC3B,IAAMA,EAAQpB,GAAgBiB,EAAQG,MAAM5B,KAAMyB,EAAQG,MAAM3B,MAAOwB,EAAQG,MAAMrB,OACrF0vB,EAAe,IACfC,GAAaF,EAAQpuB,EAAOquB,KAC3B,CAACD,EAAQvuB,EAASwuB,IAEd,cAAC,GAAD,CAAe7yB,KAAMlB,EAAalD,QAAS82B,MAG9CI,GAAY,uCAAG,WAAOF,EAAQpuB,EAAOquB,GAAtB,mBAAAh3B,EAAA,sEACHwE,EAAGlF,IAAIL,aAAa0C,IAAI,CAAEiB,IAAKm0B,EAAOn0B,MADnC,qEAKd+F,EALc,iEAOXxL,EAAS45B,EAAOn0B,IAAI+kB,MAAM,KAAKpZ,OAAO,GAAG,GAP9B,UAQC5F,EAAMuuB,aAAa/5B,GARpB,QAQX2K,EARW,OAUX7E,EAAc6E,EAAI3D,KAAK+D,MAAMxK,QAAO,SAAC6e,EAAKuD,EAAM/X,GACpD,GAAI+X,EAAK7c,YAAa,CAAC,IAAD,gBACQ6c,EAAK7c,aADb,IACpB,2BAA8C,CAAC,IAAD,EAArCk0B,EAAqC,QACtCC,EAAQD,EAAgBE,KACxBp0B,EAAck0B,EAAgB7uB,WAFQ,cAI5BrF,GAJ4B,IAI5C,2BAA6B,CAAC,IAArBwc,EAAoB,QACrBzf,EAAC,yBACLnC,YAAaiiB,EAAKjiB,YAClBmF,QAAS+E,EACTqvB,SACGtX,EAAK1X,YACLqX,GAGL,GAAIK,EAAK5F,KACP,cAAgB1W,OAAOC,KAAKqc,EAAK5F,MAAjC,eAAwC,CAAnC,IAAItZ,EAAG,KACVZ,EAAE,QAAUY,GAAOkf,EAAK5F,KAAKtZ,GAIjC2b,EAAIhe,KAAKyB,IAnBiC,gCAD1B,+BAwBtB,OAAOuc,IACN,IACHya,EAAe/zB,GArCE,kDAuCjBzC,QAAQC,IAAR,MAvCiB,0DAAH,0DA2CH62B,GAlHM,WACnB,MAA4B5yB,mBAAS,MAArC,mBAAOqyB,EAAP,KAAeQ,EAAf,KAqBA,OACE,cAACpuB,EAAA,EAAD,CAAM2J,UAAQ,EAAC0kB,WAAS,EAAxB,SACE,eAACruB,EAAA,EAAKiB,IAAN,WACE,cAACjB,EAAA,EAAKE,OAAN,CAAa6B,MAAO,EAApB,SACE,cAAC,GAAD,CACEtL,MAAO,eACPG,QAAS62B,GACT/mB,YAAa0nB,EACbt3B,SAAS,MAGb,eAACkJ,EAAA,EAAKE,OAAN,CAAa6B,MAAO,EAApB,UACE,uBACA,uBAhCU,WAChB,GAAc,MAAV6rB,EAAgB,OAAO,qBAAKxxB,MAAO,CAAE4F,OAAQ,SACjD,IAAMvI,EACJ,gFAA0Em0B,QAA1E,IAA0EA,OAA1E,EAA0EA,EAAQn0B,KAC9E60B,EACJ,gFACAV,QADA,IACAA,OADA,EACAA,EAAQn0B,IAAI5B,QAAQ,IAAK,YAC3B,OACE,sBAAKuE,MAAO,CAAE4F,OAAQ,OAAtB,UACE,6BACE,mBAAGusB,KAAM90B,EAAT,+BAEF,cAACgJ,EAAA,EAAD,CAAOG,GAAG,QAAQF,WAAS,EAAC1G,QAAS,cAACY,EAAA,EAAD,2BAArC,SACE,cAAC,KAAD,CAAQlE,MAAO81B,UAAUF,GAAQpqB,KAAM,WAoBtCuqB,GACD,cAACjyB,EAAA,EAAD,kCACA,cAAC,GAAD,CAAcoxB,OAAQA,aCc1Bc,GAAsB,uCAAG,WAC7Bp2B,EACAyG,EACA4vB,GAH6B,+BAAA93B,EAAA,6DAI7B+3B,EAJ6B,yCAMV/W,GAAiBvf,EAAWyG,GANlB,UAO7B8vB,GADIA,EANyB,QAObz1B,KAAI,SAAC01B,GACnB,MAAO,CACLnY,KAAMmY,MAKJC,EAAY,CAChBv1B,MAAOlB,EAAU6C,KACjB8D,WAAY,CAAEgS,aAAc3Y,EAAU2Y,aAAc2a,eAAgBtzB,EAAUszB,gBAC9E5sB,SAAU0e,GAAYplB,EAAUqlB,cAChC5e,MAAO8vB,EACP3vB,MAAO,CAAE8vB,QAAS,iBAGhBJ,EAtByB,iCAuBYvzB,EAAGlF,IAAIT,UAC3CyB,MAAM,UACNyB,OAAON,EAAUF,IACjBmB,UA1BwB,OAuB3Bw1B,EAAU9vB,WAAWvJ,UAvBM,eA4B7Bi5B,EAAoBI,GA5BS,4CAAH,0DA+BbE,GAvFS,SAAC,GAAmB,IAAD,EAAhB32B,EAAgB,EAAhBA,UACzB,EAAgDiD,mBAAS,MAAzD,mBAAO5B,EAAP,KAAyBg1B,EAAzB,KACA,EAAgB3X,GAAS1e,GAAlByG,EAAP,oBAEAzB,qBAAU,WACR,GAAKyB,GAA0B,IAAjBA,EAAM5J,QAChB,OAACmD,QAAD,IAACA,KAAW2Y,cAAgB,OAAC3Y,QAAD,IAACA,KAAWqlB,cAAgB,OAACrlB,QAAD,IAACA,KAAWszB,eAAxE,CAEA,IAAMgD,EAAuD,SAApCt2B,EAAUszB,eAAeJ,OAClDkD,GAAuBp2B,EAAWyG,EAAO4vB,EAAqBC,MAC7D,CAACt2B,EAAWyG,EAAO4vB,IA2BtB,OAAKr2B,EAGH,8BACE,eAAC0H,EAAA,EAAD,CAAM2J,UAAQ,EAAC3I,WAAS,EAACpK,QAAS,EAAlC,UACE,eAACoJ,EAAA,EAAKE,OAAN,CAAa6B,MAAO,EAApB,UACE,cAACvF,EAAA,EAAD,CAAQyD,UAAU,SAAS7D,MAAO,CAAEwN,WAAY,UAAWvN,MAAO,SAAlE,8BAGA,cAAC,GAAD,CAAgB/D,UAAWA,IAC3B,uBAnCa,SAACkzB,GACpB,IAAKA,EAAQ,OAAO,KACpB,OAAQlzB,EAAUszB,eAAeJ,QAC/B,IAAK,OACH,OAAO,cAAC,GAAD,CAAY7xB,iBAAkBA,IACvC,IAAK,QACH,OAAO,cAAC,GAAD,CAAaA,iBAAkBA,IACxC,QACE,OAAO,MA4BJu1B,CAAY,OAAC52B,QAAD,IAACA,GAAD,UAACA,EAAWszB,sBAAZ,aAAC,EAA2BJ,WAxB5B,WAAO,IAAD,EACzB,OAAI,OAAClzB,QAAD,IAACA,GAAD,UAACA,EAAWszB,sBAAZ,OAAC,EAA2BJ,OACQ,UAApClzB,EAAUszB,eAAeJ,OAA2B,KAEtD,eAACxrB,EAAA,EAAKE,OAAN,CAAa6B,MAAO,GAApB,UACE,cAACvF,EAAA,EAAD,CAAQyD,UAAU,SAAS7D,MAAO,CAAEwN,WAAY,UAAWvN,MAAO,SAAlE,oCAGA,cAAC,GAAD,OAP2C,KAyB1C8yB,QAbgB,MCpCnBC,GAAmB,WAAO,IAAD,gBAC7B,EAAgC7zB,mBAAS,cAAzC,mBAAO8zB,EAAP,KAAiBC,EAAjB,KACA,EAAkD/zB,mBAAS,MAA3D,mBAAOg0B,EAAP,KAA0BzkB,EAA1B,KAEAzT,QAAQC,IAAIi4B,GAEZ,IAAMj3B,EAAYuO,yBAAa,WAE7B,OAAI0oB,EACKl0B,EAAGlF,IAAIV,WACX+C,IAAI+2B,EAAkBn3B,IACtBmF,MAAK,SAAC9E,GACL,OAAO,2BAAKA,GAAZ,IAAgB+2B,OAAQD,EAAkBC,YAE3CC,OAAM,SAACl5B,GACNc,QAAQC,IAAIf,MAEJ,OACb,CAACg5B,IAEEG,EAAa7oB,yBAAa,WAC9B,OAAI,OAACvO,QAAD,IAACA,KAAWF,GACTiD,EAAGlF,IAAIT,UAAUyB,MAAM,UAAUyB,OAAON,EAAUF,IAAIpB,QADlC,IAE1B,CAACsB,IAkBJ,OACE,sBAAK8D,MAAO,CAAE+jB,OAAQ,OAAtB,UACE,eAACwP,GAAA,EAAK7lB,MAAN,CAAYyG,SAAO,EAAC3I,aAAW,EAAC1D,KAAK,OAAO9H,MAAO,CAAE2F,MAAO,OAAQ4F,SAAU,QAA9E,UACE,cAACgoB,GAAA,EAAD,CACEn2B,MAAM,YACNo2B,YAAat3B,EAAYA,EAAU6C,KAAO,gBAC1CuI,OAAqB,eAAb2rB,EACRQ,UAAyB,OAAdv3B,GAAmC,MAAbA,EACjCsD,QAAS,SAACrF,EAAG+K,GACXguB,EAAY,iBAGhB,cAACK,GAAA,EAAD,CACEn2B,MAAM,YACNo2B,YAAaF,EAAa,EAAb,UAAoBA,EAApB,cAA6C,GAC1DhsB,OAAqB,cAAb2rB,EACRQ,UAAWH,EAAa,EACxBxtB,SAAwB,OAAd5J,EACVsD,QAAS,SAACrF,EAAG+K,GAAJ,OAAUguB,EAAY,gBAEjC,cAACK,GAAA,EAAD,CACEn2B,MAAM,QACNo2B,YACW,OAATt3B,QAAS,IAATA,GAAA,UAAAA,EAAW2Y,oBAAX,SAAyBha,EAAzB,iBACOqB,QADP,IACOA,GADP,UACOA,EAAW2Y,oBADlB,aACO,EAAyBha,EADhC,kBAEe,OAATqB,QAAS,IAATA,KAAW2Y,aAAaL,cAAxB,YAAsD,IAExD,KAENlN,OAAqB,UAAb2rB,EACRQ,YAAY,OAACv3B,QAAD,IAACA,GAAD,UAACA,EAAW2Y,oBAAZ,QAAC,EAAyBha,GACtCiL,SAAyB,IAAfwtB,EACV9zB,QAAS,SAACrF,EAAG+K,GAAJ,OAAUguB,EAAY,YAEjC,cAACK,GAAA,EAAD,CACEn2B,MAAM,WACNo2B,aAAsB,OAATt3B,QAAS,IAATA,GAAA,UAAAA,EAAWqlB,oBAAX,eAAyBjgB,OAAQ,kBAC9CgG,OAAqB,SAAb2rB,EACRQ,YAAY,OAACv3B,QAAD,IAACA,GAAD,UAACA,EAAWqlB,oBAAZ,QAAC,EAAyBjgB,MACtCwE,WAAU,OAAC5J,QAAD,IAACA,GAAD,UAACA,EAAW2Y,oBAAZ,OAAC,EAAyBha,GACpC2E,QAAS,SAACrF,EAAG+K,GAAJ,OAAUguB,EAAY,WAEjC,cAACK,GAAA,EAAD,CACEn2B,MAAM,SACNo2B,YAAa,uBACblsB,OAAqB,WAAb2rB,EACRntB,SACgB,OAAd5J,KAAsB,OAACA,QAAD,IAACA,GAAD,UAACA,EAAW2Y,oBAAZ,OAAC,EAAyBha,MAAK,OAACqB,QAAD,IAACA,GAAD,UAACA,EAAWqlB,oBAAZ,OAAC,EAAyBjgB,MAEjF9B,QAAS,SAACrF,EAAG+K,GAAJ,OAAUguB,EAAY,gBAInC,cAACzuB,EAAA,EAAD,CAASzE,MAAO,CAAEyN,OAAQ,KAAO9I,SAAS,SAA1C,SArEiB,SAACsuB,GACpB,OAAQA,GACN,IAAK,aACH,OAAO,cAAC,GAAD,CAAmBvkB,qBAAsBA,IAClD,IAAK,YACH,OAAO,cAAC,GAAD,CAAiBxS,UAAWA,IACrC,IAAK,QACH,OAAO,cAAC,GAAD,CAAmBA,UAAWA,IACvC,IAAK,OACH,OAAO,cAAC,GAAD,CAAYA,UAAWA,IAChC,IAAK,SACH,OAAO,cAAC,GAAD,CAAiBA,UAAWA,IACrC,QACE,OAAO,MAyDNyW,CAAasgB,SAMP3pB,OAAMC,KAAKypB,IC7GbU,GAAb,WACE,WAAYtwB,EAAOxL,GAAS,oBAC1BkC,KAAKsJ,MAAQA,EACbtJ,KAAKlC,OAASA,EACdkC,KAAKiB,MAAQ,SAJjB,+EAOE,sBAAAN,EAAA,+EAE0BX,KAAKsJ,MAAMke,YAAYxnB,KAAKlC,QAFtD,cAEIkC,KAAK8I,SAFT,gBAG0B9I,KAAKsJ,MAAMuwB,YAAY75B,KAAKlC,QAHtD,OAGIkC,KAAK40B,SAHT,8DAKIzzB,QAAQC,IAAR,MACApB,KAAK85B,SAAU,EANnB,2BASE95B,KAAK85B,SAAU,EATjB,yDAPF,kHAmBE,WAAcpxB,GAAd,eAAA/H,EAAA,6DACQo5B,EAAUrxB,GAAK1I,KAAK40B,SAASoF,UAAYh6B,KAAK40B,SAASE,cAC7D90B,KAAK40B,SAASoF,QAAUprB,KAAK4P,IAAI9V,EAAG1I,KAAK40B,SAASoF,SAFpD,SAGeh6B,KAAKsJ,MAAM2wB,QAAQj6B,KAAKlC,OAAQi8B,EAAU,KAAOrxB,GAHhE,wFAnBF,oFAyBE,SAAgB/E,EAASsF,EAAYpF,GACnC7D,KAAKsJ,MAAM4wB,eAAel6B,KAAKlC,OAAQ6F,EAASsF,EAAYpF,OA1BhE,KAiCas2B,GAAb,WACE,WAAYj4B,EAAIk4B,GAAY,oBAC1Bp6B,KAAKkC,GAAKA,EACVlC,KAAKo6B,UAAYA,EACjBp6B,KAAKiB,MAAQ,QAJjB,+EAOE,4BAAAN,EAAA,sEACkBwE,EAAGlF,IAAIJ,UAAUyC,IAAI,CAAEJ,GAAIlC,KAAKkC,KADlD,UACMm4B,EADN,8BAGIr6B,KAAK85B,SAAU,EAHnB,kBAIW,MAJX,OAOE95B,KAAK85B,SAAU,EACf95B,KAAKsD,MAAQ+2B,EAAI/2B,MACjBtD,KAAK6I,MAAQwxB,EAAIxxB,MACjB7I,KAAKk2B,IAAMmE,EAAInE,IAEfl2B,KAAK8I,SAAWuxB,EAAIvxB,SACpB9I,KAAK40B,SAAW,CACd0F,QAASD,EAAIxxB,MAAM5J,OACnB+6B,QAASK,EAAIL,SAAW,EACxBnF,gBAAgB,EAChBC,eAAe,GAjBnB,iDAPF,kHA4BE,WAAcpsB,GAAd,uBAAA/H,EAAA,yDACY,OAAN+H,EADN,uBAEI1I,KAAK40B,SAASoF,QAAUprB,KAAK4P,IAAI9V,EAAG1I,KAAK40B,SAASoF,SAFtD,SAKU70B,EAAGlF,IAAIJ,UACVoB,MAAM,MACNyB,OAAO1C,KAAKkC,IACZS,OAAO,CAAEq3B,QAASprB,KAAK4P,IAAI9V,EAAG1I,KAAK40B,SAASoF,SAAUt2B,cAAe,IAAI/E,OARhF,cAWQgF,EAAU3D,KAAK6I,MAAMH,GAAG/E,QAXhC,SAYyBwB,EAAGo1B,mBAAmBv6B,KAAKkC,GAAIyB,GAZxD,cAYMsF,EAZN,OAaQpF,EAbR,UAaiBoF,SAbjB,aAaiB,EAAYpF,OAC3BoF,GAAuB,QAAV,EAAAA,SAAA,eAAYrF,cAAe,GAd1C,kBAgBS,CACL1B,GAAIyB,EACJ8c,KAAK,eAAMzgB,KAAK6I,MAAMH,IACtBO,aACApF,WApBJ,iDA5BF,2HAoDE,WAAsBF,EAASsF,EAAYpF,GAA3C,SAAAlD,EAAA,sDACEwE,EAAGwvB,gBAAgB30B,KAAKkC,GAAIyB,EAASsF,EAAYpF,GADnD,gDApDF,kECPM22B,I,OAAqB,uCAAG,WAAOj3B,EAAK4F,EAASsxB,EAAcC,GAAnC,uBAAA/5B,EAAA,6DACtB0d,EAAI,IAAIsc,IAAIp3B,GACZ+F,EAAQpB,GAAgBmW,EAAEuc,OAAH,OAAWzxB,QAAX,IAAWA,GAAX,UAAWA,EAASG,aAApB,aAAW,EAAgBrB,OAF5B,kBAKpBqB,EAAM7B,WALc,uDAQ1BizB,EAAe,cAAC,GAAD,CAAOhzB,KAAM2W,EAAEuc,OAAQ1uB,OAAO,KARnB,eAWtBpO,EAASugB,EAAE5Q,SAAS6a,MAAM,KAAKpZ,OAAO,GAAG,GACzC+L,EAAK,IAAI2e,GAAgBtwB,EAAOxL,GAZV,UAatBmd,EAAG4f,OAbmB,QAcxB5f,EAAG6e,SAASW,EAAaxf,GAdD,yDAAH,6DAiBrB6f,GAAoB,uCAAG,WAAO54B,EAAIiH,EAASsxB,GAApB,eAAA95B,EAAA,6DACrBsa,EAAK,IAAIkf,GAAej4B,EAAnB,OAAuBiH,QAAvB,IAAuBA,OAAvB,EAAuBA,EAASxB,MAAhC,OAAuCwB,QAAvC,IAAuCA,OAAvC,EAAuCA,EAASlB,OADhC,SAErBgT,EAAG4f,OAFkB,OAGvB5f,EAAG6e,SAASW,EAAaxf,GAHF,2CAAH,0DAMpB8f,GAAmB,SAAC/2B,GAGxB,OAFcA,EAAS0K,OAAOssB,UAAU,GACpB1S,MAAM,KACbjqB,QAAO,SAACgG,EAAK42B,GACxB,MAAqBA,EAAK3S,MAAM,KAAhC,mBAAO/mB,EAAP,KAAYiB,EAAZ,KAEA,OADA6B,EAAI62B,mBAAmB35B,IAAQ25B,mBAAmB14B,GAC3C6B,IACN,KC1DCqQ,GAAe,CACnB,CAAEzP,KAAM,SACR,CAAEA,KAAM,OACR,CAAEA,KAAM,WAAYC,EAAG,SAAClD,GAAD,gBAAYA,EAAIg4B,SAAW,EAA3B,cAAkCh4B,EAAI6G,MAAM5J,UACnE,CAAEgG,KAAM,iBACR,CAAEA,KAAM,KAAMgM,MAAM,IAcPkqB,GAXO,SAAC,GAA0B,EAAxBzD,OAAyB,IAAjBQ,EAAgB,EAAhBA,UAC/B,OACE,cAAC,GAAD,CACE33B,MAAO,YACPG,QAASgU,GACTlE,YAAa0nB,EACbxoB,SAAS,WCmDT0rB,GAAe,SAACC,GACpB,IAAMC,EAAQD,EAAS/S,MAAM,KAC7B,OAAOgT,EAAMA,EAAMr8B,OAAS,IAGfs8B,GAjEG,WAChB,IAAM/1B,EAAUC,cAChB,EAA4BJ,mBAAS,MAArC,mBAAOqyB,EAAP,KAAeQ,EAAf,KAEMsD,EAAU,uCAAG,WAAOn7B,GAAP,uBAAAM,EAAA,yDACX86B,EAAa,IAAIC,WACjBC,EAAWt7B,EAAE4rB,OAAO2P,MAAM,GAGnB,UAFPp0B,EAAO4zB,GAAaO,EAAS12B,SAGjCw2B,EAAWI,WAAWF,EAAU,SAChCF,EAAWK,OAAS,SAACz7B,GACnB,IAAM6B,EAAK65B,IAAW17B,EAAE4rB,OAAO3tB,QAC/B6G,EAAG62B,eAAexyB,KAAKyyB,MAAM57B,EAAE4rB,OAAO3tB,QAAS4D,KAGtC,QAATsF,EAZa,wBAaX00B,EAAS,IAAIvF,KAbF,SAcMuF,EAAOC,UAAUR,GAdvB,QAcTS,EAdS,QAeRC,QAAP,uCAAe,WAAOC,EAAS1F,GAAhB,iBAAAj2B,EAAA,yDACiB,QAA1Bi2B,EAAK3xB,KAAKiK,MAAM,EAAG,GADV,iEAESktB,EAAOxF,KAAKA,EAAK3xB,MAAMs3B,MAAM,QAFtC,OAEPh2B,EAFO,OAGPrE,EAAK65B,IAAWx1B,GACtBpB,EAAG62B,eAAexyB,KAAKyyB,MAAM11B,GAAUrE,GAJ1B,2CAAf,yDAfe,4CAAH,sDAwBVs6B,EAAc,uCAAG,sBAAA77B,EAAA,sDAErB6E,EAAQtG,KAAK,iBAAmBw4B,EAAOx1B,IAFlB,2CAAH,qDAKpB,OACE,eAAC4H,EAAA,EAAD,CAAM2J,UAAQ,EAAC3I,WAAS,EAACqtB,WAAS,EAACjyB,MAAO,CAAE4N,UAAW,OAAvD,UACE,eAAChK,EAAA,EAAKE,OAAN,CAAa9D,MAAO,CAAE6D,UAAW,UAAY8B,MAAO,EAApD,UACE,cAACvF,EAAA,EAAD,CAAQyD,UAAU,SAAS7D,MAAO,CAAEwN,WAAY,UAAWvN,MAAO,SAAlE,4BAIA,uBAAOqB,KAAK,OAAOi1B,OAAO,aAAatxB,SAAUqwB,IACjD,8BACE,4BAGJ,eAAC1xB,EAAA,EAAKE,OAAN,CAAa6B,MAAO,EAApB,UACE,cAACvF,EAAA,EAAD,CAAQyD,UAAU,SAAS7D,MAAO,CAAEwN,WAAY,UAAWvN,MAAO,SAAlE,6BAGA,cAACO,EAAA,EAAD,CAAQkF,OAAK,EAACD,SAAO,EAACK,UAAW0rB,EAAQhyB,QAAS82B,EAAlD,qCAGA,uBACA,uBACA,cAAC,GAAD,CAAW9E,OAAQA,EAAQQ,UAAWA,WClDxCrrB,GAAQ,CACZ,CAAE3B,MAAO,YAAavC,KAAM,aAAc+zB,UHFrB,WACrB,IAAM14B,EAAW+I,cACjB,EAAkC1H,mBAAS,MAA3C,mBAAOqvB,EAAP,KAAkB+F,EAAlB,KACA,EAAsCp1B,mBAAS,MAA/C,mBAAOs3B,EAAP,KAAoBjC,EAApB,KACA,EAAkBruB,YAAW,CAAC,UAAvBlD,EAAP,oBAYA,OAVA/B,qBAAU,WACR,GAAIpD,EAAS0K,OAAQ,CACnB,IAAMkuB,EAAU7B,GAAiB/2B,GACjC,OAAI44B,QAAJ,IAAIA,KAASr5B,KAAKi3B,GAAsBoC,EAAQr5B,IAAK4F,EAASsxB,EAAcC,GACxEkC,EAAQ16B,IAAI44B,GAAqB8B,EAAQ16B,GAAIiH,EAASsxB,EAAcC,QAExED,EAAa,QAEd,CAACz2B,EAAUmF,EAASsxB,IAElB/F,EACE,cAAC,IAAD,CAAWA,UAAWA,IADNiI,GGdyCxvB,MAAM,GACtE,CAAEjC,MAAO,OAAQvC,KAAM,QAAS+zB,UAAWnB,GAAWpuB,MAAM,GAC5D,CACEjC,MAAO,oBACPvC,KAAM,WACN+zB,UAAWxD,GACX/rB,MAAM,IAuBK0vB,GAbH,WACV,OACE,cAAC,IAAD,CAAYC,SAAS,IAArB,SACE,cAAC,GAAD,CAAYjwB,MAAOA,GAAnB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOkwB,OAAK,EAACp0B,KAAM,IAAKq0B,OAAQ,kBAAM,cAAC,GAAD,QAX1BnwB,EAYEA,GAXfA,EAAM3J,KAAI,SAAC+J,GAChB,OAAO,cAAC,IAAD,CAAO8vB,OAAK,EAACp0B,KAAMsE,EAAKtE,KAAMq0B,OAAQ,kBAAM,cAAC/vB,EAAKyvB,UAAN,kBAFlC,IAAC7vB,G,UCHhBowB,GAAcC,aAAgB,CAClC9H,cAnBoB,WAA4B,IAA3BrU,EAA0B,wDAAXoc,EAAW,uCAC/C,MACO,iBADCA,EAAO31B,KAEJ21B,EAAO51B,MAEPwZ,GAeXqc,eAXqB,WAA2B,IAA1Brc,EAAyB,uDAAjB,KAAMoc,EAAW,uCAC/C,MACO,yBADCA,EAAO31B,KAEJ21B,EAAOE,KAEPtc,KASEkc,M,UChBTK,GAAQC,aAAYN,IAE1BO,IAASR,OACP,cAAC,IAAMS,WAAP,UACE,cAACC,GAAA,EAAD,UACE,cAAC,IAAD,CAAUJ,MAAOA,GAAjB,SACE,cAAC,GAAD,UAIN/+B,SAASo/B,cAAc,Y","file":"static/js/main.f3242641.chunk.js","sourcesContent":["import hash from \"object-hash\";\nimport { prepareDocument } from \"ccs-annotator-client\";\n\n/**\n * Prepares a batch of documents. Returns [documents, codes], where codes contains the annotation codes used in the documents\n *\n * @param {*} documentList an Array with documents\n * @param {*} existingUids An (optional) array of existing unique (hash-based) ids, to ignore duplicate articles\n * @param {*} job_id       A unique job_id for which the document is intended. If not given, assumes it's a temp document (that won't be stored in indexedDB)\n * @param {*} silent       Whether or not to report if items have been created\n */\nexport const prepareDocumentBatch = (\n  documentList,\n  existingUids = [],\n  job_id = \"TEMP\",\n  silent = true\n) => {\n  let ids = new Set(existingUids);\n\n  let duplicates = 0;\n  let codes = {};\n\n  const preparedDocuments = documentList.reduce((result, document) => {\n    if (document.document_id == null) return result;\n    const doc_uid = hash([document, job_id, new Date()]); // bit overkill, sure\n    if (!ids.has(doc_uid)) {\n      ids.add(doc_uid);\n\n      const preparedDoc = prepareDocument(document, codes); // the codes  are filled within\n      if (preparedDoc.tokens.length === 0) return result;\n\n      result.push({\n        doc_uid: doc_uid,\n        job_id: job_id,\n        ...preparedDoc,\n      });\n    } else {\n      duplicates++;\n    }\n    return result;\n  }, []);\n\n  if (!silent) {\n    let message = `Created ${preparedDocuments.length} new documents.`;\n    if (duplicates > 0) message = message + ` Ignored ${duplicates} duplicates`;\n    alert(message);\n  }\n\n  return [preparedDocuments, codes];\n};\n","import Dexie from \"dexie\";\nimport { prepareDocumentBatch } from \"library/prepareDocumentBatch\";\nimport { standardizeCodes } from \"ccs-annotator-client\";\n\nconst dbName = \"CSSannotator_V1\";\nconst idbStores = {\n  codingjobs: \"++id, name\", // unindexed fields: jobcreator, codingscheme, codebook, codebookEdit, returnAddress\n  documents: \"doc_uid, job_id\", // unindexed fields: title, text, meta, tokens, annotations\n  tasks: \"[title+url], last_modified, url\", // unindexed fields:  codebook, items\n\n  unitsets: \"++id, name\",\n  codebooks: \"++id, name\",\n\n  deployedJobs: \"++id, title, url\", // unindexed: title, created\n  localJobs: \"++id, title, last_modified, id\", // unindexed fields:  codebook, items\n  localAnnotations: \"[id+unit_id], id\",\n};\n\nclass AnnotationDB {\n  constructor() {\n    this.idb = new Dexie(dbName);\n\n    //for testing, clean db on refresh\n    // this.idb.delete();\n    // this.idb = new Dexie(dbName);\n    try {\n      this.idb.version(2).stores(idbStores);\n    } catch (e) {\n      // this is not a good idea for production, but for now it helps solve the problem\n      // that whenever the schemas are changed (in development), everything breaks\n      this.idb.delete();\n      this.idb = new Dexie(dbName);\n      this.idb.version(2).stores(idbStores);\n    }\n  }\n\n  // GENERAL\n  async getTableBatch(table, offset, limit, columns, reverse = false) {\n    if (offset !== null && offset < 0) return null;\n    let rows = await this.idb.table(table);\n    const n = await rows.count();\n    if (reverse) rows = rows.reverse();\n    if (offset !== null && offset > n - 1) return null;\n    if (limit !== null) rows = rows.offset(offset).limit(limit);\n\n    return await extractColumns(rows, columns);\n  }\n  async getTableFromIds(table, ids, columns, reverse = false) {\n    if (ids.length === 0) return [];\n    let rows = this.idb.table(table).where(\"id\").anyOf(ids);\n    if (reverse) rows = rows.reverse();\n\n    return await extractColumns(rows, columns);\n  }\n  async getTableN(table) {\n    console.log(table);\n    let rows = await this.idb.table(table);\n    return rows.count();\n  }\n  async deleteTableIds(table, ids) {\n    if (ids.length === 0) return [];\n    await this.idb.table(table).where(\"id\").anyOf(ids).delete();\n  }\n  async textSearch(table, fields, query, key, any) {\n    // table: what table to search\n    // fields: what columns to search\n    // query: direct text match\n    // key, any: optionally, filter on an indexed key, where any is an array of values\n    let regex = null;\n    if (query !== \"\") regex = new RegExp(query.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\"));\n\n    let rows = await this.idb.table(table);\n\n    let selection = [];\n    let collection = any == null ? await rows.toCollection() : await rows.where(key).anyOf(any);\n    await collection.each((row) => {\n      for (let field of fields) {\n        if (regex === null) {\n          selection.push(row.id);\n          return;\n        }\n        if (regex.test(row[field])) {\n          selection.push(row.id);\n          return;\n        }\n      }\n    });\n    return selection;\n  }\n\n  async getCodingjobProp(codingjob, prop) {\n    const id = typeof codingjob === \"object\" ? codingjob.id : codingjob;\n    let cj = await this.idb.codingjobs.get(id);\n    return cj[prop];\n  }\n  async setCodingjobProp(codingjob, prop, value) {\n    const id = typeof codingjob === \"object\" ? codingjob.id : codingjob;\n    let cj = await this.idb.codingjobs.get(id);\n    if (cj.settings == null) cj.settings = {};\n    return this.idb.codingjobs\n      .where(\"id\")\n      .equals(id)\n      .modify({ [prop]: value });\n  }\n\n  // DOCUMENTS\n  async createDocuments(codingjob, documentList, silent = false) {\n    const id = typeof codingjob === \"object\" ? codingjob.id : codingjob;\n    let ids = new Set(await this.idb.documents.where(\"job_id\").equals(id).primaryKeys());\n\n    const [preparedDocuments, codes] = prepareDocumentBatch(documentList, ids, id, silent);\n\n    let importedCodes = await this.getCodingjobProp(codingjob, \"importedCodes\");\n    importedCodes = updateImportedCodes(codingjob, importedCodes, codes);\n\n    this.idb.codingjobs.where(\"id\").equals(id).modify({ importedCodes });\n    return this.idb.documents.bulkAdd(preparedDocuments);\n  }\n\n  async deleteDocuments(documents) {\n    const documentIds = documents.map((document) => document.doc_uid);\n    return this.idb.documents.bulkDelete(documentIds);\n  }\n\n  async getJobDocuments(codingjob, offset, limit) {\n    const id = typeof codingjob === \"object\" ? codingjob.id : codingjob;\n\n    if (offset !== null && offset < 0) return null;\n    let documents = await this.idb.documents.where(\"job_id\").equals(id);\n    const ndocs = await documents.count();\n    if (offset !== null && offset > ndocs - 1) return null;\n    if (limit !== null) documents = documents.offset(offset).limit(limit);\n    return documents.toArray();\n  }\n\n  async getJobDocumentCount(codingjob) {\n    const id = typeof codingjob === \"object\" ? codingjob.id : codingjob;\n    return this.idb.documents.where(\"job_id\").equals(id).count();\n  }\n\n  async getDocuments(codingjob) {\n    const id = typeof codingjob === \"object\" ? codingjob.id : codingjob;\n    return this.idb.documents.where(\"job_id\").equals(id);\n  }\n\n  async getDocument(doc_uid) {\n    return this.idb.documents.get(doc_uid);\n  }\n\n  // DEPLOYED JOBS\n  async createDeployedJob(title, url) {\n    const exists = await this.idb.deployedJobs.get({ url });\n\n    if (!exists) {\n      this.idb.deployedJobs.add({\n        title,\n        url,\n        created: new Date(),\n      });\n    } else {\n      this.idb.deployedJobs.get({ url }).modify({ created: new Date() });\n    }\n  }\n\n  // LOCAL JOBS\n  async createLocalJob(codingjobPackage, id) {\n    const exists = await this.idb.localJobs.get({ id });\n\n    if (!exists) {\n      this.idb.localJobs.add({\n        ...codingjobPackage,\n        id,\n        last_modified: new Date(),\n      });\n    } else {\n      alert(\"This job has already been created before\");\n    }\n  }\n\n  // ANNOTATIONS\n  async getUnitAnnotations(job_id, unit_id) {\n    return this.idb.localAnnotations.get({ id: job_id, unit_id });\n  }\n  async getAllAnnotations(job_id) {\n    return this.idb.localAnnotations.where(\"id\").equals(job_id).toArray();\n  }\n  async postAnnotations(job_id, unit_id, annotations, status) {\n    return this.idb.localAnnotations.put({ unit_id, id: job_id, annotations, status }, [\n      job_id,\n      unit_id,\n    ]);\n  }\n\n  // CLEANUP\n  async deleteDB() {\n    await this.idb.delete();\n    this.idb = new Dexie(dbName);\n    this.idb.version(2).stores(idbStores);\n    window.location.reload(false);\n  }\n}\n\nconst updateImportedCodes = (codingjob, importedCodes, codes) => {\n  const addCodes = Object.keys(codes).reduce((obj, key) => {\n    const codesArray = standardizeCodes(Array.from(codes[key]));\n    obj[key] = codesArray.map((code) => ({ ...code, frozen: true }));\n    return obj;\n  }, {});\n\n  if (!importedCodes) return addCodes;\n\n  for (let key of Object.keys(addCodes)) {\n    if (!importedCodes[key]) {\n      importedCodes[key] = addCodes[key];\n    } else {\n      for (let code of addCodes[key]) {\n        if (!importedCodes[key].some((c) => c.code === code.code)) {\n          importedCodes[key].push(code);\n        }\n      }\n    }\n  }\n  return importedCodes;\n};\n\nconst extractColumns = async (rows, columns) => {\n  const data = [];\n  await rows.each((row) => {\n    const values = {};\n    for (let col of columns) {\n      values[col.name] = col.f ? col.f(row) : row[col.name];\n    }\n    data.push(values);\n  });\n  return data;\n};\n\nconst db = new AnnotationDB();\nexport default db;\n","import React, { useState } from \"react\";\nimport { Menu, Button, Header, Icon, Modal } from \"semantic-ui-react\";\nimport { useHistory } from \"react-router-dom\";\nimport db from \"apis/dexie\";\n\nconst Reset = () => {\n  const [open, setOpen] = useState(false);\n  const history = useHistory();\n\n  const onClick = async () => {\n    try {\n      await db.deleteDB();\n      setOpen(false);\n      history.push(\"/\");\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return (\n    <Modal\n      closeIcon\n      open={open}\n      trigger={<Menu.Item icon=\"rocket\" name=\"Reset\" style={{ color: \"#d7a3a3\" }} />}\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n    >\n      <Header icon=\"power off\" content=\"Reset Annotator Database\" />\n      <Modal.Content>\n        <p>\n          This will remove all documents and annotations from your browser. Anything that hasn't\n          been exported will be lost. Are you absolutely sure?\n        </p>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button\n          color=\"red\"\n          onClick={() => {\n            setOpen(false);\n          }}\n        >\n          <Icon name=\"remove\" /> No\n        </Button>\n        <Button color=\"green\" onClick={onClick}>\n          <Icon name=\"checkmark\" /> Yes\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  );\n};\n\nexport default Reset;\n","// this contains functions for setting indexedDB to persistent\n// taken from: https://dexie.org/docs/StorageManager\n\n/** Check if storage is persisted already.\n  @returns {Promise<boolean>} Promise resolved with true if current origin is\n  using persistent storage, false if not, and undefined if the API is not\n  present.\n*/\n\nexport async function initStoragePersistence() {\n  //const persist = tryPersistWithoutPromtingUser();\n  tryPersistWithoutPromtingUser()\n    .then(persist => {\n      switch (persist) {\n        case \"never\":\n          console.log(\"Not possible to persist storage\");\n          break;\n        case \"persisted\":\n          console.log(\"Successfully persisted storage silently\");\n          break;\n        case \"prompt\":\n          console.log(\"Not persisted, but we may prompt user when we want to.\");\n          break;\n        default:\n          console.log(\"compiler desperately wanted a default\");\n      }\n    })\n    .catch(e => {\n      console.log(\n        \"actually failed so hard it threw an error. Probably that persistent-storage is not (yet) a valid permission in the browser\"\n      );\n    });\n}\n\n/** Tries to convert to persisted storage.\n  @returns {Promise<boolean>} Promise resolved with true if successfully\n  persisted the storage, false if not, and undefined if the API is not present.\n*/\nexport async function persist() {\n  return (await navigator.storage) && navigator.storage.persist\n    ? navigator.storage.persist()\n    : undefined;\n}\n\nexport async function isStoragePersisted() {\n  return (await navigator.storage) && navigator.storage.persisted\n    ? navigator.storage.persisted()\n    : undefined;\n}\n\n/** Queries available disk quota.\n  @see https://developer.mozilla.org/en-US/docs/Web/API/StorageEstimate\n  @returns {Promise<{quota: number, usage: number}>} Promise resolved with\n  {quota: number, usage: number} or undefined.\n*/\n// async function showEstimatedQuota() {\n//   return (await navigator.storage) && navigator.storage.estimate\n//     ? navigator.storage.estimate()\n//     : undefined;\n// }\n\n/** Tries to persist storage without ever prompting user.\n  @returns {Promise<string>}\n    \"never\" In case persisting is not ever possible. Caller don't bother\n      asking user for permission.\n    \"prompt\" In case persisting would be possible if prompting user first.\n    \"persisted\" In case this call successfully silently persisted the storage,\n      or if it was already persisted.\n*/\nasync function tryPersistWithoutPromtingUser() {\n  if (!navigator.storage || !navigator.storage.persisted) {\n    return \"never\";\n  }\n  let persisted = await navigator.storage.persisted();\n  if (persisted) {\n    return \"persisted\";\n  }\n  if (!navigator.permissions || !navigator.permissions.query) {\n    return \"prompt\"; // It MAY be successful to prompt. Don't know.\n  }\n  const permission = await navigator.permissions.query({\n    name: \"persistent-storage\",\n  });\n  if (permission.state === \"granted\") {\n    persisted = await navigator.storage.persist();\n    if (persisted) {\n      return \"persisted\";\n    } else {\n      throw new Error(\"Failed to persist\");\n    }\n  }\n  if (permission.state === \"prompt\") {\n    return \"prompt\";\n  }\n  return \"never\";\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Menu, Button, Header, Icon, Modal } from \"semantic-ui-react\";\nimport { persist, isStoragePersisted } from \"apis/storemanager\";\n\nconst Persist = () => {\n  const [open, setOpen] = useState(false);\n  const [persisted, setPersisted] = useState(false);\n\n  useEffect(() => {\n    if (!persisted) {\n      isStoragePersisted().then(setPersisted);\n    }\n  }, [persisted]);\n\n  const onClick = async () => {\n    await persist();\n    const ispersisted = await isStoragePersisted();\n    if (ispersisted) {\n      setPersisted(true);\n      alert(\"indexedDB set to persistent for AmCAT Annotator\");\n    } else {\n      alert(\"Failed to set indexedDB to persistent\");\n    }\n  };\n\n  if (persisted) return null;\n\n  return (\n    <Modal\n      closeIcon\n      open={open}\n      trigger={<Menu.Item icon=\"database\" name=\"Enable persitance\" style={{ color: \"#d7a3a3\" }} />}\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n    >\n      <Header icon=\"database\" content=\"Set database persistence\" />\n      <Modal.Content>\n        <p>\n          We did not have permission to automatically make the data storage for this website\n          persistent. This means that the data could be removed automatically by your browser if it\n          needs to free up space for another website. You can try to set this manually here, but not\n          all browsers support this (yet).\n        </p>\n        <p>\n          If the database is not persistent the app can still be used, but you need to be more\n          carefull in making sure that data is regularly backed up, either by manually downloading\n          data or syncing with some backend (work in progress).\n        </p>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button onClick={onClick}>\n          <Icon name=\"checkmark\" /> Yes\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  );\n};\n\nexport default Persist;\n","export const blockEvents = (block) => {\n  return {\n    type: \"BLOCK_EVENTS\",\n    block,\n  };\n};\n\nexport const setFullScreenNode = (node) => {\n  return {\n    type: \"SET_FULL_SCREEN_NODE\",\n    node,\n  };\n};\n","import Axios from \"axios\";\n\nexport async function getToken(host, email, password) {\n  const response = await Axios.get(`${host}/token`, {\n    auth: { username: email, password: password },\n  });\n  return response.data.token;\n}\n\nexport async function requestToken(host, email) {\n  const response = await Axios.get(`${host}/request_token/`, {\n    auth: { username: email },\n  });\n  return response.data.token;\n}\n\nexport default function newAmcatSession(host, token) {\n  return new Amcat(host, token);\n}\n\nclass Amcat {\n  constructor(host, token) {\n    this.host = host;\n    this.token = token;\n    this.api = Axios.create({\n      baseURL: host,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n  }\n\n  // GET\n  async getToken() {\n    const res = await this.api.get(\"/token\");\n    return res.data;\n  }\n  async getCodebook(job_id) {\n    const res = await this.api.get(`/codingjob/${job_id}/codebook`);\n    return res.data;\n  }\n  async getProgress(job_id) {\n    console.log(\"test\");\n    const res = await this.api.get(`/codingjob/${job_id}/progress`);\n    console.log(res);\n    return res.data;\n  }\n  async getUnit(job_id, i) {\n    let path = `/codingjob/${job_id}/unit`;\n    if (i !== null) path += `?index=${i}`;\n    const res = await this.api.get(path);\n    return res.data;\n  }\n  async getCodingjob(job_id) {\n    const res = await this.api.get(`/codingjob/${job_id}`);\n    return res.data;\n  }\n\n  // POST\n  postCodingjob(codingjobPackage, title) {\n    codingjobPackage.title = title;\n\n    return this.api.post(`/codingjob`, {\n      title: title,\n      units: codingjobPackage.units,\n      codebook: codingjobPackage.codebook,\n      provenance: codingjobPackage.provenance,\n      rules: codingjobPackage.rules,\n    });\n  }\n  postAnnotation(job_id, unit_id, annotation, status) {\n    const data = { annotation, status };\n    this.api.post(`/codingjob/${job_id}/unit/${unit_id}/annotation`, data);\n  }\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Menu, Header, Form, Button, Segment, Grid, Divider, Popup } from \"semantic-ui-react\";\nimport { useCookies } from \"react-cookie\";\nimport { blockEvents } from \"actions\";\nimport { useDispatch } from \"react-redux\";\nimport newAmcatSession, { getToken } from \"apis/amcat\";\n\nconst Login = ({ host = null, force = false }) => {\n  const dispatch = useDispatch();\n  const [open, setOpen] = useState(false);\n  const [cookies, setCookies] = useCookies([\"amcat\"]);\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  useEffect(() => {\n    dispatch(blockEvents(open));\n    return () => {\n      dispatch(blockEvents(false));\n    };\n  }, [dispatch, open]);\n\n  useEffect(() => {\n    if (loggedIn) return;\n    if (!cookies?.amcat?.token) return;\n    checkToken(cookies.amcat, setCookies, setLoggedIn);\n  }, [cookies, loggedIn, setCookies, setLoggedIn]);\n\n  return (\n    <Popup\n      closeIcon={!force}\n      open={open || force}\n      hoverable\n      flowing\n      on=\"click\"\n      mouseLeaveDelay={1000}\n      trigger={\n        <Menu.Item\n          icon={loggedIn ? \"log out\" : \"sign in\"}\n          name={loggedIn ? \"Sign out\" : \"Sign in\"}\n          style={{ color: \"white\" }}\n        />\n      }\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n    >\n      <LoginForm\n        cookies={cookies}\n        setCookies={setCookies}\n        setLoggedIn={setLoggedIn}\n        setOpen={setOpen}\n        host={host}\n      />\n    </Popup>\n  );\n};\n\nexport const LoginForm = ({ cookies, setCookies, setLoggedIn, setOpen, host = null }) => {\n  const amcat = cookies.amcat || {\n    host: \"http://localhost:5000\",\n    email: \"test@user.com\",\n    token: null,\n  };\n\n  if (host) amcat.host = host;\n\n  const setLogin = (value) => {\n    setCookies(\"amcat\", JSON.stringify(value), { path: \"/\" });\n    setLoggedIn(true);\n    setOpen(false);\n  };\n  const setLogout = () => {\n    setCookies(\"amcat\", JSON.stringify({ ...amcat, token: null }), { path: \"/\" });\n    setLoggedIn(false);\n  };\n\n  if (amcat.token) return <SignOut amcat={amcat} setLogout={setLogout} />;\n  return <SignIn setOpen={setOpen} amcat={amcat} setLogin={setLogin} />;\n};\n\nconst checkToken = async (amcat, setCookies, setLoggedIn) => {\n  const amcatconn = newAmcatSession(amcat?.host, amcat?.token);\n  try {\n    // maybe add check for specific user later. For now just check if can get token\n    await amcatconn.getToken();\n    setLoggedIn(true);\n  } catch (e) {\n    console.log(e);\n    setCookies(\"amcat\", JSON.stringify({ ...amcat, token: null }), { path: \"/\" });\n  }\n};\n\nconst SignOut = ({ amcat, setLogout }) => {\n  return (\n    <>\n      <Header icon=\"user\" content=\"Sign out\" />\n\n      <Grid textAlign=\"center\">\n        <Grid.Column>\n          <Button secondary onClick={setLogout}>\n            Sign out from <span style={{ color: \"lightblue\" }}>{amcat.email}</span>\n          </Button>\n        </Grid.Column>\n      </Grid>\n    </>\n  );\n};\n\nconst SignIn = ({ amcat, setLogin }) => {\n  const [host, setHost] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [invalidPassword, setInvalidPassword] = useState(false);\n\n  const passwordLogin = async () => {\n    setPassword(\"\");\n    try {\n      const token = await getToken(host, email, password);\n      setLogin({ ...amcat, token });\n    } catch (e) {\n      setInvalidPassword(true);\n      console.log(e);\n    }\n  };\n\n  const emailError = !email.match(\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n  );\n\n  useEffect(() => {\n    if (amcat?.email) setEmail(amcat.email);\n    if (amcat?.host) setHost(amcat.host);\n  }, [amcat]);\n\n  return (\n    <>\n      <Header icon=\"user\" content=\"Register or sign in\" />\n\n      <Segment placeholder attached=\"bottom\">\n        <Grid stackable textAlign=\"center\">\n          <Grid.Row>\n            <Grid.Column>\n              <Form>\n                <Form.Input\n                  placeholder=\"Host\"\n                  name=\"host\"\n                  label=\"Host\"\n                  value={host}\n                  onChange={(e, d) => {\n                    if (d.value.length < 100) setHost(d.value);\n                  }}\n                  icon=\"home\"\n                  iconPosition=\"left\"\n                  autoFocus\n                />\n                <Form.Input\n                  placeholder=\"email adress\"\n                  error={emailError ? \"Please enter a valid email adress\" : false}\n                  name=\"email\"\n                  label=\"Email\"\n                  icon=\"mail\"\n                  iconPosition=\"left\"\n                  value={email}\n                  onChange={(e, d) => {\n                    if (d.value.length < 100) setEmail(d.value);\n                  }}\n                />\n              </Form>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n        <Divider />\n        <Grid columns={2} textAlign=\"center\">\n          <Grid.Row verticalAlign=\"middle\">\n            <Grid.Column>\n              <Form>\n                <Button circular primary fluid style={{ width: \"7em\", height: \"7em\" }}>\n                  Send link by email\n                </Button>\n              </Form>\n            </Grid.Column>\n            <Divider vertical>Or</Divider>\n            <Grid.Column>\n              <Form>\n                <Form.Input\n                  placeholder=\"password\"\n                  name=\"password\"\n                  error={invalidPassword ? \"Invalid password for this host & email\" : false}\n                  label=\"Password\"\n                  type=\"password\"\n                  icon=\"lock\"\n                  iconPosition=\"left\"\n                  value={password}\n                  onChange={(e, d) => {\n                    setInvalidPassword(false);\n                    setPassword(d.value);\n                  }}\n                />\n                <Button disabled={password.length === 0} primary fluid onClick={passwordLogin}>\n                  Sign in\n                </Button>\n              </Form>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Segment>\n    </>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport { Menu, Sidebar } from \"semantic-ui-react\";\nimport { Link, withRouter, useLocation } from \"react-router-dom\";\n\nimport Reset from \"./Reset\";\nimport Persist from \"./Persist\";\nimport UserName from \"./Login\";\n\n// This is the index file of HeaderMenu, but importing via index\n// breaks. Probably due to the withRouter()\n\nconst HeaderMenu = ({ items, children }) => {\n  const location = useLocation();\n  const menuItems = items.map((item, index) => {\n    if (!item.menu) return null;\n    return (\n      <Menu.Item\n        key={\"item-\" + index}\n        index={index}\n        as={Link}\n        to={item.path}\n        header={index === 0}\n        active={item.path === location.pathname}\n      >\n        {item.label}\n      </Menu.Item>\n    );\n  });\n\n  if (location.pathname === \"/annotator\") return children;\n  return (\n    <Sidebar.Pushable style={{ height: \"100vh\" }}>\n      <Sidebar as={Menu} inverted animation=\"push\" visible={true} direction={\"top\"} size=\"mini\">\n        {menuItems}\n        <Menu.Menu position=\"right\">\n          <UserName />\n          <Persist />\n          <Reset />\n        </Menu.Menu>\n      </Sidebar>\n      <Sidebar.Pusher>{children}</Sidebar.Pusher>\n    </Sidebar.Pushable>\n  );\n};\n\nexport default withRouter(HeaderMenu);\n","import React, { useEffect, useState } from \"react\";\nimport { Container, Pagination, Table, Icon, Input } from \"semantic-ui-react\";\nimport db from \"apis/dexie\";\nimport { useLiveQuery } from \"dexie-react-hooks\";\n\nconst PAGESIZE = 10;\n\n/**\n * A table that (efficiently) shows a Dexie table (indexedDB), with pagination, search, and selection\n */\nconst DexieTable = ({\n  table,\n  columns,\n  allColumns,\n  idColumn = \"id\",\n  setSelected,\n  searchColumn,\n  reverse,\n}) => {\n  // table from db\n  // columns is array of objects with name (of field) and width\n  // allColumns is bool for whether or not to include the rest of the columns\n  const tableUpdated = useLiveQuery(() => db.idb.table(table).toCollection().keys());\n\n  const [data, setData] = useState([]);\n  const [pages, setPages] = useState(1);\n  const [useColumns, setUseColumns] = useState(columns);\n  const [search, setSearch] = useState(null);\n  const [selectedRow, setSelectedRow] = useState(null);\n\n  useEffect(() => {\n    if (!table) {\n      setData([]);\n      return null;\n    }\n    fetchFromDb(\n      table,\n      PAGESIZE,\n      setPages,\n      setData,\n      setSelectedRow,\n      columns,\n      allColumns,\n      setUseColumns,\n      search,\n      reverse\n    );\n  }, [table, columns, allColumns, search, tableUpdated, setSelectedRow, reverse]);\n\n  useEffect(() => {\n    if (setSelected) setSelected(selectedRow);\n  }, [selectedRow, setSelected]);\n\n  const addSearchColumn = (name) => {\n    if (name !== searchColumn) return name;\n    return <QueryTable table={table} searchOn={name} setSearch={setSearch} />;\n  };\n\n  const createHeaderRow = () => {\n    return useColumns.map((column, i) => {\n      if (column.hide) return null;\n      return (\n        <Table.HeaderCell key={i} width={column.width}>\n          <span title={column.name}>{addSearchColumn(column.name)}</span>\n        </Table.HeaderCell>\n      );\n    });\n  };\n\n  const createBodyRows = (data) => {\n    if (data === null || data.length === 0) return null;\n\n    //while (data.length < PAGESIZE) data.push(null);\n    return data.map((rowObj, i) => {\n      const isSelected = rowObj[idColumn] === selectedRow?.[idColumn];\n      return (\n        <Table.Row\n          key={i}\n          style={{ height: \"3.1em\" }}\n          active={isSelected}\n          onClick={() => setSelectedRow(rowObj)}\n        >\n          {createRowCells(rowObj)}\n        </Table.Row>\n      );\n    });\n  };\n\n  const createRowCells = (rowObj) => {\n    return useColumns.map((column, i) => {\n      if (column.hide) return null;\n      let content = rowObj ? rowObj[column.name] : null;\n      if (content instanceof Date) content = content.toISOString().slice(0, 19).replace(/T/g, \" \");\n      return (\n        <Table.Cell key={i}>\n          <span title={content}>{content}</span>\n        </Table.Cell>\n      );\n    });\n  };\n\n  const pageChange = async (event, data) => {\n    const offset = (data.activePage - 1) * PAGESIZE;\n    let newdata = null;\n    if (search == null) {\n      newdata = await db.getTableBatch(table, offset, PAGESIZE);\n    } else {\n      newdata = await db.getTableFromIds(table, search.slice(offset, offset + PAGESIZE));\n    }\n    setData(newdata);\n  };\n\n  if (!useColumns) return null;\n\n  return (\n    <Container style={{ overflow: \"auto\" }}>\n      <Table\n        unstackable\n        selectable\n        fixed\n        compact\n        singleLine\n        size=\"small\"\n        style={{ fontSize: \"10px\" }}\n      >\n        <Table.Header>\n          <Table.Row>{createHeaderRow(data, columns)}</Table.Row>\n        </Table.Header>\n        <Table.Body>{createBodyRows(data)}</Table.Body>\n        <Table.Footer>\n          <Table.Row>\n            <Table.HeaderCell colSpan={columns.filter((col) => !col.hide).length}>\n              {pages > 1 ? (\n                <Pagination\n                  size=\"mini\"\n                  floated=\"right\"\n                  boundaryRange={1}\n                  siblingRange={1}\n                  ellipsisItem={{\n                    content: <Icon name=\"ellipsis horizontal\" />,\n                    icon: true,\n                  }}\n                  firstItem={{\n                    content: <Icon name=\"angle double left\" />,\n                    icon: true,\n                  }}\n                  lastItem={{\n                    content: <Icon name=\"angle double right\" />,\n                    icon: true,\n                  }}\n                  prevItem={{ content: <Icon name=\"angle left\" />, icon: true }}\n                  nextItem={{\n                    content: <Icon name=\"angle right\" />,\n                    icon: true,\n                  }}\n                  pointing\n                  secondary\n                  defaultActivePage={1}\n                  totalPages={pages}\n                  onPageChange={pageChange}\n                ></Pagination>\n              ) : null}\n            </Table.HeaderCell>\n          </Table.Row>\n        </Table.Footer>\n      </Table>\n    </Container>\n  );\n};\n\nconst fetchFromDb = async (\n  table,\n  pageSize,\n  setPages,\n  setData,\n  setSelectedRow,\n  columns,\n  allColumns,\n  setUseColumns,\n  search,\n  reverse\n) => {\n  let n = null;\n\n  if (search == null) {\n    n = await db.getTableN(table);\n  } else {\n    n = search.length;\n  }\n\n  setPages(Math.ceil(n / pageSize));\n  let newdata = [];\n  const useColumns = [...columns];\n\n  if (n > 0) {\n    if (search == null) {\n      newdata = await db.getTableBatch(table, 0, pageSize, columns, reverse);\n    } else {\n      newdata = await db.getTableFromIds(table, search.slice(0, PAGESIZE), columns, reverse);\n    }\n    if (allColumns) addBatchColumns(useColumns, newdata); // pushes to useColumns\n  }\n\n  console.log(newdata);\n  setUseColumns(useColumns);\n  setData(newdata);\n  if (newdata.length > 0) setSelectedRow(newdata[0]);\n};\n\nconst addBatchColumns = (columns, data) => {\n  const colnames = columns.map((col) => col.name);\n\n  for (let row of data) {\n    for (let cname of Object.keys(row)) {\n      if (!colnames.includes(cname)) {\n        colnames.push(cname);\n        columns.push({ name: cname, width: 2 });\n      }\n    }\n  }\n};\n\nconst QueryTable = React.memo(({ table, searchOn, setSearch }) => {\n  // table: what table in db\n  // searchOn: what columns to search in\n  // setSearch: parent hook\n\n  const [text, setText] = useState(\"\");\n  const [searchStatus, setSearchStatus] = useState(\"none\");\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      searchSelection(table, searchOn, text, setSearch, setSearchStatus);\n    }, 500);\n    return () => clearTimeout(timer);\n  }, [table, text, setSearchStatus, searchOn, setSearch]);\n\n  return (\n    <>\n      <Input\n        loading={searchStatus === \"searching\"}\n        value={text}\n        icon=\"search\"\n        placeholder={searchOn}\n        onChange={(e, d) => setText(d.value)}\n      ></Input>\n    </>\n  );\n});\n\nconst searchSelection = async (table, searchOn, text, setSearch, setSearchStatus) => {\n  if (text === \"\") {\n    setSearch(null);\n    setSearchStatus(\"none\");\n    return;\n  }\n  setSearchStatus(\"searching\");\n\n  const search = await db.textSearch(table, [searchOn], text);\n  setSearch(search);\n  setSearchStatus(\"finished\");\n};\n\nexport default DexieTable;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Header,\n  Button,\n  Modal,\n  Form,\n  Loader,\n  Dimmer,\n  Icon,\n  Segment,\n  Container,\n  Grid,\n} from \"semantic-ui-react\";\n\nimport db from \"apis/dexie\";\n\nimport DataTable from \"./DexieTable\";\n\n/**\n * A wrapper around DexieTable with some basic styling and buttons for creating/deleting rows\n * onCreate and onDelete are optional functions performed when creating/deleting an item,\n * receiving the id as argument. onDelete is async, but deletion will only happen if successful\n */\nconst DexieTableManager = ({\n  table,\n  itemLabel,\n  columns,\n  setSelected,\n  reverse = true,\n  onCreate,\n  onDelete,\n}) => {\n  const [item, setItem] = useState(null);\n\n  useEffect(() => {\n    if (setSelected) setSelected(item);\n  }, [item, setSelected]);\n\n  return (\n    <Grid centered stackable columns={1}>\n      <Grid.Column width={6}>\n        <Header textAlign=\"center\" style={{ background: \"#1B1C1D\", color: \"white\" }}>\n          Select {itemLabel}\n        </Header>\n        <Segment style={{ border: \"0\" }}>\n          <Button.Group widths=\"2\" size=\"mini\">\n            <CreateItem setItem={setItem} table={table} itemLabel={itemLabel} onCreate={onCreate} />\n            <DeleteItem\n              item={item}\n              setItem={setItem}\n              table={table}\n              itemLabel={itemLabel}\n              onDelete={onDelete}\n            />\n          </Button.Group>\n\n          <Container style={{ marginTop: \"30px\", overflow: \"auto\", width: \"800px\" }}>\n            <DataTable\n              table={table}\n              columns={columns}\n              searchColumn=\"name\"\n              idColumn=\"id\"\n              setSelected={setItem}\n              reverse={reverse}\n            />\n          </Container>\n        </Segment>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nconst CreateItem = ({ setItem, table, itemLabel, onCreate }) => {\n  const [status, setStatus] = useState(\"inactive\");\n  const [itemName, setItemName] = useState(\"\");\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n\n    setItemName(itemName.trim());\n    setStatus(\"pending\");\n\n    try {\n      db.idb\n        .table(table)\n        .add({\n          name: itemName,\n        })\n        .then((id) => {\n          if (onCreate) onCreate(id);\n          setItem({ id, name: itemName });\n        });\n      setStatus(\"inactive\");\n    } catch (e) {\n      console.log(e);\n      setStatus(\"error\");\n    }\n  };\n\n  return (\n    <Modal\n      as={Form}\n      trigger={\n        <Button>\n          <Icon name=\"plus\" />\n          Create {itemLabel}\n        </Button>\n      }\n      onSubmit={(e) => onSubmit(e)}\n      open={status !== \"inactive\"}\n      onClose={() => setStatus(\"inactive\")}\n      onOpen={() => {\n        setItemName(\"\");\n        setStatus(\"awaiting input\");\n      }}\n      size=\"tiny\"\n    >\n      <Header icon=\"pencil\" content=\"Create new Item\" as=\"h2\" />\n      <Modal.Content>\n        <Form.Group>\n          <Form.Input\n            width={12}\n            label=\"Name\"\n            required\n            type=\"text\"\n            value={itemName}\n            onChange={(e, d) => {\n              setStatus(\"awaiting input\");\n              setItemName(d.value);\n            }}\n            placeholder=\"Enter name\"\n          />\n        </Form.Group>\n      </Modal.Content>\n      <Modal.Actions>\n        {status === \"error\" ? (\n          <div>Could not create item for a reason not yet covered in the error handling...</div>\n        ) : null}\n        {status === \"pending\" ? (\n          <Dimmer active inverted>\n            <Loader content=\"Creating item\" />\n          </Dimmer>\n        ) : (\n          <Button type=\"submit\" color=\"green\" icon=\"save\" content=\"Create\" />\n        )}\n      </Modal.Actions>\n    </Modal>\n  );\n};\n\nconst DeleteItem = ({ item, setItem, table, itemLabel, onDelete }) => {\n  const [status, setStatus] = useState(\"inactive\");\n\n  const onSubmit = async (event) => {\n    setStatus(\"pending\");\n    try {\n      if (onDelete) await onDelete(item.id);\n      await db.idb.table(table).where(\"id\").equals(item.id).delete();\n      setItem(null);\n\n      setStatus(\"inactive\");\n    } catch (e) {\n      setStatus(\"error\");\n    }\n  };\n\n  if (!item?.id) return null;\n\n  return (\n    <Modal\n      closeIcon\n      open={status !== \"inactive\"}\n      trigger={\n        <Button compact>\n          <Icon name=\"minus\" /> Delete {itemLabel}\n        </Button>\n      }\n      onClose={() => {\n        setStatus(\"inactive\");\n      }}\n      onOpen={() => {\n        setStatus(\"awaiting input\");\n      }}\n    >\n      <Header icon=\"trash\" content={`Delete item ${item.name}`} />\n      <Modal.Content>\n        <p>Do you really want to delete this item?</p>\n      </Modal.Content>\n      <Modal.Actions>\n        {status === \"error\" ? (\n          <div>Could not delete item for a reason not yet covered in the error handling...</div>\n        ) : null}\n        {status === \"pending\" ? (\n          <Dimmer active inverted>\n            <Loader content=\"Deleting item\" />\n          </Dimmer>\n        ) : (\n          <>\n            <Button\n              color=\"red\"\n              onClick={() => {\n                setStatus(\"inactive\");\n              }}\n            >\n              <Icon name=\"remove\" /> No\n            </Button>\n            <Button color=\"green\" onClick={onSubmit}>\n              <Icon name=\"checkmark\" /> Yes\n            </Button>\n          </>\n        )}\n      </Modal.Actions>\n    </Modal>\n  );\n};\n\nexport default React.memo(DexieTableManager);\n","import React from \"react\";\nimport { Grid } from \"semantic-ui-react\";\n\nimport DexieTableManager from \"./subcomponents/DexieTableManager\";\nimport db from \"apis/dexie\";\n\nconst tableColumns = [\n  { name: \"id\", width: 4 },\n  {\n    name: \"name\",\n    width: 12,\n  },\n];\n\nconst CodingjobSelector = ({ setSelectedCodingjob }) => {\n  const onDelete = async (id) => {\n    const docs = await db.idb.documents.where(\"job_id\").equals(id);\n    const ndocs = await docs.count();\n    if (ndocs > 0) await docs.delete();\n  };\n\n  return (\n    <Grid centered stackable columns={1}>\n      <Grid.Column width={8}>\n        <DexieTableManager\n          table=\"codingjobs\"\n          itemLabel=\"codingjob\"\n          columns={tableColumns}\n          setSelected={setSelectedCodingjob}\n          onDelete={onDelete}\n        />\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default React.memo(CodingjobSelector);\n","import React, { useRef, useEffect, useState } from \"react\";\nimport { Container, Header, Table, Grid, Form, Button, Icon, Dropdown } from \"semantic-ui-react\";\n\n//import CSVReader from \"react-csv-reader\";\n//import Papa from \"papaparse\";\nimport { CSVReader } from \"react-papaparse\";\nimport db from \"apis/dexie\";\n\nexport const UploadTextsCsv = ({ codingjob }) => {\n  const columns = {\n    document_id: { required: true, multiple: false, defaults: [\"doc_id\", \"document_id\"] },\n    text_fields: {\n      required: true,\n      multiple: true,\n      defaults: [\"title\", \"headline\", \"body\", \"message\", \"text\"],\n    },\n    meta_fields: {\n      required: false,\n      multiple: true,\n      defaults: [\"medium\", \"publisher\", \"date\"],\n    },\n  };\n  return <UploadCsv codingjob={codingjob} type=\"texts\" columns={columns} keepOriginal={false} />;\n};\n\nconst renderTextForms = (columns, options, fields, setFields) => {\n  return (\n    <>\n      <Form.Group widths=\"equal\">\n        {renderForm(\"document id\", \"document_id\", columns, options, fields, setFields)}\n        {renderForm(\"text columns\", \"text_fields\", columns, options, fields, setFields)}\n        {renderForm(\"meta columns\", \"meta_fields\", columns, options, fields, setFields)}\n      </Form.Group>\n    </>\n  );\n};\n\nexport const UploadTokensCsv = ({ codingjob }) => {\n  const columns = {\n    document_id: { required: true, multiple: false, defaults: [\"doc_id\", \"document_id\"] },\n    token: { required: true, multiple: false, defaults: [\"token\", \"text\"] },\n    sentence: { required: false, multiple: false, defaults: [\"sentence\", \"sentence_id\"] },\n    paragraph: { required: false, multiple: false, defaults: [\"paragraph\", \"paragraph_id\"] },\n    offset: { required: false, int: true, multiple: false, defaults: [\"offset\", \"start\"] },\n    end: { required: false, int: true, multiple: false, defaults: [\"end\"] },\n    post: { required: false, multiple: false, defaults: [\"post\", \"space\"] },\n    section: { required: false, multiple: false, defaults: [\"section\"] },\n    annotations: { required: false, multiple: true, defaults: [] },\n  };\n  return <UploadCsv codingjob={codingjob} type=\"tokens\" columns={columns} keepOriginal={false} />;\n};\n\nconst renderTokenForms = (columns, options, fields, setFields) => {\n  return (\n    <>\n      <Form.Group widths=\"equal\">\n        {renderForm(\"document id\", \"document_id\", columns, options, fields, setFields)}\n        {renderForm(\"token\", \"token\", columns, options, fields, setFields)}\n      </Form.Group>\n      <Form.Group widths=\"equal\">\n        {renderForm(\"section\", \"section\", columns, options, fields, setFields)}\n        {renderForm(\"paragraph\", \"paragraph\", columns, options, fields, setFields)}\n        {renderForm(\"sentence\", \"sentence\", columns, options, fields, setFields)}\n      </Form.Group>\n      <Form.Group widths=\"equal\">\n        {renderForm(\"start / offset\", \"offset\", columns, options, fields, setFields)}\n        {renderForm(\"end\", \"end\", columns, options, fields, setFields)}\n        {renderForm(\"space / post\", \"post\", columns, options, fields, setFields)}\n      </Form.Group>\n      <Form.Group widths=\"equal\">\n        {renderForm(\"annotations\", \"annotations\", columns, options, fields, setFields, true)}\n      </Form.Group>\n    </>\n  );\n};\n\nconst UploadCsv = ({ codingjob, type = \"text\", columns, keepOriginal }) => {\n  const [data, setData] = useState([]);\n  const fileRef = useRef();\n\n  return (\n    <Container>\n      <Grid>\n        <Grid.Column width={5}>\n          <CSVReader\n            ref={fileRef}\n            nodrag\n            onFileLoad={(data) => setData(data)}\n            addRemoveButton\n            onRemoveFile={() => setData([])}\n          >\n            <span>Click to upload</span>\n          </CSVReader>\n        </Grid.Column>\n        <Grid.Column floated=\"right\" width={11}>\n          <SubmitForm\n            type={type}\n            data={data}\n            codingjob={codingjob}\n            fileRef={fileRef}\n            columns={columns}\n            keepOriginal={keepOriginal}\n          />\n        </Grid.Column>\n      </Grid>\n      <PreviewTable data={data} />\n    </Container>\n  );\n};\n\nconst SubmitForm = ({ type, data, codingjob, fileRef, columns, keepOriginal }) => {\n  const [options, setOptions] = useState([]);\n  const [fields, setFields] = useState({});\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (data.length <= 1) {\n      setFields({});\n      setOptions([]);\n      return;\n    }\n\n    setOptions(\n      data[0].data.map((colname) => {\n        return { key: colname, value: colname, text: colname };\n      })\n    );\n\n    let newfields = {};\n    for (let col of Object.keys(columns)) {\n      newfields[col] = columns[col].multiple ? [] : null;\n      for (let def of columns[col].defaults) {\n        if (data[0].data.includes(def)) {\n          if (columns[col].multiple) {\n            newfields[col].push(def);\n          } else newfields[col] = def;\n        }\n      }\n    }\n    setFields(newfields);\n  }, [data, columns]);\n\n  const csvToJson = (data, fields) => {\n    const keys = data[0].data;\n\n    // first get indices from header row\n    // more efficient than lookup for each row\n    const fieldIndices = { ...fields };\n    for (let field of Object.keys(fields)) {\n      if (columns[field].multiple) {\n        fieldIndices[field] = {};\n        for (let subfield of fields[field]) {\n          fieldIndices[field][subfield] = keys.findIndex((k) => k === subfield);\n        }\n      } else {\n        fieldIndices[field] = keys.findIndex((k) => k === fields[field]);\n      }\n    }\n\n    return data.slice(1).map((row) => {\n      const datarow = {};\n\n      if (keepOriginal) {\n        const original = keys.map((key, i) => {\n          return { name: key, value: row.data[i] };\n        });\n        datarow.original = original;\n      }\n\n      for (let field of Object.keys(fields)) {\n        if (columns[field].multiple) {\n          datarow[field] = [];\n          for (let subfield of fields[field]) {\n            const fieldindex = fieldIndices[field][subfield];\n            if (fieldindex < 0) continue;\n            let v = row.data[fieldindex];\n            if (columns[field].int) v = parseInt(v);\n            datarow[field].push({ name: keys[fieldindex], value: v });\n          }\n        } else {\n          const fieldindex = fieldIndices[field];\n          if (fieldindex < 0) continue;\n          let v = row.data[fieldindex];\n          datarow[field] = columns[field].int ? parseInt(v) : v;\n        }\n      }\n      return datarow;\n    });\n  };\n\n  const uploadData = async () => {\n    try {\n      setLoading(true);\n      let preparedData = csvToJson(data, fields);\n      if (type === \"tokens\") preparedData = tokensToDocumentList(preparedData);\n      await db.createDocuments(codingjob, preparedData);\n      await db.setCodingjobProp(codingjob, \"codebook.unitSettings.n\", null);\n      fileRef.current.removeFile();\n      //dispatch(selectCodingjob(codingjob));\n      setLoading(false);\n    } catch (e) {\n      console.log(e);\n      setLoading(false);\n    }\n  };\n\n  const allDone = () => {\n    for (let col of Object.keys(columns)) {\n      if (columns[col].multiple) {\n        if (columns[col].required && fields[col].length === 0) return false;\n      } else {\n        if (columns[col].required && !fields[col]) return false;\n      }\n    }\n    return true;\n  };\n\n  //if (data.length <= 1) return null;\n\n  return (\n    <>\n      <Form loading={loading}>\n        {type === \"texts\" ? renderTextForms(columns, options, fields, setFields) : null}\n        {type === \"tokens\" ? renderTokenForms(columns, options, fields, setFields) : null}\n        <Form.Group>\n          <Form.Field control={Button} onClick={uploadData} disabled={!allDone()}>\n            <Icon name=\"upload\" />\n            Upload\n          </Form.Field>\n        </Form.Group>\n      </Form>\n    </>\n  );\n};\n\nconst tokensToDocumentList = (data) => {\n  const documents = [];\n  let tokens = [data[0]];\n  for (let i = 1; i < data.length; i++) {\n    if (data[i].document_id !== data[i - 1].document_id) {\n      documents.push({ document_id: data[i - 1].document_id, tokens });\n      tokens = [];\n    }\n    tokens.push(data[i]);\n  }\n  return documents;\n};\n\nconst renderForm = (label, column, columns, options, fields, setFields) => {\n  return (\n    <Form.Field\n      control={Dropdown}\n      clearable\n      selection\n      multiple={columns[column].multiple ? true : false}\n      label={{ children: label, style: { fontSize: \"10px\" } }}\n      required={columns[column].required}\n      options={options}\n      value={fields[column]}\n      onChange={(e, d) => {\n        const newfields = { ...fields };\n        newfields[column] = d.value;\n        setFields(newfields);\n      }}\n      style={{ minWidth: \"3em\", fontSize: \"10px\" }}\n    />\n  );\n};\n\nconst PreviewTable = ({ data }) => {\n  const n = 5;\n\n  const createHeader = (data) => {\n    return data[0].data.map((colname) => {\n      return (\n        <Table.HeaderCell style={{ width: \"7em\" }}>\n          <span title={colname}>{colname}</span>\n        </Table.HeaderCell>\n      );\n    });\n  };\n\n  const createRows = (data, n) => {\n    const previewdata = data.slice(0, n + 1);\n    return previewdata.slice(1).map((row) => {\n      return <Table.Row>{createRowCells(row.data)}</Table.Row>;\n    });\n  };\n\n  const createRowCells = (row) => {\n    return row.map((cell) => {\n      return (\n        <Table.Cell>\n          <span title={cell}>{cell}</span>\n        </Table.Cell>\n      );\n    });\n  };\n\n  if (data.length <= 1) return null;\n\n  return (\n    <div\n      style={{\n        marginTop: \"3em\",\n        overflow: \"auto\",\n        width: \"100%\",\n        border: \"solid 1px\",\n      }}\n    >\n      <Table unstackable singleLine fixed size=\"small\" compact>\n        <Table.Header>\n          <Table.Row>{createHeader(data)}</Table.Row>\n        </Table.Header>\n        <Table.Body>{createRows(data, n)}</Table.Body>\n      </Table>\n      {data.length > n ? <Header align=\"center\">{data.length - 1 - n} more rows</Header> : null}\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Menu, Segment } from \"semantic-ui-react\";\n\nimport { UploadTextsCsv, UploadTokensCsv } from \"./UploadForms\";\n\nconst UploadDocuments = ({ codingjob }) => {\n  const [activeItem, setActiveItem] = useState(\"Documents CSV\");\n  const renderSwitch = (activeItem) => {\n    switch (activeItem) {\n      case \"Documents CSV\":\n        return <UploadTextsCsv codingjob={codingjob} />;\n      case \"Tokens CSV\":\n        return <UploadTokensCsv codingjob={codingjob} />;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <>\n      <Menu attached=\"top\" tabular>\n        <Menu.Item\n          name=\"Documents CSV\"\n          active={activeItem === \"Documents CSV\"}\n          onClick={(e, d) => setActiveItem(d.name)}\n        />\n        <Menu.Item\n          name=\"Tokens CSV\"\n          active={activeItem === \"Tokens CSV\"}\n          onClick={(e, d) => setActiveItem(d.name)}\n        />\n      </Menu>\n      <Segment attached=\"bottom\">{renderSwitch(activeItem)}</Segment>\n    </>\n  );\n};\n\nexport default UploadDocuments;\n","import React from \"react\";\nimport { Container, Pagination, Table, Icon } from \"semantic-ui-react\";\n\n/**\n * A nice table with pagination\n * @param {array} data an Array with data for a single page\n * @param {array} columns an Array with objects indicating which columns to show and how\n * @param {int} pages the number of pages\n * @param {function} pageChange the function to perform on pagechange. Gets pageindex as an argument, and should update data\n * @returns\n */\nconst PaginationTable = ({ data, columns, pages, pageChange }) => {\n  const createHeaderRow = (data, columns) => {\n    return columns.map((col, i) => {\n      return (\n        <Table.HeaderCell key={i} width={col.width || null}>\n          <span title={col.name}>{col.name}</span>\n        </Table.HeaderCell>\n      );\n    });\n  };\n\n  const createBodyRows = (data) => {\n    return data.map((rowObj, i) => {\n      return <Table.Row key={i}>{createRowCells(rowObj)}</Table.Row>;\n    });\n  };\n\n  const createRowCells = (rowObj) => {\n    return columns.map((col, i) => {\n      let content = rowObj[col.name];\n      return (\n        <Table.Cell key={i}>\n          <span title={content}>{content}</span>\n        </Table.Cell>\n      );\n    });\n  };\n\n  if (data.length < 1) return null;\n\n  return (\n    <Container>\n      <Table\n        unstackable\n        selectable\n        fixed\n        compact\n        singleLine\n        size=\"small\"\n        style={{ fontSize: \"10px\" }}\n      >\n        <Table.Header>\n          <Table.Row>{createHeaderRow(data, columns)}</Table.Row>\n        </Table.Header>\n        <Table.Body>{createBodyRows(data)}</Table.Body>\n        <Table.Footer>\n          <Table.Row>\n            <Table.HeaderCell colSpan={columns.length}>\n              {pages > 1 ? (\n                <Pagination\n                  size=\"mini\"\n                  floated=\"right\"\n                  boundaryRange={1}\n                  siblingRange={1}\n                  ellipsisItem={{\n                    content: <Icon name=\"ellipsis horizontal\" />,\n                    icon: true,\n                  }}\n                  firstItem={{\n                    content: <Icon name=\"angle double left\" />,\n                    icon: true,\n                  }}\n                  lastItem={{\n                    content: <Icon name=\"angle double right\" />,\n                    icon: true,\n                  }}\n                  prevItem={{ content: <Icon name=\"angle left\" />, icon: true }}\n                  nextItem={{\n                    content: <Icon name=\"angle right\" />,\n                    icon: true,\n                  }}\n                  pointing\n                  secondary\n                  defaultActivePage={1}\n                  totalPages={pages}\n                  onPageChange={(e, d) => pageChange(d.activePage)}\n                ></Pagination>\n              ) : null}\n            </Table.HeaderCell>\n          </Table.Row>\n        </Table.Footer>\n      </Table>\n    </Container>\n  );\n};\n\nexport default PaginationTable;\n","import React, { useEffect, useState } from \"react\";\nimport PaginationTable from \"./PaginationTable\";\nimport db from \"apis/dexie\";\n\nconst PAGESIZE = 10;\n\nconst DocumentTable = ({ codingjob }) => {\n  const [data, setData] = useState([]);\n  const [pages, setPages] = useState(1);\n  const [columns, setColumns] = useState([]);\n\n  const pageChange = async (activePage) => {\n    const offset = (activePage - 1) * PAGESIZE;\n    const newdata = await db.getJobDocuments(codingjob, offset, PAGESIZE);\n\n    const columns = getColumns(newdata);\n    setData(addTextColumns(newdata, columns));\n    setColumns(columns);\n  };\n\n  useEffect(() => {\n    if (!codingjob) {\n      setData([]);\n      setColumns([]);\n      return null;\n    }\n    fetchFromDb(codingjob, PAGESIZE, setPages, setData, setColumns);\n  }, [codingjob]);\n\n  return <PaginationTable data={data} pages={pages} columns={columns} pageChange={pageChange} />;\n};\n\nconst tokensToText = (tokens, section) => {\n  return tokens.reduce((text, token) => {\n    if (token.section === section) text = text + token.pre + token.token + token.post;\n    return text;\n  }, \"\");\n};\n\nconst addTextColumns = (data, columns) => {\n  return data.map((rowObj) => {\n    return columns.reduce((newRowObj, col) => {\n      let content = rowObj[col.name];\n      if (col.name === \"document_id\") {\n        content = rowObj.document_id;\n      } else {\n        if (rowObj.text_fields) {\n          content = rowObj.text_fields.find((tf) => tf.name === col.name);\n          if (content) content = content.value;\n        }\n        if (!content && !rowObj.text_fields && rowObj.tokens) {\n          content = tokensToText(rowObj.tokens, col.name);\n        }\n      }\n      newRowObj[col.name] = content;\n      return newRowObj;\n    }, {});\n  });\n};\n\nconst fetchFromDb = async (codingjob, pageSize, setPages, setData, setColumns) => {\n  const n = await db.getJobDocumentCount(codingjob);\n  setPages(Math.ceil(n / pageSize));\n  let newdata = [];\n  if (n > 0) newdata = await db.getJobDocuments(codingjob, 0, pageSize);\n\n  const columns = getColumns(newdata);\n  console.log(addTextColumns(newdata, columns));\n\n  setData(addTextColumns(newdata, columns));\n  setColumns(columns);\n};\n\nconst getColumns = (newdata) => {\n  let newcolumns = [];\n  if (newdata.length > 0) {\n    newcolumns = newdata.reduce((s, row) => {\n      if (row.text_fields) {\n        for (let tf of row.text_fields) s.add(tf.name);\n      } else {\n        for (let i = 0; i < row.tokens.length; i++) s.add(row.tokens[i].section);\n      }\n      return s;\n    }, new Set());\n  }\n  return [\"document_id\", ...newcolumns].map((name) => ({ name }));\n};\n\nexport default DocumentTable;\n","import React from \"react\";\n\nimport { Grid, Header } from \"semantic-ui-react\";\nimport UploadDocuments from \"./subcomponents/UploadDocuments\";\nimport DocumentTable from \"./subcomponents/DocumentTable\";\n\nconst ManageDocuments = ({ codingjob }) => {\n  return (\n    <div style={{ paddingLeft: \"1em\" }}>\n      <Grid stackable columns={2}>\n        <Grid.Column width={8}>\n          <Header textAlign=\"center\" style={{ background: \"#1B1C1D\", color: \"white\" }}>\n            Upload Documents\n          </Header>\n          <UploadDocuments codingjob={codingjob} />\n        </Grid.Column>\n        <Grid.Column width={8}>\n          <Header textAlign=\"center\" style={{ background: \"#1B1C1D\", color: \"white\" }}>\n            Document list\n          </Header>\n          <DocumentTable codingjob={codingjob} />\n        </Grid.Column>\n      </Grid>\n    </div>\n  );\n};\n\nexport default React.memo(ManageDocuments);\n","import React, { useEffect } from \"react\";\nimport { Icon, Form, Radio, Input, Dropdown, Popup, Button, Grid } from \"semantic-ui-react\";\nimport db from \"apis/dexie\";\n\nconst defaultUnitSettings = {\n  textUnit: \"document\", // document, paragraph, sentence or span (span only if codingUnit is annotations)\n  unitSelection: \"allTextUnits\", // or: annotations\n  annotation: null,\n  contextUnit: \"document\", // or: paragraph, sentence, no context\n  contextWindow: [1, 1],\n\n  n: null,\n  totalUnits: null,\n  seed: 42,\n  ordered: false,\n  balanceDocuments: false,\n  balanceAnnotations: true,\n  validCodes: {},\n  highlightAnnotation: false,\n  annotationMix: 0,\n  onlyUnused: true,\n  layout: {\n    text: {},\n    meta: {},\n  },\n};\n\nconst UnitSettings = ({ codingjob }) => {\n  const unitSettings = codingjob?.unitSettings;\n  const setUnitSettings = (us) => {\n    db.setCodingjobProp(codingjob, \"unitSettings\", us);\n  };\n\n  if (!codingjob?.unitSettings) setUnitSettings(defaultUnitSettings);\n\n  if (!unitSettings) return null;\n  return (\n    <div style={{ verticalAlign: \"top\", float: \"top\", paddingLeft: \"1em\" }}>\n      <Grid style={{ paddingTop: \"1em\" }}>\n        <Grid.Row>\n          <Grid.Column width={8}>\n            <CodingUnitForm\n              codingjob={codingjob}\n              unitSettings={unitSettings}\n              setUnitSettings={setUnitSettings}\n            />\n          </Grid.Column>\n          <Grid.Column width={8}>\n            <ContextUnitForm unitSettings={unitSettings} setUnitSettings={setUnitSettings} />\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </div>\n  );\n};\n\nconst CodingUnitForm = ({ codingjob, unitSettings, setUnitSettings }) => {\n  useEffect(() => {\n    if (unitSettings?.textUnit === null)\n      setUnitSettings({\n        ...unitSettings,\n        textUnit: \"document\",\n        value: \"allTextUnits\",\n        n: null,\n        totalUnits: null,\n      });\n  }, [unitSettings, setUnitSettings]);\n\n  const radioButton = (value, label, annotated, jump) => {\n    const unitSelection = annotated ? \"annotations\" : \"allTextUnits\";\n    let checked = unitSettings.textUnit === value && unitSettings.unitSelection === unitSelection;\n\n    return (\n      <Form.Field>\n        <Radio\n          value={value}\n          label={label}\n          checked={checked}\n          onChange={(e, d) =>\n            setUnitSettings({\n              ...unitSettings,\n              textUnit: value,\n              unitSelection: unitSelection,\n              n: null,\n              totalUnits: null,\n            })\n          }\n          style={{ marginLeft: jump ? \"1em\" : \"0em\" }}\n        />\n      </Form.Field>\n    );\n  };\n\n  const annotationDropdown = () => {\n    if (!codingjob.importedCodes) return null;\n    if (Object.keys(codingjob.importedCodes).length === 0) return null;\n    const options = Object.keys(codingjob.importedCodes).map((code) => ({\n      key: code,\n      value: code,\n      text: code,\n    }));\n    if (unitSettings.annotation === null)\n      setUnitSettings({ ...unitSettings, annotation: options[0].value });\n    return (\n      <span style={{ fontWeight: \"bold\" }}>\n        Annotation:{\"   \"}\n        <Dropdown\n          options={options}\n          value={unitSettings.annotation}\n          onChange={(e, d) => setUnitSettings({ ...unitSettings, annotation: d.value })}\n        />\n      </span>\n    );\n  };\n\n  const annotationButtons = () => {\n    if (!unitSettings.annotation) return null;\n    return (\n      <>\n        {radioButton(\"span\", \"Span annotation\", true, true)}\n        {radioButton(\"document\", \"Span + document\", true, true)}\n        {radioButton(\"paragraph\", \"Span + paragraph\", true, true)}\n        {radioButton(\"sentence\", \"Span + sentence\", true, true)}\n      </>\n    );\n  };\n\n  return (\n    <Form>\n      <Form.Group>\n        <Icon name=\"setting\" />\n        <label>Coding unit</label>\n      </Form.Group>\n      <Form.Group grouped widths=\"equal\">\n        {radioButton(\"document\", \"Document\", false)}\n        {radioButton(\"paragraph\", \"Paragraph\", false)}\n        {radioButton(\"sentence\", \"Sentence\", false)}\n        {annotationDropdown()}\n        {annotationButtons()}\n      </Form.Group>\n    </Form>\n  );\n};\n\nconst ContextUnitForm = ({ unitSettings, setUnitSettings }) => {\n  const setContextWindow = (value) => {\n    setUnitSettings({\n      ...unitSettings,\n      contextWindow: value,\n    });\n  };\n\n  const radioButton = (value, label) => {\n    return (\n      <Form.Field>\n        <Radio\n          value={value}\n          label={label}\n          disabled={unitSettings.textUnit === \"document\"}\n          checked={unitSettings.contextUnit === value}\n          onChange={(e, d) =>\n            setUnitSettings({\n              ...unitSettings,\n              contextUnit: value,\n            })\n          }\n        />\n        {\"  \"}\n        {(value === \"paragraph\" || value === \"sentence\") && value === unitSettings.contextUnit ? (\n          <ContextWindow\n            contextUnit={unitSettings.contextUnit}\n            contextWindow={unitSettings.contextWindow}\n            setContextWindow={setContextWindow}\n          />\n        ) : null}\n      </Form.Field>\n    );\n  };\n\n  return (\n    <Form>\n      <Form.Group>\n        <Icon name=\"setting\" />\n        <label>Context unit</label>\n      </Form.Group>\n      <Form.Group grouped widths=\"equal\">\n        {radioButton(\"document\", \"Document\")}\n        {radioButton(\"paragraph\", \"Paragraph\")}\n        {radioButton(\"sentence\", \"Sentence\")}\n        {radioButton(\"none\", \"No context\")}\n      </Form.Group>\n    </Form>\n  );\n};\n\n// at some point maybe implement document filters\n// like min paragraph and max tokens and such\n//\n// const DocumentFilters = () => {\n//   const onChangeUseMinUnitIndex = (e, d) => {\n//     setWithoutDelay(\"useMinUnitIndex\", d.checked);\n//   };\n//   const onChangeUseMaxUnitIndex = (e, d) => {\n//     setWithoutDelay(\"useMaxUnitIndex\", d.checked);\n//   };\n//   const onChangeMinUnitIndex = (e, d) => {\n//     let value = Number(d.value);\n//     setDelayed((current) => ({ ...current, minUnitIndex: value }));\n//   };\n//   const onChangeMaxUnitIndex = (e, d) => {\n//     let value = Number(d.value);\n//     setDelayed((current) => ({ ...current, maxUnitIndex: value }));\n//   };\n\n//   return (\n//     <Form>\n//       <Form.Group>\n//         <Form.Field width={8}>\n//           <label>Maximum {unitSettings.textUnit}</label>\n\n//           <Input\n//             width={5}\n//             min={0}\n//             label={\n//               <Checkbox\n//                 toggle\n//                 style={{ width: \"6em\" }}\n//                 disabled={unitSettings.textUnit === \"document\"}\n//                 checked={unitSettings.useMaxUnitIndex}\n//                 onChange={onChangeUseMaxUnitIndex}\n//               />\n//             }\n//             size=\"mini\"\n//             type=\"number\"\n//             value={unitSettings.maxUnitIndex}\n//             onChange={onChangeMaxUnitIndex}\n//           ></Input>\n//         </Form.Field>\n//       </Form.Group>\n//     </Form>\n//   );\n// };\n\nconst ContextWindow = ({ contextUnit, contextWindow, setContextWindow }) => {\n  if (contextUnit === \"document\") return null;\n\n  return (\n    <Popup\n      hoverable\n      trigger={\n        <Button\n          style={{\n            padding: \"0em 0.2em 0em 0.2em\",\n            background: \"white\",\n            border: \"1px solid\",\n          }}\n        >{`${contextWindow[0]} - ${contextWindow[1]}`}</Button>\n      }\n    >\n      <Dropdown.Menu>\n        <Dropdown.Header content={`Set ${contextUnit} window`} />\n        <Grid style={{ paddingTop: \"1em\", width: \"20em\" }}>\n          <Grid.Column width={8}>\n            <Input\n              size=\"mini\"\n              value={contextWindow[0]}\n              min={0}\n              type=\"number\"\n              style={{ width: \"6em\" }}\n              label={\"before\"}\n              onChange={(e, d) => setContextWindow([Number(d.value), contextWindow[1]])}\n            />\n          </Grid.Column>\n          <Grid.Column width={5}>\n            <Input\n              size=\"mini\"\n              value={contextWindow[1]}\n              min={0}\n              type=\"number\"\n              labelPosition=\"right\"\n              style={{ width: \"6em\" }}\n              label={\"after\"}\n              onChange={(e, d) => setContextWindow([contextWindow[0], Number(d.value)])}\n            />\n          </Grid.Column>\n        </Grid>\n      </Dropdown.Menu>\n    </Popup>\n  );\n};\n\nexport default React.memo(UnitSettings);\n","import seedrandom from \"seedrandom\";\n\nexport const drawRandom = (array, n, replace, seed, group) => {\n  const random = seedrandom(seed);\n\n  if (n == null || n === null) n = array.length;\n  if (!replace && n > array.length) n = array.length;\n  let index = [...Array(array.length).keys()];\n\n  let indices, ns;\n  if (group === null) {\n    indices = [index];\n    ns = [n];\n  } else {\n    indices = splitIndex(index, group);\n    indices = getRandomSubarray(indices, indices.length, random);\n    ns = distributeN(indices, n, random);\n  }\n\n  let out = [];\n  for (let j = 0; j < indices.length; j++) {\n    if (replace) {\n      for (let i = 0; i < n; i++) {\n        out.push(indices[j][Math.floor(random() * indices[j].length)]);\n      }\n    } else {\n      indices[j] = getRandomSubarray(\n        indices[j],\n        ns[j] < indices[j].length ? ns[j] : indices[j].length,\n        random\n      );\n      for (let i of indices[j]) out.push(i);\n    }\n  }\n\n  out = getRandomSubarray(out, out.length, random);\n  return out.map((i) => array[i]);\n};\n\n//from: https://stackoverflow.com/questions/11935175/sampling-a-random-subset-from-an-array\nconst getRandomSubarray = (arr, size, random) => {\n  var shuffled = arr.slice(0),\n    i = arr.length,\n    min = i - size,\n    temp,\n    index;\n  while (i-- > min) {\n    index = Math.floor((i + 1) * random());\n    temp = shuffled[index];\n    shuffled[index] = shuffled[i];\n    shuffled[i] = temp;\n  }\n\n  return shuffled.slice(min);\n};\n\nconst splitIndex = (index, group) => {\n  // index and group must be of same length\n  const indices = [];\n  const groupOb = {};\n\n  for (let i = 0; i < index.length; i++) {\n    if (groupOb[group[i]] == null) {\n      groupOb[group[i]] = indices.length;\n      indices.push([]);\n    }\n    indices[groupOb[group[i]]].push(index[i]);\n  }\n  return indices;\n};\n\nconst distributeN = (indices, n, random) => {\n  const ns = new Array(indices.length).fill(0);\n  let full = new Array(indices.length).fill(0);\n  let remain = n;\n  let remainIndices = indices.length;\n  let i = -1;\n\n  while (remain > 0) {\n    i++;\n    let select = i % indices.length;\n    if (full[select] !== 1) {\n      ns[select]++;\n      remain--;\n      if (ns[select] === indices[select].length) {\n        full[select] = 1;\n        remainIndices--;\n      }\n    }\n    if (remainIndices === 0) break;\n  }\n\n  return ns;\n};\n","import db from \"apis/dexie\";\nimport { useEffect, useState } from \"react\";\nimport { drawRandom } from \"library/sample\";\n\n/**\n * Hook for getting the Units (using the current codingjob settings)\n * @param {} codingjob\n * @returns\n */\nconst useUnits = (codingjob) => {\n  const [unitData, setUnitData] = useState(null);\n  const [sample, setSample] = useState(null);\n  const [loading, setLoading] = useState(\"ready\");\n\n  useEffect(() => {\n    // if settings for preparing units change\n    setLoading(\"loading\");\n    if (!codingjob?.unitSettings?.textUnit) return;\n    getUnitData(codingjob.id, setUnitData);\n    //setLoading(false);\n  }, [\n    codingjob?.unitSettings?.textUnit,\n    codingjob?.unitSettings?.unitSelection,\n    codingjob?.unitSettings?.annotation,\n    codingjob.id,\n    setUnitData,\n  ]);\n\n  useEffect(() => {\n    // if settings for drawing sample change\n    if (!unitData || !codingjob?.importedCodes) return;\n    setLoading((state) => (state === \"loading\" ? \"loading\" : \"awaiting_input\"));\n\n    const timer = setTimeout(() => {\n      setLoading((state) => (state === \"loading\" ? null : \"loading\"));\n      getSample(codingjob, unitData, setSample, setLoading);\n    }, 100);\n    return () => clearTimeout(timer);\n  }, [unitData, codingjob, setSample, setLoading]);\n\n  if (!codingjob) return null;\n\n  return [sample, loading];\n};\n\nconst getUnitData = async (job_id, setUnitData) => {\n  const unitSettings = await db.getCodingjobProp(job_id, \"unitSettings\");\n  let unitData = await getUnitDataFromDB(job_id, unitSettings);\n  setUnitData(unitData);\n\n  if (unitSettings.totalUnits === null || unitSettings.n === null || Number.isNaN(unitSettings.n)) {\n    await db.setCodingjobProp(job_id, \"unitSettings\", {\n      ...unitSettings,\n      n: unitData.units.length,\n      totalUnits: unitData.units.length,\n    });\n  }\n};\n\nconst getSample = async (codingjob, unitData, setSample, setLoading) => {\n  const validCodes = codingjob.unitSettings.validCodes[codingjob.unitSettings.annotation];\n\n  let units = unitData.units;\n  let invalidCodesLookup = {};\n  if (\n    validCodes &&\n    codingjob.unitSettings.unitSelection === \"annotations\" &&\n    validCodes.some((vc) => !vc.valid)\n  ) {\n    invalidCodesLookup = validCodes.reduce((obj, code) => {\n      if (!code.valid) obj[code.code] = true;\n      return obj;\n    }, {});\n    units = units.filter((u) => !invalidCodesLookup[u.annotationValue]);\n  }\n\n  const nDiff = units.length - codingjob.unitSettings.totalUnits;\n  if (nDiff !== 0) {\n    await db.setCodingjobProp(codingjob, \"unitSettings\", {\n      ...codingjob.unitSettings,\n      n: Math.max(0, Math.min(units.length, codingjob.unitSettings.n + nDiff)),\n      totalUnits: units.length,\n    });\n    if (units.length === 0) {\n      setSample([]);\n      setTimeout(() => setLoading(\"ready\"), 50);\n    }\n    return;\n  }\n\n  let stratum = units.map((u) => {\n    let s = codingjob.unitSettings.balanceDocuments ? u.doc_uid : \"\";\n    if (unitData.unitSelection === \"annotations\" && codingjob.unitSettings.balanceAnnotations)\n      s += `_${u.annotationValue}`;\n    return s;\n  });\n\n  let sample = drawRandom(\n    units,\n    codingjob.unitSettings.n,\n    false,\n    codingjob.unitSettings.seed,\n    stratum\n  );\n\n  if (\n    unitData.unitSelection === \"annotations\" &&\n    unitData.textUnit !== \"span\" &&\n    codingjob.unitSettings.annotationMix\n  ) {\n    let sampleN = Math.ceil(units.length * (codingjob.unitSettings.annotationMix / 100));\n    let randomUnits = getRandomUnits(\n      unitData.all,\n      codingjob,\n      codingjob.unitSettings,\n      sampleN,\n      invalidCodesLookup\n    );\n    if (randomUnits.length > 0) {\n      sample = sample.concat(randomUnits);\n      sample = drawRandom(sample, sample.length, false, codingjob.unitSettings.seed, null);\n    }\n  }\n\n  sample = orderUnits(sample, codingjob.unitSettings);\n  setSample(sample);\n  setTimeout(() => setLoading(\"ready\"), 50);\n};\n\nconst getUnitDataFromDB = async (job_id, unitSettings) => {\n  const [all, annotations] = await getAllUnits(job_id, unitSettings);\n\n  let units;\n  if (unitSettings.unitSelection === \"allTextUnits\") units = all;\n  if (unitSettings.unitSelection === \"annotations\") units = annotations;\n\n  // returns both 'all' and 'annotations'. If selection is \"allTextUnits\", we use all,\n  // and if it's \"annotations\" we use annotations. But if it's annotations + random we need both\n  return {\n    all,\n    annotations,\n    units,\n    unitSelection: unitSettings.unitSelection,\n    textUnit: unitSettings.textUnit,\n    annotation: unitSettings.annotation,\n  };\n};\n\nconst getAllUnits = async (job_id, unitSettings) => {\n  const { textUnit, unitSelection } = unitSettings;\n\n  let documents = await db.getDocuments(job_id);\n\n  // doesn't do anything right now, but maybe make settings at some point\n  let minIndex = 0;\n  let maxIndex = Infinity;\n\n  const annotatedUnits = [];\n  const allUnits = [];\n\n  let docIndex = -1;\n  await documents.each((e) => {\n    docIndex++;\n    const unitIndices = [];\n    const annotationValues =\n      unitSelection === \"annotations\"\n        ? getAnnotations(e.annotations, e.tokens, textUnit, unitSettings.annotation)\n        : [];\n\n    if (textUnit === \"document\" || textUnit === \"span\") {\n      unitIndices.push(0);\n    }\n\n    if (textUnit === \"paragraph\") {\n      const paragraphs = e.tokens[e.tokens.length - 1].paragraph;\n      for (let parIndex = minIndex; parIndex <= Math.min(maxIndex, paragraphs); parIndex++) {\n        unitIndices.push(parIndex);\n      }\n    }\n\n    if (textUnit === \"sentence\") {\n      const sentences = e.tokens[e.tokens.length - 1].sentence;\n      for (let sentIndex = minIndex; sentIndex <= Math.min(maxIndex, sentences); sentIndex++) {\n        unitIndices.push(sentIndex);\n      }\n    }\n\n    for (let unitIndex of unitIndices) {\n      const item = {\n        textUnit,\n        unitIndex: unitIndex,\n        doc_uid: e.doc_uid,\n        document_id: e.document_id,\n        textFields: getTextFields(e),\n        metaFields: getMetaFields(e),\n        docIndex,\n        annotationValues: {},\n      };\n\n      if (annotationValues[unitIndex]) {\n        for (let ann of annotationValues[unitIndex]) {\n          const annItem = { ...item };\n          annItem.variables = ann.variables;\n          annItem.span = ann.span;\n          annItem.annotationValue = ann.annotationValue;\n          if (textUnit === \"span\") item.unitIndex = ann.span[0];\n          annotatedUnits.push(annItem);\n          item.annotationValues[ann.annotationValue] = true;\n        }\n      }\n\n      if (textUnit !== \"span\") allUnits.push(item);\n    }\n  });\n\n  return [allUnits, annotatedUnits];\n};\n\nconst getRandomUnits = (all, codingjob, unitSettings, sampleN, invalidCodesLookup) => {\n  const variable = unitSettings.annotation;\n  const codes = codingjob.importedCodes[variable];\n\n  let indices = [];\n  for (let i = 0; i < all.length; i++) {\n    const unit = all[i];\n    for (let code of codes) {\n      if (invalidCodesLookup[code.code]) continue;\n      const value = code.code; // if at some point we decide to allow multiple values, id will be more complicated\n\n      if (unitSettings.onlyUnused && unit.annotationValues[value]) continue;\n      indices.push({\n        i,\n        variables: { [variable]: code.code },\n        stratum: unit.stratum + `_${value}`,\n      });\n    }\n  }\n\n  if (indices.length === 0) return [];\n  indices = drawRandom(\n    indices,\n    sampleN,\n    false,\n    unitSettings.seed + 1,\n    indices.map((i) => i.stratum)\n  );\n\n  const randomUnits = [];\n  for (let randomUnitIndex of indices) {\n    randomUnits.push({\n      ...all[randomUnitIndex.i],\n      random: true,\n      variables: randomUnitIndex.variables,\n    });\n  }\n  return randomUnits;\n};\n\nconst getAnnotations = (annotations, tokens, textUnit, annotation) => {\n  // complicated story... but.\n  // creates an object to add all used values for the selected annotation to the units\n  // this is used for adding random annotations without accidentally random sampling a\n  // correct annotation (which in some cases is quite common)\n  if (!annotations) return [];\n  const ann = {};\n  for (let i of Object.keys(annotations)) {\n    for (let id of Object.keys(annotations[i])) {\n      const variable = annotations[i][id].variable;\n      if (variable !== annotation) continue;\n      const annotationValue = annotations[i][id].value;\n\n      const a = {\n        annotationValue,\n        //unitIndex: Number(i),\n        span: annotations[i][id].span,\n        variables: { [variable]: annotations[i][id].value },\n      };\n\n      if (textUnit === \"document\" || textUnit === \"span\") {\n        if (!ann[0]) ann[0] = [];\n        ann[0].push(a);\n      }\n      if (textUnit === \"paragraph\") {\n        if (!ann[tokens[i].paragraph]) ann[tokens[i].paragraph] = [];\n        ann[tokens[i].paragraph].push(a);\n      }\n      if (textUnit === \"sentence\") {\n        if (!ann[tokens[i].sentence]) ann[tokens[i].sentence] = [];\n        ann[tokens[i].sentence].push(a);\n      }\n    }\n  }\n  return ann;\n};\n\nconst getTextFields = (e) => {\n  if (e.text_fields) return e.text_fields.map((tf) => tf.name);\n  if (e.tokens) {\n    const fields = new Set();\n    for (let token of e.tokens) fields.add(token.section);\n    return [...fields];\n  }\n  return [];\n};\n\nconst getMetaFields = (e) => {\n  if (e.meta_fields) return e.meta_fields.map((tf) => tf.name);\n  return [];\n};\n\nconst orderUnits = (cjIndices, unitSettings) => {\n  if (unitSettings.unitSelection === \"annotations\" && unitSettings.annotationMix > 0)\n    return cjIndices;\n  if (!unitSettings.ordered) return cjIndices;\n  return cjIndices.sort(function (a, b) {\n    if (a.docIndex !== b.docIndex) return a.docIndex - b.docIndex;\n    if (a.unitIndex !== b.unitIndex) return a.unitIndex - b.unitIndex;\n    if (a.annotation != null && a.annotation.index !== b)\n      return a.annotation.index - b.annotation.index;\n    return 0;\n  });\n};\n\nexport default useUnits;\n","export const selectTokens = (tokens, item, contextUnit, contextWindow) => {\n  let newTokens = [];\n  if (tokens.length === 0) return newTokens;\n\n  let tokenRange = [0, tokens.length - 1];\n  let tokenContext = [0, tokens.length - 1];\n\n  if (item.textUnit === \"span\") {\n    tokenRange = item.span;\n  }\n\n  if (item.textUnit === \"paragraph\" || item.textUnit === \"sentence\") {\n    tokenRange = getTokenRange(tokens, item.textUnit, item.unitIndex, item.unitIndex);\n  }\n\n  if (contextUnit === \"paragraph\" || contextUnit === \"sentence\")\n    tokenContext = getContextRange(tokens, tokenRange, contextUnit, contextWindow);\n  if (contextUnit === \"none\") tokenContext = tokenRange;\n\n  for (let i = 0; i < tokens.length; i++) {\n    tokens[i].codingUnit = true;\n    if (tokens[i].index < tokenRange[0]) tokens[i].codingUnit = false;\n    if (tokens[i].index > tokenRange[1]) tokens[i].codingUnit = false;\n    if (tokens[i].index < tokenContext[0]) continue;\n    if (tokens[i].index > tokenContext[1]) break;\n    newTokens.push(tokens[i]);\n  }\n  return newTokens;\n};\n\nconst getTokenRange = (tokens, field, startValue, endValue) => {\n  const range = [tokens[0].index, tokens[tokens.length - 1].index];\n\n  const start = tokens.find((token) => token[field] === startValue);\n  if (start) range[0] = start.index;\n  const end = tokens.find((token) => token[field] === endValue + 1);\n  if (end) range[1] = end.index - 1;\n\n  return range;\n};\n\nconst getContextRange = (tokens, tokenRange, contextUnit, contextWindow) => {\n  const offset = -tokens[0].index;\n  let range = [\n    tokens[tokenRange[0] + offset][contextUnit],\n    tokens[tokenRange[1] + offset][contextUnit],\n  ];\n  range[0] = range[0] - contextWindow[0];\n  range[1] = range[1] + contextWindow[1];\n  return getTokenRange(tokens, contextUnit, range[0], range[1]);\n};\n","import { selectTokens } from \"./selectTokens\";\nimport hash from \"object-hash\";\nimport db from \"apis/dexie\";\nimport { exportSpanAnnotations } from \"ccs-annotator-client\";\n\n// Transform an item as its created in codingjob manager into a simpler\n// standardized item format. This is used when codingjobs are deployed,\n// but also per item in the previews. This looks redundant (tokens are\n// transformed to text, only to get tokenized immediately after), but this\n// makes it much easier to understand whats happening.\n// Basically:\n//   - When documents are uploaded they are tokenized\n//   - Unit selection can split documens into coding units (and context units)\n//   - These units are transformed to simplified items\n\nexport const standardizeUnits = async (codingjob, units) => {\n  const { contextUnit, contextWindow, layout } = codingjob.unitSettings;\n\n  const docs = {};\n  const standardizedUnits = [];\n\n  const jobhash = hash(codingjob);\n\n  for (let i = 0; i < units.length; i++) {\n    const doc_uid = units[i].doc_uid;\n    if (!docs[doc_uid]) docs[doc_uid] = await db.getDocument(doc_uid);\n\n    // get the unit tokens (filter the document tokens, and add bool for whether token is codingunit (i.e. not context))\n    let tokens = selectTokens(docs[doc_uid].tokens, units[i], contextUnit, contextWindow);\n\n    const codingUnit = tokens.map((token) => token.codingUnit);\n    const firstUnitIndex = codingUnit.indexOf(true);\n    const lastUnitIndex = codingUnit.lastIndexOf(true);\n    const fromChar = tokens[firstUnitIndex].offset;\n    const toChar = tokens[lastUnitIndex].offset + tokens[lastUnitIndex].length;\n\n    // get annotations, transform back to array format, and filter for selected tokens\n    const docAnnotations = exportSpanAnnotations(docs[doc_uid].annotations, docs[doc_uid].tokens);\n    const importedAnnotations = docAnnotations.filter(\n      (a) => a.offset >= fromChar && a.offset < toChar\n    );\n\n    const unit = {\n      document_id: units[i].document_id,\n      provenance: { unit: units[i].textUnit, unit_index: units[i].unitIndex },\n      meta_fields: docs[doc_uid].meta_fields,\n      importedAnnotations,\n      variables: units[i].variables,\n    };\n\n    // disabled for now, because AmCAT only allows small file uploads\n    const useOwnTokens = false; // docs[doc_uid].importedTokens\n    if (useOwnTokens) {\n      // if tokens were imported, don't collapse to texts, but keep the original tokens.\n      unit.tokens = tokensRowToColumn(tokens);\n\n      const keepColumns = [\n        \"document_id\",\n        \"codingUnit\",\n        \"offset\",\n        \"length\",\n        \"pre\",\n        \"post\",\n        \"paragraph\",\n        \"sentence\",\n        \"section\",\n        \"text\",\n      ];\n      unit.tokens = Object.keys(unit.tokens).reduce((data, column) => {\n        if (keepColumns.includes(column)) data[column] = unit.tokens[column];\n        return data;\n      }, {});\n      unit.text_fields = Object.keys(layout.text).reduce((tf, name) => {\n        // if texts are not collapsed, text_fields is still used for section layout settings\n        tf.push({ name, ...layout.text[name] });\n        return tf;\n      }, []);\n    } else {\n      unit.text_fields = unparseTokens(tokens);\n      unit.text_fields = unit.text_fields.map((tf) => ({ ...tf, ...layout.text[tf.name] }));\n    }\n\n    unit.meta_fields = unit.meta_fields.map((mf) => ({ ...mf, ...layout.meta[mf.name] }));\n    unit.unit_id = hash({ jobhash, unit, date: Date() });\n    standardizedUnits.push(unit);\n  }\n  return standardizedUnits;\n};\n\nconst unparseTokens = (tokens) => {\n  // Create texts from tokens in a way that preserves information about original text and textParts (context and unit)\n\n  const text_fields = [];\n  if (tokens.length === 0) return text_fields;\n\n  let unit_start = null;\n  let unit_end = null;\n  let text = \"\";\n  let section = tokens[0].section;\n\n  let offset = {};\n  if (tokens[0].offset > 0) offset.offset = tokens[0].offset;\n\n  let unit_started = false;\n  let unit_ended = false;\n\n  for (let token of tokens) {\n    if (token.section !== section) {\n      const text_field = { name: section, value: text, ...offset };\n      if (unit_start !== null) text_field.unit_start = unit_start;\n      if (unit_end !== null) text_field.unit_end = unit_end;\n\n      text_fields.push(text_field);\n\n      offset = {};\n      if (token.offset > 0) offset.offset = token.offset;\n\n      unit_start = null;\n      unit_end = null;\n      text = \"\";\n    }\n\n    if (!unit_started && token.codingUnit) {\n      unit_start = token.offset;\n      unit_started = true;\n    }\n    if (unit_started && !unit_ended && !token.codingUnit) {\n      unit_end = token.offset - 1;\n      unit_ended = true;\n    }\n\n    text = text + token.pre + token.text + token.post;\n    section = token.section;\n  }\n  if (text.length > 0) {\n    const text_field = { name: section, value: text, ...offset };\n    if (unit_start !== null) text_field.unit_start = unit_start;\n    if (unit_end !== null) text_field.unit_end = unit_end;\n    text_fields.push(text_field);\n  }\n  return text_fields;\n};\n\n/**\n * Check if tokens are in row format\n *  {doc_id: 1, token_id: 1}, {doc_id: 2, token_id: 2}\n * and if so, change to column format\n *  [{doc_id: [1,1,1,1,...]},{token_id: [1,2,3,4,etc.]}]\n *\n * row format is easier to work with, but column format is more efficient\n * @param {} tokens\n */\nexport const tokensRowToColumn = (tokens) => {\n  if (!Array.isArray(tokens)) return tokens;\n\n  const tokensObj = {};\n  for (let token of tokens) {\n    for (let column of Object.keys(token)) {\n      if (!tokensObj[column]) tokensObj[column] = [];\n      tokensObj[column].push(token[column]);\n    }\n  }\n\n  return tokensObj;\n};\n","import React from \"react\";\n\nimport { Button, Popup } from \"semantic-ui-react\";\n\nconst Help = ({ children, header, texts, type }) => {\n  // a simple question mark popup for help texts\n  // header should be a string\n  // texts an array of strings (for different paragraphs)\n\n  const questionMark = () => {\n    return (\n      <Button\n        circular\n        icon={type === \"warn\" ? \"exclamation\" : \"question\"}\n        size=\"mini\"\n        style={{\n          position: \"absolute\",\n          transform: \"scale(0.7)\",\n          marginTop: \"-0.6em\",\n          marginLeft: \"0.2em\",\n          paddingLeft: \"0.1em\",\n          paddingRight: \"0.1em\",\n          paddingTop: \"0.2em\",\n          paddingBottom: \"0.2em\",\n          background: type === \"warn\" ? \"orange\" : \"blue\",\n          color: \"white\",\n          border: \"1px solid grey\",\n        }}\n      />\n    );\n  };\n\n  return (\n    <Popup wide trigger={questionMark()}>\n      {header ? <h3>{header}</h3> : null}\n      {texts ? texts.map((text, i) => <p key={i}>{text}</p>) : null}\n      {children}\n    </Popup>\n  );\n};\n\nexport default Help;\n","import React, { useEffect, useState } from \"react\";\nimport PaginationTable from \"./PaginationTable\";\n\nconst PAGESIZE = 10;\n\n/**\n * PaginationTable wrapper for if the full data is already in memory\n */\nconst FullDataTable = ({ fullData, columns }) => {\n  const [data, setData] = useState([]);\n  const [pages, setPages] = useState(1);\n\n  const pageChange = (activePage) => {\n    const offset = (activePage - 1) * PAGESIZE;\n    const newdata = fullData.slice(offset, offset + PAGESIZE);\n    setData(newdata);\n  };\n\n  useEffect(() => {\n    if (!fullData) {\n      setData([]);\n      return null;\n    }\n    const n = fullData.length;\n    setPages(Math.ceil(n / PAGESIZE));\n    let newdata = [];\n    if (n > 0) newdata = fullData.slice(0, PAGESIZE);\n    setData(newdata);\n  }, [fullData]);\n\n  if (!data) return;\n\n  return <PaginationTable data={data} pages={pages} columns={columns} pageChange={pageChange} />;\n};\n\nexport default FullDataTable;\n","import React, { useEffect, useState } from \"react\";\nimport { Icon, Form, Checkbox, Input, Header, Button } from \"semantic-ui-react\";\nimport Help from \"./Help\";\nimport db from \"apis/dexie\";\nimport FullDataTable from \"./FullDataTable\";\n\nconst SampleSettings = ({ codingjob, units }) => {\n  const unitSettings = codingjob?.unitSettings;\n  const setUnitSettings = (us) => {\n    db.setCodingjobProp(codingjob, \"unitSettings\", us);\n  };\n\n  const totalN = () => {\n    if (!units) return null;\n    if (unitSettings?.annotationMix === 0) return null;\n    return <Header>Total units = {units.length}</Header>;\n  };\n\n  if (!unitSettings) return null;\n  return (\n    <div style={{ verticalAlign: \"top\", float: \"top\", paddingLeft: \"1em\" }}>\n      <SampleForm unitSettings={unitSettings} setUnitSettings={setUnitSettings} />\n      <div style={{ height: \"25px\" }}>{totalN()}</div>\n      <br />\n      <SelectValidCodes codingjob={codingjob} units={units} />\n    </div>\n  );\n};\n\nconst SampleForm = React.memo(({ unitSettings, setUnitSettings }) => {\n  const [delayed, setDelayed] = useState(null); // delayed unitSettings\n  const [pct, setPct] = useState(100);\n  const totalUnits = unitSettings.totalUnits || 0;\n\n  useEffect(() => {\n    const pct = 0.1 * Math.round(1000 * (unitSettings.n / totalUnits));\n    setPct(pct !== Math.round(pct) ? pct.toFixed(2) : pct);\n    setDelayed(unitSettings);\n  }, [totalUnits, unitSettings, setDelayed]);\n\n  useEffect(() => {\n    if (delayed === unitSettings) return null;\n    const timer = setTimeout(() => {\n      setUnitSettings(delayed);\n    }, 300);\n    return () => clearTimeout(timer);\n  }, [delayed, unitSettings, setUnitSettings]);\n\n  const setWithoutDelay = (field, value) => {\n    setUnitSettings({ ...unitSettings, [field]: value });\n  };\n\n  const onChangeMix = (e, d) => {\n    setDelayed((current) => ({ ...current, annotationMix: Number(d.value) }));\n  };\n  const onChangeOnlyUnused = (e, d) => {\n    setWithoutDelay(\"onlyUnused\", d.checked);\n  };\n\n  const onChangeSeed = (e, d) => {\n    setDelayed((current) => ({ ...current, seed: Number(d.value) }));\n  };\n\n  const onChangeShuffle = (e, d) => {\n    setWithoutDelay(\"ordered\", !d.checked);\n  };\n\n  const onChangeBalanceDoc = (e, d) => {\n    setWithoutDelay(\"balanceDocuments\", d.checked);\n  };\n  const onChangeBalanceAnn = (e, d) => {\n    setWithoutDelay(\"balanceAnnotations\", d.checked);\n  };\n\n  const onChangeN = (e, d) => {\n    let value = Number(d.value);\n    //value = value > n ? Math.min(totalUnits, value + 4) : Math.max(0, value - 4);\n    setPct(Math.round((100 * value) / totalUnits));\n    setDelayed((current) => ({ ...current, n: value }));\n  };\n\n  const onChangePCT = (e, d) => {\n    let value = Number(d.value);\n    //value = value > pct ? Math.min(100, value + 4) : Math.max(0, value - 4);\n    let valueN = Math.ceil((value / 100) * totalUnits);\n    if (valueN >= 0) {\n      setPct(value);\n      setDelayed((current) => ({ ...current, n: valueN }));\n    }\n  };\n\n  if (delayed === null) return null;\n\n  return (\n    <Form>\n      <Form.Group>\n        <Icon name=\"setting\" />\n        <div>\n          <label>Sample settings</label>\n          <Help\n            header={\"Sampling and shuffling\"}\n            texts={[\n              \"If % < 100, a random sample will be drawn.\",\n              \"If shuffle is enabled, the order of the units will be randomized. Shuffle cannot be disabled if random annotations are added\",\n              \"Seed initializes the random number generator. Simply put, using the same seed gives the same 'random' results if the data is the same.\",\n            ]}\n          />\n        </div>\n\n        {/* <Help header={\"test\"} texts={[\"test\", \"this\"]} /> */}\n      </Form.Group>\n\n      <Form.Group widths=\"equal\">\n        <Form.Field\n          fluid\n          min={1}\n          max={totalUnits}\n          label={<b>N</b>}\n          size=\"mini\"\n          control={Input}\n          type=\"number\"\n          value={delayed.n}\n          onChange={onChangeN}\n        />\n\n        <Form.Field\n          fluid\n          min={0}\n          step={5}\n          max={100}\n          label={<b>%</b>}\n          size=\"mini\"\n          control={Input}\n          type=\"number\"\n          value={pct}\n          onChange={onChangePCT}\n        />\n      </Form.Group>\n\n      <Form.Group>\n        <Form.Field width={8}>\n          <label>Shuffle</label>\n          <Checkbox\n            toggle\n            size=\"mini\"\n            checked={\n              !unitSettings.ordered ||\n              (unitSettings.unitSelection === \"annotations\" && unitSettings.annotationMix > 0)\n            }\n            onChange={onChangeShuffle}\n          />\n        </Form.Field>\n\n        <Form.Field width={8}>\n          <label>Seed</label>\n          <Input size=\"mini\" type=\"number\" min={1} value={delayed.seed} onChange={onChangeSeed} />\n        </Form.Field>\n      </Form.Group>\n\n      <Form.Group grouped widths=\"equal\">\n        <Form.Field>\n          <b>Balance</b>\n          <Help\n            header={\"Balanced sampling\"}\n            texts={[\n              \"Balance sampled Units evenly over groups. Uses a simple approach where unique groups are created (documents, codes, or documentsXcodes), and samples are drawn from these groups one by one\",\n              \"For documents: get an equal number of paragraphs, sentences or annotations per document.\",\n              \"For codes: if units are annotations, get an equal number annotations for each unique code.\",\n            ]}\n          />\n        </Form.Field>\n        <Form.Field>\n          <Checkbox\n            size=\"mini\"\n            label=\"documents\"\n            checked={unitSettings.balanceDocuments}\n            onChange={onChangeBalanceDoc}\n          />\n        </Form.Field>\n        <Form.Field>\n          <Checkbox\n            disabled={unitSettings.unitSelection !== \"annotations\"}\n            size=\"mini\"\n            label=\"codes\"\n            checked={unitSettings.balanceAnnotations}\n            onChange={onChangeBalanceAnn}\n          />\n        </Form.Field>\n      </Form.Group>\n      <Form.Group>\n        <Form.Field\n          width={8}\n          disabled={\n            unitSettings.textUnit === \"span\" || unitSettings.unitSelection === \"allTextUnits\"\n          }\n          min={0}\n          step={10}\n          max={1000}\n          label={\n            <b>\n              Random annotations (%)\n              <Help\n                header=\"Create units with random annotations\"\n                texts={[\n                  `Given units based on imported annotations, this feature adds units to the sample in which this annotation does NOT occur.\n                   (This is only possible if units are sentences, paragraphs or documents, because randomly adding spans is a lost cause)`,\n                  `In other words, if imported annotations are 'positives', then this adds 'negatives' to the sample. \n                   This is particularly relevant for validation tasks, and when it cannot be taken for granted that all negatives are true negatives.`,\n                  `The maximum number of random annotations is the number of unique text units times the number of unique codes.`,\n                  `Randomly added annotations can concidentally coincide with actual annotations. This can be prevented with the \"only unused\" setting.`,\n                ]}\n              />\n            </b>\n          }\n          size=\"mini\"\n          control={Input}\n          type=\"number\"\n          value={delayed.annotationMix}\n          onChange={onChangeMix}\n        />\n\n        <Form.Field>\n          <label>Only unused </label>\n\n          <Checkbox\n            toggle\n            disabled={\n              unitSettings.textUnit === \"span\" || unitSettings.unitSelection === \"allTextUnits\"\n            }\n            size=\"mini\"\n            checked={unitSettings.onlyUnused}\n            onChange={onChangeOnlyUnused}\n            style={{ paddingTop: \"3px\" }}\n          />\n        </Form.Field>\n      </Form.Group>\n    </Form>\n  );\n});\n\nconst validCodesColumns = [\n  { name: \"USE\", width: 1 },\n  { name: \"ONLY\", width: 2 },\n  { name: \"code\" },\n  { name: \"N\" },\n  { name: \"random\" },\n];\n\nconst SelectValidCodes = ({ codingjob, units }) => {\n  const annotation = codingjob?.unitSettings?.annotation;\n  const validCodes = codingjob?.unitSettings?.validCodes;\n  const isAnnotation = codingjob?.unitSettings?.unitSelection === \"annotations\";\n  const [data, setData] = useState([]);\n\n  const setValidCodes = React.useCallback(\n    (newValidCodes) => {\n      const unitSettings = {\n        ...codingjob.unitSettings,\n        validCodes: { ...validCodes, [annotation]: newValidCodes },\n      };\n      db.setCodingjobProp(codingjob, \"unitSettings\", unitSettings);\n    },\n    [codingjob, validCodes, annotation]\n  );\n\n  useEffect(() => {\n    if (!validCodes || !annotation || !isAnnotation) return;\n    if (!validCodes[annotation]) return;\n    if (!units || units.length === 0) {\n      setData(validCodes[annotation].map((row) => ({ code: row.code, N: 0, random: 0 })));\n      return;\n    }\n    if (!units[0].variables) return;\n\n    const valueMap = units.reduce((obj, unit) => {\n      const value = Object.values(unit.variables)[0];\n      if (!obj[value]) obj[value] = { real: 0, random: 0 };\n      if (unit.random) {\n        obj[value].random++;\n      } else obj[value].real++;\n      return obj;\n    }, {});\n    setData(\n      validCodes[annotation].map((row) => ({\n        ...row,\n        N: valueMap[row.code]?.real,\n        random: valueMap[row.code]?.random,\n      }))\n    );\n  }, [validCodes, units, setData, annotation, isAnnotation]);\n\n  useEffect(() => {\n    if (!validCodes || !annotation || !isAnnotation) return null;\n    if (validCodes[annotation]) return;\n    const importedCodes = codingjob.importedCodes?.[annotation];\n    if (!importedCodes) return;\n    setValidCodes(importedCodes.map((code) => ({ code: code.code, valid: true })));\n  }, [codingjob, annotation, isAnnotation, setValidCodes, validCodes]);\n\n  if (!validCodes || !annotation || !isAnnotation) return null;\n  if (!validCodes[annotation]) return null;\n\n  const dataWithCheckbox = data.map((d, i) => {\n    d = { ...d };\n    d.USE = (\n      <Checkbox\n        checked={d.valid}\n        onClick={() => {\n          data[i].valid = !d.valid;\n          setValidCodes([...data]);\n        }}\n      />\n    );\n    d.ONLY = (\n      <Button\n        icon=\"hand point right\"\n        style={{ padding: \"0\", background: \"white\" }}\n        onClick={() => {\n          setValidCodes(\n            data.map((v, j) => {\n              v.valid = j === i;\n              return v;\n            })\n          );\n        }}\n      />\n    );\n    return d;\n  });\n\n  const useAll = () => {\n    setValidCodes(\n      data.map((v) => {\n        v.valid = true;\n        return v;\n      })\n    );\n  };\n\n  return (\n    <Form>\n      <Form.Group>\n        <Icon name=\"setting\" />\n        <div>\n          <label>Annotations per code</label>\n        </div>\n      </Form.Group>\n      <Button\n        primary\n        content=\"use all\"\n        style={{ padding: \"5px\", marginBottom: \"5px\" }}\n        onClick={useAll}\n      />\n      <FullDataTable fullData={dataWithCheckbox} columns={validCodesColumns} />\n      {/* <CheckboxTable columns={validCodesColumns} data={data} setData={setValidCodes} /> */}\n    </Form>\n  );\n};\n\nexport default React.memo(SampleSettings);\n","import React, { useEffect, useState } from \"react\";\nimport { Table, Input, Checkbox, Icon } from \"semantic-ui-react\";\nimport db from \"apis/dexie\";\n\nconst UnitLayoutSettings = ({ codingjob, units }) => {\n  const [fields, setFields] = useState({ text: [], meta: [] });\n  const unitSettings = codingjob?.unitSettings;\n  const setUnitSettings = (us) => {\n    db.setCodingjobProp(codingjob, \"unitSettings\", us);\n  };\n\n  useEffect(() => {\n    if (!unitSettings?.layout) return;\n    if (!units) return;\n    const f = unitSettings.layout;\n    for (let unit of units) {\n      if (unit.textFields) {\n        for (let textField of unit.textFields) {\n          if (!f.text[textField]) f.text[textField] = defaultLayout(textField);\n        }\n      }\n      if (unit.metaFields) {\n        for (let metaField of unit.metaFields) {\n          if (!f.meta[metaField]) f.meta[metaField] = defaultLayout(metaField);\n        }\n      }\n    }\n    setFields(f);\n  }, [units, unitSettings]);\n  if (!unitSettings) return null;\n\n  return (\n    <div style={{ overflowX: \"auto\" }}>\n      <FieldSettingsTable\n        fields={fields}\n        unitSettings={unitSettings}\n        setUnitSettings={setUnitSettings}\n      />\n    </div>\n  );\n};\n\nconst defaultLayout = (field) => {\n  const l = {\n    label: field.toUpperCase().replaceAll(\"_\", \" \"),\n    bold: false,\n    italic: false,\n    size: 1,\n    visible: true,\n    justify: true,\n    paragraphs: true,\n  };\n  if ([\"title\", \"headline\"].includes(field)) {\n    l.size = 1;\n    l.bold = true;\n  }\n  return l;\n};\n\nconst FieldSettingsTable = ({ fields, unitSettings, setUnitSettings }) => {\n  const update = (which, field, key, value) => {\n    const newLayout = { ...unitSettings.layout };\n\n    newLayout[which][field][key] = value;\n    setUnitSettings({ ...unitSettings, layout: newLayout });\n  };\n\n  const visibleField = (which, fields, field) => {\n    if (which === \"text\") return null;\n    return (\n      <Checkbox\n        checked={fields[field].visible}\n        onChange={() => update(which, field, \"visible\", !fields[field].visible)}\n      />\n    );\n  };\n\n  const labelField = (which, fields, field) => {\n    return (\n      <Input\n        size=\"mini\"\n        value={fields[field].label}\n        style={{ padding: \"0\", width: \"10em\" }}\n        onChange={(e, d) => update(which, field, \"label\", d.value)}\n      />\n    );\n  };\n\n  const boldField = (which, fields, field) => {\n    return (\n      <Checkbox\n        checked={fields[field].bold}\n        onChange={() => update(which, field, \"bold\", !fields[field].bold)}\n      />\n    );\n  };\n\n  const italicField = (which, fields, field) => {\n    return (\n      <Checkbox\n        checked={fields[field].italic}\n        onChange={() => update(which, field, \"italic\", !fields[field].italic)}\n      />\n    );\n  };\n\n  const justifyField = (which, fields, field) => {\n    if (which !== \"text\") return null;\n    return (\n      <Checkbox\n        checked={fields[field].justify}\n        onChange={() => update(which, field, \"justify\", !fields[field].justify)}\n      />\n    );\n  };\n\n  const paragraphsField = (which, fields, field) => {\n    if (which !== \"text\") return null;\n    return (\n      <Checkbox\n        checked={fields[field].paragraphs}\n        onChange={() => update(which, field, \"paragraphs\", !fields[field].paragraphs)}\n      />\n    );\n  };\n\n  const sizeField = (which, fields, field) => {\n    return (\n      <Input\n        size=\"mini\"\n        value={Math.round(fields[field].size * 100)}\n        type=\"number\"\n        label=\"%\"\n        min={0}\n        max={500}\n        step={10}\n        style={{ width: \"100%\", padding: \"0\", border: \"none\" }}\n        onChange={(e, d) => {\n          const nr = Number(d.value);\n          if (isNaN(nr)) return;\n          update(which, field, \"size\", Math.round(nr) / 100);\n        }}\n      />\n    );\n  };\n\n  const rows = (which, fields) => {\n    const n = Object.keys(fields).length;\n    return Object.keys(fields).map((field, i) => {\n      return (\n        <Table.Row key={`header${i}`}>\n          {i === 0 ? (\n            <Table.Cell key={`which${i}`} rowSpan={n}>\n              <b>{which}</b>\n            </Table.Cell>\n          ) : null}\n          <Table.Cell key={`field${i}`}>{field}</Table.Cell>\n          <Table.Cell key={`visible${i}`} style={{ textAlign: \"left\" }}>\n            {visibleField(which, fields, field)}\n          </Table.Cell>\n          <Table.Cell key={`label${i}`} style={{ padding: \"2px\" }}>\n            {labelField(which, fields, field)}\n          </Table.Cell>\n          <Table.Cell key={`size${i}`} style={{ padding: \"2px\" }}>\n            {sizeField(which, fields, field)}\n          </Table.Cell>\n          <Table.Cell key={`bold${i}`} style={{ textAlign: \"left\" }}>\n            {boldField(which, fields, field)}\n          </Table.Cell>\n          <Table.Cell key={`italic${i}`} style={{ textAlign: \"left\" }}>\n            {italicField(which, fields, field)}\n          </Table.Cell>\n          <Table.Cell key={`justify${i}`} style={{ textAlign: \"left\" }}>\n            {justifyField(which, fields, field)}\n          </Table.Cell>\n          <Table.Cell key={`paragraphs${i}`} style={{ textAlign: \"left\" }}>\n            {paragraphsField(which, fields, field)}\n          </Table.Cell>\n        </Table.Row>\n      );\n    });\n  };\n\n  return (\n    <Table structured compact unstackable singleLine>\n      <Table.Header>\n        <Table.Row key=\"header\">\n          <Table.HeaderCell key=\"which\" width={2}></Table.HeaderCell>\n          <Table.HeaderCell key=\"field\" width={3}>\n            field\n          </Table.HeaderCell>\n          <Table.HeaderCell key=\"visible\" width={1}>\n            <Icon name=\"eye slash\" />\n          </Table.HeaderCell>\n          <Table.HeaderCell key=\"label\" width={3}>\n            label\n          </Table.HeaderCell>\n          <Table.HeaderCell key=\"size\" width={3}>\n            text size %\n          </Table.HeaderCell>\n          <Table.HeaderCell key=\"bold\" width={1}>\n            <Icon name=\"bold\" />\n          </Table.HeaderCell>\n          <Table.HeaderCell key=\"italic\" width={1}>\n            <Icon name=\"italic\" />\n          </Table.HeaderCell>\n          <Table.HeaderCell key=\"justify\" width={1}>\n            <Icon name=\"align justify\" />\n          </Table.HeaderCell>\n          <Table.HeaderCell key=\"paragraph\" width={1}>\n            <Icon name=\"paragraph\" />\n          </Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n      <Table.Body>\n        {rows(\"meta\", fields.meta)}\n        {rows(\"text\", fields.text)}\n      </Table.Body>\n    </Table>\n  );\n};\n\nexport default UnitLayoutSettings;\n","import React, { useEffect, useState } from \"react\";\nimport { Grid, Header, Dimmer, Loader } from \"semantic-ui-react\";\n\nimport UnitSettings from \"./subcomponents/UnitSettings\";\nimport useUnits from \"components/CodingjobManager/subcomponents/useUnits\";\nimport { standardizeUnits } from \"library/standardizeUnits\";\nimport SampleSettings from \"./subcomponents/SampleSettings\";\nimport { IndexController, Document } from \"ccs-annotator-client\";\nimport UnitLayoutSettings from \"./subcomponents/UnitLayoutSettings\";\n\nconst ManageCodingUnits = ({ codingjob }) => {\n  const [units, loadingUnits] = useUnits(codingjob);\n  if (!codingjob) return null;\n\n  return (\n    <div>\n      <Grid stackable celled=\"internally\" columns={3}>\n        <Grid.Column verticalAlign=\"top\" stretched width={5}>\n          <Header textAlign=\"center\" style={{ background: \"#1B1C1D\", color: \"white\" }}>\n            Define Coding Units\n          </Header>\n          <UnitSettings codingjob={codingjob} />\n          <br />\n        </Grid.Column>\n\n        <Grid.Column width={5}>\n          <Header textAlign=\"center\" style={{ background: \"#1B1C1D\", color: \"white\" }}>\n            Select Units\n          </Header>\n\n          <SampleSettings codingjob={codingjob} units={units} />\n        </Grid.Column>\n        <Grid.Column width={6} style={{ height: \"80vh\" }}>\n          <Header textAlign=\"center\" style={{ background: \"#1B1C1D\", color: \"white\" }}>\n            Coding Unit Design\n          </Header>\n          <div style={{ maxHeight: \"50%\", overflow: \"auto\" }}>\n            <UnitLayoutSettings codingjob={codingjob} units={units} />\n          </div>\n          <div style={{ position: \"relative\", paddingTop: \"20px\", overflow: \"auto\" }}>\n            <Header textAlign=\"center\" style={{ background: \"#1B1C1D\", color: \"white\" }}>\n              Unit preview\n            </Header>\n            <Dimmer\n              inverted\n              active={loadingUnits === \"awaiting_input\" || loadingUnits === \"loading\"}\n            >\n              Awaiting input\n              <Loader size=\"huge\">\n                {loadingUnits === \"awaiting_input\" ? \"Awaiting input\" : \"updating\"}\n              </Loader>\n            </Dimmer>\n            <PreviewDocument units={units} codingjob={codingjob} codebook={{}} />\n          </div>\n        </Grid.Column>\n      </Grid>\n    </div>\n  );\n};\n\nconst PreviewDocument = ({ units, codingjob, codebook }) => {\n  const [unitIndex, setUnitIndex] = useState(null);\n  const [standardizedUnit, setStandardizedUnit] = useState(null);\n\n  useEffect(() => {\n    if (!units?.[unitIndex]) return null;\n    standardizeUnits(codingjob, [units[unitIndex]]).then((singleItemArray) => {\n      const previewItem = singleItemArray[0];\n      previewItem.post = (annotations) => console.log(annotations); // don't store annotations\n      setStandardizedUnit(previewItem);\n    });\n  }, [units, unitIndex, setStandardizedUnit, codingjob]);\n\n  const renderDocument = () => {\n    if (!standardizedUnit) return null;\n    return (\n      <>\n        <Dimmer inverted active={standardizedUnit === null}>\n          <Loader />\n        </Dimmer>\n        <Document unit={standardizedUnit} codes={codebook?.codes} settings={{}} />\n      </>\n    );\n  };\n\n  if (!units?.length > 0) return null;\n\n  return (\n    <Grid.Column width={6}>\n      <IndexController n={units?.length} index={unitIndex} setIndex={setUnitIndex} />\n\n      {renderDocument()}\n    </Grid.Column>\n  );\n};\n\nexport default React.memo(ManageCodingUnits);\n","import { standardizeCodes } from \"ccs-annotator-client\";\n\n/**\n * Transform the taskSettings into the codebook. The difference is that taskSettings also contains information that's only relevant in the manager. The codebook contains only the information relevant for the annotator\n *  Also removes other information that's only relevant for the manager\n * @param {*} taskSettings\n */\nexport const getCodebook = (taskSettings) => {\n  const codebook = {\n    type: taskSettings.type,\n    ...taskSettings[taskSettings.type],\n  };\n\n  if (taskSettings.type === \"annotate\") {\n    codebook.variables = [\n      ...codebook.variables.filter((v) => v.enabled == null || v.enabled === true),\n    ];\n    codebook.variables = codebook.variables.map((v) => {\n      const variable = { ...v };\n      if (variable.singleCode) variable.codes = [\"true\"];\n      variable.codes = standardizeCodes(variable.codes);\n      return variable;\n    });\n  }\n\n  if (taskSettings.type === \"questions\") {\n    codebook.questions = codebook.questions.map((q) => {\n      const question = { ...q };\n      question.codes = standardizeCodes(question.codes);\n      return question;\n    });\n  }\n\n  return codebook;\n};\n\nexport const ctaToText = (cta, indentSpaces = 2, paramOffset = 25) => {\n  let txt = \"\";\n  let line;\n  for (let code of cta) {\n    line = \"\";\n    line += Array(1 + code.level * indentSpaces).join(\" \");\n    line += code.code;\n\n    const addSpace = paramOffset - line.length;\n    if (addSpace > 0) line += Array(addSpace).join(\" \");\n    line += ` #color(${code.color})`;\n    if (!code.active) line += \" #disabled\";\n    if (code.folded) line += \" #folded\";\n    if (code.makes_irrelevant && code.makes_irrelevant.length > 0)\n      line += ` #irrelevant(${code.makes_irrelevant.join(\",\")})`;\n    txt += line + \"\\n\";\n  }\n  return txt;\n};\n\nexport const textToCodes = (text, root, codes, frozen) => {\n  const codeMap = codes.reduce((obj, code) => {\n    if (typeof code === \"object\") {\n      obj[code.code] = 1;\n      obj[code.parent] = 1;\n    } else obj[code] = 1;\n    return obj;\n  }, {});\n  const duplicates = [];\n  const updatedCodes = [...codes];\n  const parentLevel = {};\n  const lines = text.split(\"\\n\");\n  for (let line of lines) {\n    const spaces = line.search(/\\S/);\n\n    let newCode = line;\n    for (let flag of [\"color\", \"disabled\", \"folded\", \"irrelevant\"]) {\n      newCode = newCode.split(`#${flag}`)[0].trim();\n    }\n    if (newCode === \"\") continue;\n    if (codeMap[newCode]) duplicates.push(newCode);\n    codeMap[newCode] = 1;\n\n    const newCodeObj = {\n      code: newCode,\n      frozen: frozen.some((c) => c.code === newCode),\n      parent: findParent(parentLevel, root, newCode, spaces),\n      active: !line.includes(\"#disabled\"),\n      folded: line.includes(\"#folded\"),\n    };\n\n    if (line.includes(\"#irrelevant\")) {\n      const irrelevantString = line.split(\"#irrelevant(\")[1].split(\")\")[0];\n      newCodeObj.makes_irrelevant = irrelevantString.split(\",\");\n    }\n    if (line.includes(\"#color\")) {\n      let color = line.split(\"#color(\")[1].split(\")\")[0];\n      newCodeObj.color = standardizeColor(color);\n    }\n    updatedCodes.push(newCodeObj);\n  }\n\n  for (let code of frozen) {\n    if (updatedCodes.some((e) => e.code === code.code)) continue;\n    code.parent = \"\";\n    updatedCodes.push(code);\n  }\n\n  return [updatedCodes, duplicates];\n};\n\nconst findParent = (parentLevel, code, newCode, spaces) => {\n  // also updates parentLevel\n  let parent = code;\n  for (let pspaces of Object.keys(parentLevel)) {\n    pspaces = Number(pspaces);\n    if (spaces > pspaces) {\n      parent = parentLevel[pspaces];\n    } else {\n      delete parentLevel[pspaces];\n      parentLevel[spaces] = newCode;\n    }\n  }\n  parentLevel[spaces] = newCode;\n  return parent;\n};\n\nconst standardizeColor = (str) => {\n  if (!str) return \"#FFFFFF\";\n  // https://stackoverflow.com/questions/1573053/javascript-function-to-convert-color-names-to-hex-codes\n  const ctx = document.createElement(\"canvas\").getContext(\"2d\");\n  ctx.fillStyle = str.trim();\n  const color = ctx.fillStyle; // make lighter\n  return color;\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { blockEvents } from \"actions\";\nimport { textToCodes } from \"library/codebookManagement\";\nimport { Button, ButtonGroup, Dropdown, Form, Input, Popup, TextArea } from \"semantic-ui-react\";\n\nconst EditCodePopup = ({\n  codeMap,\n  code,\n  codes,\n  setCodes,\n  toggleActiveCode,\n  setChangeColor,\n  canAdd,\n}) => {\n  const dispatch = useDispatch();\n  const [open, setOpen] = useState(false);\n  const [popupContent, setPopupContent] = useState(null);\n\n  useEffect(() => {\n    dispatch(blockEvents(open));\n    return () => {\n      dispatch(blockEvents(false));\n    };\n  }, [dispatch, open]);\n\n  const buttonStyle = {\n    padding: \"0\",\n    margin: \"0\",\n    width: \"15px\",\n    borderRadius: \"0\",\n    minHeight: \"10px\",\n  };\n\n  const buttonContent = () => {\n    if (code === \"\") {\n      if (!canAdd) return null;\n      return (\n        <ButtonGroup fluid color=\"black\">\n          <Button content=\"Add codes\" onClick={() => addCodePopup(true)} style={buttonStyle} />;\n        </ButtonGroup>\n      );\n    }\n    return (\n      <ButtonGroup color=\"black\" attached fluid size=\"mini\" style={{ padding: \"0\", margin: \"0\" }}>\n        <Button\n          size=\"mini\"\n          icon={code.active && code.activeParent ? \"toggle on\" : \"toggle off\"}\n          onClick={() => toggleActiveCode(codes, code.code, !code.active, setCodes)}\n          style={{ ...buttonStyle, color: code.active && code.activeParent ? \"green\" : \"red\" }}\n        />\n        <Button\n          icon=\"arrow up\"\n          compact\n          size=\"mini\"\n          onClick={() => changePosition(\"up\")}\n          style={buttonStyle}\n        />\n        <Button\n          icon=\"arrow down\"\n          compact\n          size=\"mini\"\n          onClick={() => changePosition(\"down\")}\n          style={buttonStyle}\n        />\n\n        <Button\n          disabled={!canAdd}\n          icon=\"plus\"\n          compact\n          size=\"mini\"\n          onClick={() => addCodePopup(false)}\n          style={buttonStyle}\n        />\n\n        <Button\n          disabled={code.frozen}\n          icon=\"minus\"\n          compact\n          size=\"mini\"\n          onClick={rmCodePopup}\n          style={buttonStyle}\n        />\n        <Button icon=\"edit\" compact size=\"mini\" onClick={moveCodePopup} style={buttonStyle} />\n        {changeColorPopup()}\n      </ButtonGroup>\n    );\n  };\n\n  const changeColorPopup = () => {\n    if (!code.code && code.active == null) return null;\n\n    return (\n      <Button\n        size=\"mini\"\n        as={\"Input\"}\n        style={{\n          ...buttonStyle,\n          padding: \"10px 0px\",\n          background: code.color || \"white\",\n        }}\n        onInput={(e) => setChangeColor({ code: code.code, color: e.target.value })}\n        type=\"color\"\n        value={code.color || \"white\"}\n      />\n    );\n  };\n\n  const addCodePopup = (root) => {\n    setPopupContent(\n      <AddCodePopup\n        codeMap={codeMap}\n        code={root ? \"\" : code.code}\n        codes={codes}\n        setCodes={setCodes}\n        setOpen={setOpen}\n      />\n    );\n    setOpen(true);\n  };\n\n  const rmCodePopup = () => {\n    setPopupContent(\n      <RmCodePopup\n        codeMap={codeMap}\n        code={code.code}\n        codes={codes}\n        setCodes={setCodes}\n        setOpen={setOpen}\n      />\n    );\n    setOpen(true);\n  };\n\n  const moveCodePopup = () => {\n    setPopupContent(\n      <MoveCodePopup\n        codeMap={codeMap}\n        code={code.code}\n        codes={codes}\n        setCodes={setCodes}\n        setOpen={setOpen}\n        frozen={code.frozen}\n      />\n    );\n    setOpen(true);\n  };\n\n  const changePosition = (direction) => {\n    movePosition(codes, code, direction, setCodes);\n    setOpen(false);\n  };\n\n  return (\n    <Popup\n      inverted\n      size=\"mini\"\n      flowing\n      hoverable\n      mouseLeaveDelay={99999999}\n      open={open}\n      onClose={() => setOpen(false)}\n      trigger={buttonContent()}\n      style={{ padding: \"0\", margin: \"0\" }}\n    >\n      {popupContent}\n    </Popup>\n  );\n};\n\nconst movePosition = (codes, code, direction, setCodes) => {\n  const a = codes.findIndex((c) => c.code === code.code); // position of selected code\n  let b = null; // position of switchSibling\n\n  const codeParent = codes[a].parent;\n  for (let i = 0; i < codes.length; i++) {\n    if (i === a) continue;\n    if (codes[i].parent !== codeParent) continue;\n\n    if (direction === \"down\") {\n      if (i > a && (b === null || b > i)) b = i;\n    }\n    if (direction === \"up\") {\n      if (i < a && (b === null || b < i)) b = i;\n    }\n  }\n  if (b === null) return null;\n\n  const newCodes = [...codes];\n  const temp = newCodes[a];\n  newCodes[a] = newCodes[b];\n  newCodes[b] = temp;\n\n  setCodes(newCodes);\n};\n\nconst AddCodePopup = ({ codeMap, code, codes, setCodes, setOpen }) => {\n  const [alreadyExists, setAlreadyExists] = useState([]);\n  const [textInput, setTextInput] = useState(\"\");\n\n  const addCode = (text) => {\n    if (text === \"\") return null;\n    const [updatedCodes, duplicates] = textToCodes(\n      text,\n      code,\n      codes,\n      codes.filter((c) => c.frozen)\n    );\n    if (duplicates.length > 0) {\n      setAlreadyExists(duplicates);\n      return null;\n    }\n    setCodes(updatedCodes);\n    setOpen(false);\n  };\n\n  return (\n    <div style={{ margin: \"1em\", height: \"200px\" }}>\n      <p>\n        {code === \"\" ? (\n          \"Create new codes\"\n        ) : (\n          <>\n            Add codes under <b>{code}</b>\n          </>\n        )}\n        <Button floated=\"right\" compact size=\"mini\" icon=\"delete\" onClick={() => setOpen(false)} />\n      </p>\n      <Form onSubmit={() => addCode(textInput)}>\n        <Popup\n          open={alreadyExists.length > 0}\n          trigger={\n            <TextArea\n              autoFocus\n              onChange={(e, d) => {\n                setTextInput(d.value);\n                setAlreadyExists([]);\n              }}\n              value={textInput}\n              style={{ height: \"130px\" }}\n              placeholder=\"Every line becomes a new code\"\n            />\n          }\n        >\n          Duplicate labels: <br />\n          <b>{alreadyExists.join(\", \")}</b>\n        </Popup>\n        <Button fluid content=\"Create\" onClick={() => addCode(textInput)} />\n      </Form>\n    </div>\n  );\n};\n\nconst RmCodePopup = ({ codeMap, code, codes, setCodes, setOpen }) => {\n  const rmCode = (keepChildren) => {\n    let updatedCodes = codes.filter((ucode) => ucode.code !== code);\n\n    const children = [];\n    if (!keepChildren) {\n      getAllChildren(codeMap, code, children);\n      updatedCodes = updatedCodes.filter((ucode) => !children.includes(ucode.code));\n    } else {\n      updatedCodes = updatedCodes.map((ucode) => {\n        if (codeMap[code].children.includes(ucode.code)) ucode.parent = codeMap[code].parent;\n        return ucode;\n      });\n    }\n\n    //const removeCodes = [code, ...children];\n\n    setCodes(updatedCodes);\n    setOpen(false);\n  };\n\n  return (\n    <div style={{ margin: \"1em\" }}>\n      <p>\n        Delete <b>{code}</b>?\n      </p>\n      <ButtonGroup fluid>\n        {codeMap[code].children.length > 0 ? (\n          <>\n            <Button color=\"red\" onClick={() => rmCode(false)}>\n              Yes\n            </Button>\n            <Button color=\"red\" onClick={() => rmCode(true)}>\n              Yes, but keep children\n            </Button>\n          </>\n        ) : (\n          <Button color=\"red\" onClick={() => rmCode(true)}>\n            Yes\n          </Button>\n        )}\n        <Button onClick={() => setOpen(false)}>Cancel</Button>\n      </ButtonGroup>\n    </div>\n  );\n};\n\nconst MoveCodePopup = ({ codeMap, code, codes, setCodes, setOpen, frozen }) => {\n  const [newParent, setNewParent] = useState(codeMap[code].parent);\n  const [textInput, setTextInput] = useState(code);\n\n  const parentOptions = [\"ROOT\", ...getAllParentOptions(codeMap, code)]; // fills parents array\n\n  const mvCode = (newCode, newParent) => {\n    if (newCode !== code) {\n      if (newCode === \"\") return null;\n      if (codeMap[newCode]) return null;\n    }\n    let codeIsNew = true; // if code was only a parent, it isn't yet in the edgelist\n    let updatedCodes = codes.map((ucode) => {\n      if (ucode.code === code) {\n        ucode.code = newCode;\n        ucode.parent = newParent;\n        codeIsNew = false;\n      }\n      if (ucode.parent === code) {\n        ucode.parent = newCode;\n      }\n      return ucode;\n    });\n    if (codeIsNew) codes.push({ code: newCode, parent: newParent, active: true });\n    codes = codes.filter((code) => code.parent !== \"ROOT\");\n\n    setCodes(updatedCodes);\n    setOpen(false);\n  };\n\n  return (\n    <div style={{ margin: \"1em\" }}>\n      <p>\n        {frozen ? \"Change parent\" : \"Change parent and/or label\"}\n        <Button floated=\"right\" compact size=\"mini\" icon=\"delete\" onClick={() => setOpen(false)} />\n      </p>\n\n      <Form onSubmit={() => mvCode(textInput, newParent)}>\n        <Form.Field inline>\n          <label style={{ color: \"white\" }}>Parent:</label>\n          <Dropdown\n            value={newParent}\n            style={{ minWidth: \"10em\" }}\n            options={parentOptions.map((parent, i) => {\n              return {\n                key: parent,\n                value: parent,\n                text: parent,\n              };\n            })}\n            search\n            selectOnNavigation={false}\n            minCharacters={0}\n            autoComplete={\"on\"}\n            onChange={(e, d) => {\n              setNewParent(d.value);\n            }}\n          />\n        </Form.Field>\n        {frozen ? null : (\n          <Form.Field inline>\n            <label style={{ color: \"white\" }}>Code:</label>\n            <Input\n              autoFocus\n              onChange={(e, d) => {\n                setTextInput(d.value);\n              }}\n              value={textInput}\n              placeholder=\"new code\"\n            />\n          </Form.Field>\n        )}\n        <Button fluid onClick={() => mvCode(textInput, newParent)}>\n          Change\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nconst getAllChildren = (codeMap, code, children) => {\n  for (const child of codeMap[code].children) {\n    children.push(child);\n    getAllChildren(codeMap, child, children);\n  }\n};\n\nconst getAllParentOptions = (codeMap, code) => {\n  const children = [];\n  getAllChildren(codeMap, code, children);\n  return Object.keys(codeMap).filter((parent) => !children.includes(parent) && parent !== code);\n};\n\nexport default EditCodePopup;\n","import React, { useEffect, useState } from \"react\";\nimport { Button, Icon, Table, Popup, Modal, TextArea, Dropdown, Label } from \"semantic-ui-react\";\nimport { codeBookEdgesToMap, getCodeTreeArray } from \"ccs-annotator-client\";\nimport EditCodePopup from \"./EditCodePopup\";\nimport { textToCodes, ctaToText } from \"library/codebookManagement\";\nimport { blockEvents } from \"actions\";\nimport Help from \"./Help\";\nimport { useDispatch } from \"react-redux\";\n\n// NOTE TO SELF: make toggle on/off and edit optional. Toggle on/off makes sense for\n// imported annotations. Edit for making a codebook\n// problem: how to deal with renaming existing codes. (maybe just freeze used codes from editing)\n\n/**\n * Display an editable codebook\n * @param {Array} codes an array of strings, or an array of objects with at least the key 'code'\n * @param {Function} setCodes the callback for setting codes state\n * @param {Array} questions Optional, an array with questions. This enables the 'makes irrelevant' column\n */\nconst CodesEditor = ({ codes, setCodes, questions, question, canAdd = true, height = \"100%\" }) => {\n  const [codeMap, setCodeMap] = useState({});\n  const [codeTreeArray, setCodeTreeArray] = useState([]);\n  const [changeColor, setChangeColor] = useState(null);\n\n  const showColors = true;\n\n  useEffect(() => {\n    if (!codes || codes.length === 0) {\n      setCodeTreeArray([]);\n      return;\n    }\n    const cm = codeBookEdgesToMap(codes);\n    setCodeMap(cm);\n    setCodeTreeArray(getCodeTreeArray(cm, showColors));\n  }, [codes, setCodeTreeArray, setCodeMap, showColors]);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (changeColor) {\n        changeCodeColor(changeColor.code, changeColor.color, codes, setCodes);\n      }\n      setChangeColor(null);\n    }, 500);\n    return () => clearTimeout(timer);\n  }, [codes, setCodes, changeColor, setChangeColor]);\n\n  const formatCode = (code) => {\n    const color = code.active == null || code.active ? \"black\" : \"grey\";\n    if (code.level === 0) return { fontWeight: \"bold\", fontSize: \"15px\", color };\n    if (code.level === 1) return { fontSize: \"12px\", color };\n    if (code.level === 2) return { fontSize: \"12px\", color };\n    return { fontSize: \"10px\", color };\n  };\n\n  const onChangeBranching = (code, values) => {\n    const newCodes = [...codes];\n    const makes_irrelevant = [];\n    const required_for = [];\n\n    for (let v of values) {\n      const [type, value] = v.split(/_(.+)/);\n      if (type === \"Skip\") makes_irrelevant.push(value);\n      if (type === \"Required for\") required_for.push(value);\n    }\n\n    const updateCode = newCodes.find((nc) => nc.code === code);\n    updateCode.makes_irrelevant = makes_irrelevant;\n    updateCode.required_for = required_for.filter((rf) => !makes_irrelevant.includes(rf));\n    setCodes(newCodes);\n  };\n\n  return (\n    <div>\n      <Table\n        columns={3}\n        unstackable\n        textAlign=\"left\"\n        style={{ border: \"0\", boxShadow: \"0\", width: \"100%\" }}\n      >\n        <Table.Header className=\"codes-thead\"></Table.Header>\n        <Table.Body\n          style={{ height: height, margin: \"0\", overflow: \"visible\" }}\n          className=\"codes-tbody\"\n        >\n          <Table.Row className=\"codes-tr\">\n            <Table.HeaderCell textAlign=\"center\">\n              <Icon name=\"settings\" />\n            </Table.HeaderCell>\n            <Table.HeaderCell style={{ position: \"relative\", paddingLeft: \"0.5em\" }}>\n              Codebook\n            </Table.HeaderCell>\n            <Table.HeaderCell style={{ textAlign: \"right\" }}>\n              <div hidden={question == null} style={{ marginRight: \"18px\" }}>\n                Branching\n                <Help\n                  header=\"Make other questions conditional on this answer\"\n                  texts={[\n                    `Certain answers can make other questions irrelevant.\n           For example, you might first ask if a text is relevant (for your study).\n           If it isn't, you don't need your coder to waste time answering the remaining questions.\n           In this case, you can set branching to \"Skip all\".`,\n                    `You can also let an answer \"Skip a specific questions\", so that certain follow-up questions\n           are only asked if certain conditions are met.`,\n                    `Alternatively, you can specify that an answer is \"Required for a specific question\" (which is just shorthand for Skip for all other answers)`,\n                    `It is recommended to implement branching as a final step, and to use the preview to test whether it works as intended`,\n                  ]}\n                />\n              </div>\n            </Table.HeaderCell>\n          </Table.Row>\n          {[...codeTreeArray].map((code, i) => {\n            if (code.foldToParent) return null;\n\n            return (\n              <Table.Row className=\"codes-tr\" key={i} style={{}}>\n                <Table.Cell\n                  className=\"codes-td\"\n                  width={1}\n                  style={{\n                    border: \"1px solid black\",\n                    padding: \"0\",\n                    margin: \"0\",\n                    background: \"#1B1C1D\",\n\n                    borderRight: code.active == null ? null : \"1px solid black\",\n                  }}\n                >\n                  <EditCodePopup\n                    codeMap={codeMap}\n                    code={code}\n                    codes={codes}\n                    setCodes={setCodes}\n                    toggleActiveCode={toggleActiveCode}\n                    setChangeColor={setChangeColor}\n                    canAdd={canAdd}\n                  />\n                </Table.Cell>\n\n                <Table.Cell\n                  className=\"codes-td\"\n                  style={{\n                    paddingLeft: \"0.5em\",\n                    borderTop: code.level === 0 ? \"1px solid black\" : null,\n                    //borderBottom: code.level === 0 ? \"1px solid black\" : null,\n                  }}\n                >\n                  <span style={{ ...formatCode(code), marginLeft: `${1 * code.level}em` }}>\n                    {code.code}\n                    {code.totalChildren === 0 || code.active == null ? null : (\n                      <>\n                        <Icon\n                          style={{\n                            padding: \"0\",\n                            margin: \"0\",\n                            marginLeft: \"1em\",\n                            cursor: \"pointer\",\n                          }}\n                          onClick={() =>\n                            toggleFoldCode(\n                              codes,\n                              code.code,\n                              code.folded != null && code.folded,\n                              setCodes\n                            )\n                          }\n                          name={code.folded ? \"caret right\" : \"dropdown\"}\n                        />\n                        {!code.folded ? null : (\n                          <span\n                            style={{ color: \"grey\" }}\n                          >{`${code.totalActiveChildren}/${code.totalChildren}`}</span>\n                        )}\n                      </>\n                    )}\n                  </span>\n                </Table.Cell>\n                <Table.Cell\n                  className=\"codes-td\"\n                  style={{\n                    textAlign: \"right\",\n                    paddingLeft: \"0.5em\",\n\n                    borderTop: code.level === 0 ? \"1px solid black\" : null,\n                    //borderBottom: code.level === 0 ? \"1px solid black\" : null,\n                  }}\n                >\n                  {branchingDropdown(question, questions, code, onChangeBranching)}\n                </Table.Cell>\n              </Table.Row>\n            );\n          })}\n          <EditCodePopup\n            codeMap={codeMap}\n            code={\"\"}\n            codes={codes}\n            setCodes={setCodes}\n            setChangeColor={setChangeColor}\n            canAdd={canAdd}\n          >\n            <Icon name=\"cog\" style={{ marginLeft: \"0.7em\", cursor: \"pointer\" }} />\n          </EditCodePopup>\n          <PlainTextEditor codes={codes} codeTreeArray={codeTreeArray} setCodes={setCodes} />\n        </Table.Body>\n      </Table>\n    </div>\n  );\n};\n\n// const makesIrrelevantHeader = (questions) => {\n//   if (!questions) return null;\n\n//   return (\n//     <>\n//       Makes irrelevant\n//       <Help\n//         header=\"Make other questions conditional on this answer\"\n//         texts={[\n//           `Certain answers can make other questions irrelevant.\n//            For example, you might first ask if a text is relevant (for your study).\n//            If it isn't, you don't need your coder to waste time answering the remaining questions.\n//            In this case, you can set \"makes irrelevant\" to \"remaining\". All remaning questions in the current\n//            unit will then be annotated with the value IRRELEVANT`,\n//           `You can also let an answer make specific other questions irrelevant.\n//            This way you can implement simple branching patterns, where certain follow-up questions\n//            are only asked if certain conditions are met.`,\n//           `It is recommended to setup branching after the name and order of questions is finalized.\n//            Branching does changes automatically when name/order changes, but always double check.`,\n//         ]}\n//       />\n//     </>\n//   );\n// };\n\nconst branchingDropdown = (question, questions, code, onChangeBranching) => {\n  if (!questions) return null;\n\n  const options = makesIrrelevantOptions(question, questions, code);\n  const makes_irrelevant_values = code.makes_irrelevant.map((mi) => \"Skip_\" + mi);\n  const required_for_values = code.required_for.map((rf) => \"Required for_\" + rf);\n  const values = [...makes_irrelevant_values, ...required_for_values];\n\n  const validValues = values.filter((v) => options.some((o) => o.value === v));\n  if (validValues.length < values.length) onChangeBranching(code.code, validValues);\n\n  return (\n    <Dropdown\n      multiple\n      header=\"Determine how this answer affects remaining questions\"\n      direction=\"left\"\n      options={options}\n      value={validValues}\n      renderLabel={renderMakesIrrelevantLabel}\n      onChange={(e, d) => {\n        let values = d.value;\n        onChangeBranching(code.code, values);\n      }}\n      style={{ paddingRight: \"0\", textAlign: \"right\" }}\n    />\n  );\n};\n\nconst makesIrrelevantOptions = (question, questions, code) => {\n  const options = [];\n\n  if (!code.required_for.includes(\"REMAINING\"))\n    options.push({\n      key: \"skipremaining\",\n      content: (\n        <>\n          <Label color=\"red\">Skips</Label>\n          All remaining questions\n        </>\n      ),\n      value: \"Skip_REMAINING\",\n      color: \"red\",\n    });\n\n  // if 'all' is selected, don't show the other options\n  //if (code.makes_irrelevant.includes(\"remaining\")) return options;\n  const n = questions.length || 0;\n  for (let i = 0; i < n; i++) {\n    if (questions[i].name === question.name) continue;\n    if (!code.required_for.includes(questions[i].name)) {\n      options.push({\n        key: \"skip\" + i,\n        content: (\n          <>\n            <Label color=\"red\">Skips</Label>\n            {questions[i].name}\n          </>\n        ),\n        color: \"red\",\n        value: \"Skip_\" + questions[i].name,\n      });\n    }\n  }\n\n  if (!code.makes_irrelevant.includes(\"REMAINING\"))\n    options.push({\n      key: \"requiredremaining\",\n      content: (\n        <>\n          <Label color=\"green\">Required for</Label>\n          All remaining questions\n        </>\n      ),\n      value: \"Required for_REMAINING\",\n      color: \"green\",\n    });\n\n  for (let i = 0; i < n; i++) {\n    if (questions[i].name === question.name) continue;\n    if (!code.makes_irrelevant.includes(questions[i].name)) {\n      options.push({\n        key: \"required\" + i,\n        content: (\n          <>\n            <Label color=\"green\">Required for</Label>\n            {questions[i].name}\n          </>\n        ),\n        color: \"green\",\n        value: \"Required for_\" + questions[i].name,\n      });\n    }\n  }\n\n  return options;\n};\n\nconst renderMakesIrrelevantLabel = (label) => ({\n  content: label.value.replace(\"Skip_\", \"\").replace(\"Required for_\", \"\"),\n  style: {\n    fontSize: \"12px\",\n    padding: \"0\",\n    color: label.color,\n    background: \"white\",\n    border: \"0\",\n    boxShadow: \"none\",\n  },\n});\n\nconst PlainTextEditor = ({ codes, codeTreeArray, setCodes }) => {\n  const dispatch = useDispatch();\n  const [open, setOpen] = useState(false);\n  const [textInput, setTextInput] = useState(\"\");\n  const [alreadyExists, setAlreadyExists] = useState([]);\n\n  useEffect(() => {\n    dispatch(blockEvents(open));\n    return () => {\n      dispatch(blockEvents(false));\n    };\n  }, [dispatch, open]);\n\n  useEffect(() => {\n    setTextInput(ctaToText(codeTreeArray, 2, 40));\n  }, [codeTreeArray]);\n\n  const onSave = () => {\n    const [updatedCodes, duplicates] = textToCodes(\n      textInput,\n      \"\",\n      [],\n      codes.filter((c) => c.frozen)\n    );\n    if (duplicates.length > 0) {\n      setAlreadyExists(duplicates);\n      return null;\n    }\n    setCodes(updatedCodes);\n    setOpen(false);\n  };\n\n  return (\n    <Modal\n      on=\"click\"\n      open={open}\n      style={{ width: \"700px\", maxWidth: \"100%\", overflowX: \"auto\", padding: \"0.3em\" }}\n      trigger={\n        <Button\n          fluid\n          onClick={() => setOpen(true)}\n          style={{ padding: \"0.3em 1em\", borderRadius: \"0\" }}\n        >\n          Plain text editor\n        </Button>\n      }\n    >\n      <Popup\n        open={alreadyExists.length > 0}\n        trigger={\n          <TextArea\n            autoFocus\n            rows={20}\n            onChange={(e, d) => {\n              setTextInput(d.value);\n            }}\n            value={textInput}\n            style={{ fontFamily: \"monospace\", height: \"100%\", width: \"100%\" }}\n            placeholder=\"Every line is a code\\n\\nindent codes to make a tree, like\\nparent\\n  child\\n    grandchild\\n\\nAdd colors with:\\ncode   #color(red)\"\n          />\n        }\n      >\n        Duplicate labels: <br />\n        <b>{alreadyExists.join(\", \")}</b>\n      </Popup>\n\n      <Modal.Actions>\n        <Button color=\"black\" onClick={() => setOpen(false)}>\n          Cancel\n        </Button>\n        <Button content=\"Save changes\" onClick={onSave} positive />\n      </Modal.Actions>\n    </Modal>\n  );\n};\n\nconst changeCodeColor = (code, color, codes, setCodes) => {\n  let updatedCodes = codes.map((ucode) => {\n    if (ucode.code === code) ucode.color = color;\n    return ucode;\n  });\n  setCodes(updatedCodes);\n};\n\nconst toggleActiveCode = (codes, code, active, setCodes) => {\n  let updatedCodes = [...codes];\n\n  const selectedCode = updatedCodes.find((ucode) => ucode.code === code);\n\n  // there is a possibility that code.code does not exist, if it only existed as a parent\n  // this is ideally resolved upstream (when creating the codebook), but as a plan B it can be added here\n  if (selectedCode) {\n    selectedCode.active = active;\n  } else updatedCodes.push({ code: code, parent: \"\", active: true });\n\n  setCodes(updatedCodes);\n};\n\nconst toggleFoldCode = (codes, code, folded, setCodes) => {\n  let updatedCodes = [...codes];\n\n  const selectedCode = updatedCodes.find((ucode) => ucode.code === code);\n\n  // there is a possibility that code.code does not exist, if it only existed as a parent\n  // this is ideally resolved upstream (when creating the codebook), but as a plan B it can be added here\n  if (selectedCode) {\n    selectedCode.folded = !folded;\n  } else updatedCodes.push({ code: code, parent: \"\", active: true, folded: !folded });\n\n  setCodes(updatedCodes);\n};\n\nexport default CodesEditor;\n","import { blockEvents } from \"actions\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport {\n  Menu,\n  Segment,\n  Button,\n  Popup,\n  Form,\n  Input,\n  Checkbox,\n  Accordion,\n  Icon,\n} from \"semantic-ui-react\";\n\nconst VariableMenu = ({\n  children,\n  variables,\n  setVariables,\n  index,\n  setIndex,\n  newVariableDefaults,\n}) => {\n  const [open, setOpen] = useState(false);\n  const onAdd = () => {\n    const newVariables = {\n      ...newVariableDefaults,\n      name: uniqueName(newVariableDefaults.name, variables, null),\n    };\n    variables.push(newVariables);\n    setVariables(variables);\n  };\n\n  const importedCode = () => {\n    if (variables[index].enabled == null) return null;\n    return (\n      <h4>\n        <i>Imported annotations</i>\n      </h4>\n    );\n  };\n\n  return (\n    <div>\n      <Menu attached=\"top\" style={{ width: \"100%\", overflowX: \"auto\" }}>\n        {Array(variables.length)\n          .fill(0)\n          .map((v, i) => {\n            return (\n              <Menu.Item\n                onClick={(e, d) => setIndex(i)}\n                active={index === i}\n                style={{ padding: \"0 0\", position: \"relative\" }}\n              >\n                <div>\n                  <div\n                    style={{\n                      padding: \"0 0.5em\",\n                      height: \"100%\",\n                      cursor: \"pointer\",\n                    }}\n                  >\n                    {variables[i].enabled != null ? (\n                      <Checkbox\n                        checked={variables[i].enabled}\n                        onChange={() => {\n                          variables[i].enabled = !variables[i].enabled;\n                          setVariables(variables);\n                        }}\n                        label={variables[i].name}\n                        style={{ margin: \"5px 5px 20px -5px\" }}\n                      />\n                    ) : (\n                      <div style={{ margin: \"5px 5px 20px 0px\" }}>{variables[i].name}</div>\n                    )}\n                    <div style={{ position: \"absolute\", bottom: \"0\" }}>\n                      <MoveButtons\n                        i={i}\n                        variables={variables}\n                        setVariables={setVariables}\n                        index={index}\n                        setIndex={setIndex}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </Menu.Item>\n            );\n          })}\n        <Menu.Item\n          icon=\"plus\"\n          attached=\"right\"\n          position=\"right\"\n          style={{ background: \"lightblue\" }}\n          onClick={onAdd}\n        />\n      </Menu>\n      <Segment attached=\"bottom\" style={{ padding: \"1em\" }}>\n        <DeleteButton\n          variables={variables}\n          setVariables={setVariables}\n          index={index}\n          setIndex={setIndex}\n        />\n        <Accordion>\n          <Accordion.Title active={open} onClick={() => setOpen(!open)}>\n            <i style={{ color: \"blue\" }}>{open ? \"Hide\" : \"Show\"} settings</i>{\" \"}\n            <Icon name=\"dropdown\" />\n          </Accordion.Title>\n          <Accordion.Content active={open}>\n            {\" \"}\n            {importedCode()}\n            <ChangeName variables={variables} setVariables={setVariables} index={index} />\n            {children}\n          </Accordion.Content>\n        </Accordion>\n      </Segment>\n    </div>\n  );\n};\n\nconst setNewName = (name, variables, index, setVariables) => {\n  if (variables[index].name === name) return;\n  const oldname = variables[index].name;\n  variables[index].name = uniqueName(name, variables, index);\n  processNameChange(variables, oldname, variables[index].name);\n  setVariables(variables);\n};\n\nconst ChangeName = ({ variables, setVariables, index }) => {\n  const [delayedName, setDelayedName] = useState(\"\");\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (variables.length === 0) return;\n    if (!delayedName || delayedName === variables[index].name) return;\n    if (variables[index].name === delayedName) return;\n    const timer = setTimeout(() => {\n      setNewName(delayedName.trim(), variables, index, setVariables);\n    }, 500);\n    return () => clearTimeout(timer);\n  }, [delayedName, variables, index, setVariables]);\n\n  useEffect(() => {\n    if (variables.length === 0) return;\n    setDelayedName(variables[index].name);\n  }, [variables, index, setDelayedName]);\n\n  if (variables.length === 0) return null;\n\n  return (\n    <Form style={{ width: \"50%\" }}>\n      <Form.Group grouped>\n        <label>Name</label> <span style={{ fontSize: \"10px\" }}>(keep it short)</span>\n        <Form.Field>\n          <Input\n            disabled={variables[index].enabled != null}\n            value={delayedName}\n            style={{ width: \"150px\" }}\n            onFocus={() => dispatch(blockEvents(true))}\n            onBlur={() => dispatch(blockEvents(false))}\n            onChange={(e, d) => setDelayedName(d.value)}\n          />\n        </Form.Field>{\" \"}\n      </Form.Group>\n    </Form>\n  );\n};\n\nconst DeleteButton = ({ variables, setVariables, index, setIndex }) => {\n  const [deleteOpen, setDeleteOpen] = useState(false);\n\n  const onDelete = () => {\n    const newVariables = [];\n    for (let i = 0; i < variables.length; i++) {\n      if (i !== index) newVariables.push(variables[i]);\n    }\n\n    setVariables(newVariables);\n    setDeleteOpen(false);\n    setIndex(Math.max(0, index - 1));\n  };\n\n  if (variables.length <= 1) return null;\n  if (variables[index].enabled != null) return null;\n\n  return (\n    <Popup\n      hoverable\n      open={deleteOpen}\n      onClose={() => setDeleteOpen(false)}\n      trigger={\n        <Button\n          icon=\"delete\"\n          floated=\"right\"\n          style={{ background: \"red\", zIndex: 100 }}\n          onClick={() => setDeleteOpen(!deleteOpen)}\n        />\n      }\n    >\n      <p>\n        Delete <b>{variables[index].name}</b>?\n      </p>\n\n      <Button style={{ background: \"red\" }} onClick={onDelete}>\n        yes please\n      </Button>\n    </Popup>\n  );\n};\n\nconst MoveButtons = ({ i, variables, setVariables, index, setIndex }) => {\n  const onMove = (direction, i) => {\n    const j = direction === \"left\" ? Math.max(0, i - 1) : Math.min(variables.length - 1, i + 1);\n    const temp = variables[i];\n\n    variables[i] = variables[j];\n    variables[j] = temp;\n\n    setVariables(variables);\n    setIndex(j);\n  };\n\n  if (index !== i) return null;\n  return (\n    <Button.Group>\n      {i > 0 ? (\n        <Button\n          icon=\"arrow left\"\n          onClick={(e) => {\n            e.stopPropagation();\n            onMove(\"left\", i);\n          }}\n          style={{\n            borderRadius: \"0\",\n            padding: \"0em\",\n            background: \"rgba(0,0,0,0)\",\n          }}\n        />\n      ) : null}\n      {i < variables.length - 1 ? (\n        <Button\n          icon=\"arrow right\"\n          onClick={(e) => {\n            e.stopPropagation();\n            onMove(\"right\", i);\n          }}\n          style={{\n            borderRadius: \"0\",\n            padding: \"0em\",\n            background: \"rgba(0,0,0,0)\",\n          }}\n        />\n      ) : null}\n    </Button.Group>\n  );\n};\n\nconst uniqueName = (newName, variables, index) => {\n  let uniqueNewName = newName;\n  let i = 2;\n\n  const existingNames = [\"REMAINING\"];\n  for (let i = 0; i < variables.length; i++) {\n    if (index !== null && i === index) continue;\n    existingNames.push(variables[i].name);\n  }\n\n  while (existingNames.includes(uniqueNewName)) {\n    uniqueNewName = newName + ` ${i}`;\n    i++;\n  }\n  return uniqueNewName;\n};\n\nconst processNameChange = (variables, oldname, newname) => {\n  for (let v of variables) {\n    v.codes = v.codes.map((c) => {\n      if (c.makes_irrelevant)\n        c.makes_irrelevant = c.makes_irrelevant.map((mi) => (mi === oldname ? newname : mi));\n      if (c.required_for)\n        c.required_for = c.required_for.map((rf) => (rf === oldname ? newname : rf));\n      return c;\n    });\n  }\n};\n\nexport default VariableMenu;\n","import React, { useEffect, useState } from \"react\";\n\nimport { Form, Radio, TextArea, Grid, Dropdown } from \"semantic-ui-react\";\n\nimport Help from \"./Help\";\nimport CodesEditor from \"./CodesEditor\";\nimport { standardizeCodes } from \"ccs-annotator-client\";\nimport VariableMenu from \"./VariableMenu\";\n\nconst questionDefaultSettings = {\n  type: \"select code\",\n  name: \"Question name\",\n  question: \"The question itself\",\n  codes: [\"No\", \"Skip\", \"Yes\"],\n};\n\nconst QuestionTaskSettings = ({ taskSettings, setTaskSettings, unitSettings }) => {\n  const [questionIndex, setQuestionIndex] = useState(0);\n\n  const setQuestions = (variables) => {\n    setTaskSettings({\n      ...taskSettings,\n      questions: { settings: taskSettings.questions.settings, questions: variables },\n    });\n  };\n\n  return (\n    <VariableMenu\n      variables={taskSettings.questions.questions}\n      setVariables={setQuestions}\n      index={questionIndex}\n      setIndex={setQuestionIndex}\n      newVariableDefaults={questionDefaultSettings}\n    >\n      <QuestionForm\n        taskSettings={taskSettings}\n        setTaskSettings={setTaskSettings}\n        unitSettings={unitSettings}\n        questionIndex={questionIndex}\n      />{\" \"}\n    </VariableMenu>\n  );\n};\n\nconst QuestionForm = ({ taskSettings, setTaskSettings, unitSettings, questionIndex }) => {\n  const questions = taskSettings.questions.questions;\n\n  const setQuestionForm = (value) => {\n    const newTaskSettings = { ...taskSettings };\n    const newValue = { ...value };\n\n    newTaskSettings.questions.questions[questionIndex] = newValue;\n    setTaskSettings(newTaskSettings);\n  };\n\n  return (\n    <QuestionFormSettings\n      questionForm={questions[questionIndex]}\n      setQuestionForm={setQuestionForm}\n      setTaskSettings={setTaskSettings}\n      questions={questions}\n      questionIndex={questionIndex}\n      unitSettings={unitSettings}\n    />\n  );\n};\n\nconst QuestionFormSettings = ({ questionForm, setQuestionForm, questions, unitSettings }) => {\n  const [delayed, setDelayed] = useState(\"\");\n  const [warn, setWarn] = useState([]);\n\n  useEffect(() => {\n    if (!delayed) return;\n    if (questionForm.question === delayed.question) return;\n    const timer = setTimeout(() => {\n      // if (questionForm.name !== delayed.name)\n      //   updateRelevanceBranching(questionForm.name, delayed.name, setTaskSettings);\n      setQuestionForm({ ...questionForm, name: delayed.name, question: delayed.question });\n    }, 500);\n    return () => clearTimeout(timer);\n  }, [delayed, questionForm, setQuestionForm]);\n\n  useEffect(() => {\n    if (!questionForm) return;\n    let newWarn = [];\n\n    const hasCodeRef = questionForm.question.search(\"\\\\[code\\\\]\") >= 0;\n\n    if (hasCodeRef && unitSettings?.unitSelection === \"allTextUnits\")\n      newWarn.push(\n        \"Referring to a specific code with [code] is only possible if coding units are annotations\"\n      );\n\n    setWarn(newWarn);\n    setDelayed({ name: questionForm.name, question: questionForm.question });\n  }, [setDelayed, questionForm, setWarn, unitSettings]);\n\n  const codesEditor = () => {\n    //if (questionForm.type !== \"search code\" && questionForm.type !== \"select code\") return null;\n    return (\n      <CodesEditor\n        codes={standardizeCodes(questionForm.codes)}\n        setCodes={(newCodes) => setQuestionForm({ ...questionForm, codes: newCodes })}\n        questions={questions}\n        question={questionForm}\n      />\n    );\n  };\n\n  if (!questionForm) return null;\n  return (\n    <Form>\n      <Form.Group grouped>\n        <label>\n          Question\n          <Help\n            header={\"Referring to annotation codes in a question\"}\n            texts={[\n              \"If unit selection is based on span annotations, you can also use the tag [code]. This will be replaced by the code label of the annotation\",\n            ]}\n          />\n        </label>\n        {warn.length > 0 ? <Help type=\"warn\" header=\"\" texts={warn} /> : null}\n        <Form.Field>\n          <TextArea\n            value={delayed.question}\n            onChange={(e, d) => setDelayed({ ...delayed, question: d.value })}\n          />\n        </Form.Field>\n      </Form.Group>\n\n      <Form.Group grouped>\n        <label>Type of answer</label>\n        <Form.Field>\n          <Radio\n            value=\"search code\"\n            label=\"Select code from search box\"\n            checked={questionForm.type === \"search code\"}\n            onChange={() => setQuestionForm({ ...questionForm, type: \"search code\" })}\n          />\n        </Form.Field>\n        <Form.Field>\n          <Radio\n            value=\"select code\"\n            label=\"Select code from buttons\"\n            checked={questionForm.type === \"select code\"}\n            onChange={() => setQuestionForm({ ...questionForm, type: \"select code\" })}\n          />\n        </Form.Field>\n\n        <Form.Field>\n          <Radio\n            value=\"annotinder\"\n            label=\"Annotinder (swipe left/right/up)\"\n            checked={questionForm.type === \"annotinder\"}\n            onChange={() => setQuestionForm({ ...questionForm, type: \"annotinder\" })}\n          />\n        </Form.Field>\n      </Form.Group>\n      <br />\n      {/* <Form.Group grouped>\n        <label>Type of answer</label>\n        <Form.Field>\n          <Dropdown\n            options={questionForm.codes.map((code) => ({ key: code, text: code, value: code }))}\n            placeholder=\"answers that should \"\n            fluid\n            multiple\n            selection\n          />\n        </Form.Field>\n      </Form.Group> */}\n      <br />\n      <AnnotinderEditor questionForm={questionForm} setQuestionForm={setQuestionForm} />\n      <div style={{ margin: \"-1em\" }}>{codesEditor()}</div>\n    </Form>\n  );\n};\n\nconst AnnotinderEditor = ({ questionForm, setQuestionForm }) => {\n  const [swipes, setSwipes] = useState({ left: null, up: null, right: null });\n\n  useEffect(() => {\n    // if there are not yet any .swipe keys, read first 3 codes as defaults\n    if (questionForm.type !== \"annotinder\") return null;\n    const newCodes = [...questionForm.codes];\n    let firstTime = true;\n    for (let code of newCodes) if (code?.swipe) firstTime = false;\n    if (!firstTime) return null;\n    const directions = [\"left\", \"up\", \"right\"];\n    for (let i = 0; i < 3; i++) {\n      if (newCodes.length > i) {\n        if (typeof newCodes[i] === \"object\") {\n          newCodes[i] = { ...newCodes[i], swipe: directions[i] };\n        } else newCodes[i] = { code: newCodes[i], swipe: directions[i] };\n      }\n    }\n    setQuestionForm({ ...questionForm, codes: newCodes });\n  }, [questionForm, setQuestionForm]);\n\n  useEffect(() => {\n    const getSwipeCode = (direction) => {\n      return questionForm.codes.find((code) => {\n        if (typeof code !== \"object\") return false;\n        return code.swipe && code.swipe === direction;\n      });\n    };\n    const left = getSwipeCode(\"left\") || null;\n    const up = getSwipeCode(\"up\") || null;\n    const right = getSwipeCode(\"right\") || null;\n    setSwipes({ left, up, right });\n  }, [questionForm, setSwipes]);\n\n  const onSelect = (direction, selected) => {\n    const newCodes = questionForm.codes.map((code) => {\n      const newcode = typeof code !== \"object\" ? { code } : { ...code };\n      if (newcode.code === selected) {\n        return { ...newcode, swipe: direction };\n      } else {\n        if (newcode.swipe && newcode.swipe === direction) return { ...newcode, swipe: null };\n      }\n      if (!newcode.swipe) newcode.swipe = null;\n      return newcode;\n    });\n    setQuestionForm({ ...questionForm, codes: newCodes });\n  };\n\n  if (questionForm.type !== \"annotinder\") return null;\n\n  const options = questionForm.codes.map((code, i) => {\n    return { key: i, text: code.code || code, value: code.code || code };\n  });\n\n  return (\n    <Form>\n      <Grid textAlign=\"center\" verticalAlign=\"middle\">\n        <Grid.Row style={{ paddingBottom: \"0\" }}>\n          <Grid.Column width={6}>\n            <Form.Group grouped>\n              <b>swipe</b> or <b>arrow up</b>\n              <br />\n              <Dropdown\n                placeholder=\"not used\"\n                clearable\n                value={swipes.up?.code || null}\n                options={options}\n                selection\n                style={{ minWidth: \"10em\", maxWidth: \"10em\" }}\n                onChange={(e, d) => onSelect(\"up\", d.value)}\n              />\n            </Form.Group>\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column width={8}>\n            <b>swipe</b> or <b>arrow left</b>\n            <br />\n            <Dropdown\n              placeholder=\"not used\"\n              clearable\n              value={swipes.left?.code || null}\n              options={options}\n              selection\n              style={{ minWidth: \"10em\", maxWidth: \"10em\" }}\n              onChange={(e, d) => onSelect(\"left\", d.value)}\n            />\n          </Grid.Column>\n          <Grid.Column width={8}>\n            <b>swipe</b> or <b>arrow right</b>\n            <br />\n            <Dropdown\n              placeholder=\"not used\"\n              clearable\n              value={swipes.right?.code || null}\n              options={options}\n              selection\n              style={{ minWidth: \"10em\", maxWidth: \"10em\" }}\n              onChange={(e, d) => onSelect(\"right\", d.value)}\n            />\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n      <br />\n      <br />\n    </Form>\n  );\n};\n\nexport default QuestionTaskSettings;\n","import React, { useState, useEffect } from \"react\";\n\nimport { Form, Radio, Icon, Checkbox, TextArea } from \"semantic-ui-react\";\n\nimport CodesEditor from \"./CodesEditor\";\nimport { standardizeCodes } from \"ccs-annotator-client\";\nimport VariableMenu from \"./VariableMenu\";\n\nimport Help from \"components/CodingjobManager/subcomponents/Help\";\nimport { useDispatch } from \"react-redux\";\nimport { blockEvents } from \"actions\";\n\nconst variableDefaultSettings = {\n  name: \"Variable name\",\n  instruction: \"This is what you need to do\",\n  buttonMode: \"all\",\n  onlyEdit: false,\n  searchBox: false,\n  singleCode: false,\n  codes: [\"No\", \"Skip\", \"Yes\"],\n};\n\nconst AnnotateTaskSettings = ({ taskSettings, setTaskSettings }) => {\n  const [variableIndex, setVariableIndex] = useState(0);\n\n  const setVariables = (variables) => {\n    setTaskSettings({\n      ...taskSettings,\n      annotate: { settings: taskSettings.annotate.settings, variables: variables },\n    });\n  };\n\n  return (\n    <>\n      <h3>Global settings</h3>\n      <GlobalAnnotateSettings taskSettings={taskSettings} setTaskSettings={setTaskSettings} />\n      <h3>Variables</h3>\n      <VariableMenu\n        variables={taskSettings.annotate.variables}\n        setVariables={setVariables}\n        index={variableIndex}\n        setIndex={setVariableIndex}\n        newVariableDefaults={variableDefaultSettings}\n      >\n        <AnnotateForm\n          taskSettings={taskSettings}\n          setTaskSettings={setTaskSettings}\n          variableIndex={variableIndex}\n        />{\" \"}\n      </VariableMenu>\n    </>\n  );\n};\n\nconst GlobalAnnotateSettings = ({ taskSettings, setTaskSettings }) => {\n  console.log(taskSettings);\n  const globalSettings = taskSettings?.annotate?.settings;\n  const variables = taskSettings?.annotate?.variables;\n  const setGlobalSettings = (settings) => {\n    setTaskSettings({\n      ...taskSettings,\n      annotate: { settings, variables: taskSettings.annotate.variables },\n    });\n  };\n\n  if (!globalSettings || !variables) return null;\n\n  return (\n    <Form>\n      <Form.Group>\n        <Form.Field>\n          <Checkbox\n            disabled={variables.filter((v) => v.enabled == null || v.enabled).length <= 1}\n            toggle\n            label=\"Edit all option\"\n            checked={globalSettings.editAll}\n            onChange={(e, d) => setGlobalSettings({ ...globalSettings, editAll: d.checked })}\n          />\n          <Help\n            header=\"Add edit all option\"\n            texts={[\n              `If there are two or more variables, adds the option for coders to view and edit all annotations together`,\n            ]}\n          />\n        </Form.Field>\n      </Form.Group>\n    </Form>\n  );\n};\n\nconst AnnotateForm = ({ taskSettings, setTaskSettings, variableIndex }) => {\n  const annotateForm = taskSettings.annotate.variables[variableIndex];\n\n  const setAnnotateForm = (value) => {\n    const newTaskSettings = { ...taskSettings };\n    const newValue = { ...value };\n\n    newTaskSettings.annotate.variables[variableIndex] = newValue;\n    setTaskSettings(newTaskSettings);\n  };\n\n  const codesEditor = () => {\n    return (\n      <CodesEditor\n        codes={standardizeCodes(annotateForm.codes)}\n        setCodes={(newCodes) => setAnnotateForm({ ...annotateForm, codes: newCodes })}\n      />\n    );\n  };\n\n  const codeSelectorConditionalFields = () => {\n    if (annotateForm.enabled == null) {\n      // if not imported (only imported have enabled key)\n      return (\n        <Form.Field>\n          <Checkbox\n            label=\"Single code (only select)\"\n            checked={annotateForm.singleCode}\n            onChange={(e, d) => setAnnotateForm({ ...annotateForm, singleCode: d.checked })}\n          />\n        </Form.Field>\n      );\n    } else {\n      return (\n        <>\n          <Form.Field>\n            <Checkbox\n              label=\"Edit mode\"\n              checked={annotateForm.editMode}\n              onChange={(e, d) => setAnnotateForm({ ...annotateForm, editMode: d.checked })}\n            />\n            <Help\n              header=\"Edit mode\"\n              texts={[\n                \"In edit mode you can not create new annotations, but only edit existing anntations\",\n              ]}\n            />\n          </Form.Field>\n          <Form.Field>\n            <Checkbox\n              label=\"Only code \"\n              checked={annotateForm.editMode}\n              onChange={(e, d) => setAnnotateForm({ ...annotateForm, editMode: d.checked })}\n            />\n            <Help\n              header=\"Edit mode\"\n              texts={[\n                \"In edit mode you can not create new annotations, but only edit existing anntations\",\n              ]}\n            />\n          </Form.Field>\n        </>\n      );\n    }\n  };\n\n  if (!taskSettings?.annotate?.variables?.[variableIndex]) return null;\n\n  return (\n    <Form>\n      <InstructionInputField annotateForm={annotateForm} setAnnotateForm={setAnnotateForm} />\n\n      <Form.Group>\n        <Icon name=\"setting\" />\n        <label>Code Selector settings</label>\n      </Form.Group>\n\n      <Form.Group>{codeSelectorConditionalFields()}</Form.Group>\n      <Form.Group>\n        <Form.Field>\n          <Checkbox\n            label=\"Multiple\"\n            checked={annotateForm.multiple}\n            onChange={(e, d) => setAnnotateForm({ ...annotateForm, multiple: d.checked })}\n          />\n          <Help\n            header=\"Select multiple codes\"\n            texts={[\"Allows user to select (or delete) multiple codes before closing the popup\"]}\n          />\n        </Form.Field>\n      </Form.Group>\n\n      <Form.Group grouped style={{ display: annotateForm.singleCode ? \"none\" : \"block\" }}>\n        <label>Code buttons</label>\n\n        <Form.Field>\n          <Radio\n            value=\"all\"\n            label=\"Show all codes\"\n            checked={annotateForm.buttonMode === \"all\"}\n            onChange={() => setAnnotateForm({ ...annotateForm, buttonMode: \"all\" })}\n          />\n          <Help\n            header={\"Show all active codes\"}\n            texts={[\n              \"Only codes that are 'active' will be shown\",\n              \"You can toggle which codes are active in the codebook (top-right in menu bar)\",\n            ]}\n          />\n          <Form.Field style={{ marginLeft: \"25px\" }}>\n            <Checkbox\n              label=\"Include search field\"\n              disabled={annotateForm.buttonMode === \"recent\"}\n              checked={annotateForm.searchBox}\n              onChange={(e, d) => setAnnotateForm({ ...annotateForm, searchBox: d.checked })}\n            />\n          </Form.Field>\n        </Form.Field>\n        <Form.Field>\n          <Radio\n            value=\"recent\"\n            label=\"Show recently used\"\n            checked={annotateForm.buttonMode === \"recent\"}\n            onChange={() => setAnnotateForm({ ...annotateForm, buttonMode: \"recent\" })}\n          />\n          <Help\n            header={\"Show recently used codes\"}\n            texts={[\n              \"Show only (active) codes that the coder used recently\",\n              \"The Search box is always enabled with this option, and the buttons only serve as quick keys. This is especially usefull for very large codebooks, for instance for tagging specific named entities\",\n            ]}\n          />\n        </Form.Field>\n      </Form.Group>\n\n      <br />\n      <div\n        style={{\n          overflow: \"auto\",\n          margin: \"-1em\",\n          display: annotateForm.singleCode ? \"none\" : \"block\",\n        }}\n      >\n        {codesEditor()}\n      </div>\n    </Form>\n  );\n};\n\nconst InstructionInputField = ({ annotateForm, setAnnotateForm }) => {\n  const [instruction, setInstruction] = useState(annotateForm.instruction || \"\");\n  const dispatch = useDispatch(); // needed to block key events from preview window\n\n  useEffect(() => {\n    if (instruction === null || instruction == null) return;\n    if (annotateForm.instruction === instruction) return;\n    const timer = setTimeout(() => {\n      setAnnotateForm({ ...annotateForm, instruction });\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, [instruction, annotateForm, setAnnotateForm]);\n\n  useEffect(() => {\n    setInstruction(annotateForm.instruction);\n  }, [annotateForm]);\n\n  return (\n    <Form.Group grouped>\n      <label>Instruction</label>\n      <Form.Field>\n        <TextArea\n          value={instruction}\n          onFocus={() => dispatch(blockEvents(true))}\n          onBlur={() => dispatch(blockEvents(false))}\n          onChange={(e, d) => setInstruction(d.value)}\n        />\n      </Form.Field>\n    </Form.Group>\n  );\n};\n\nexport default AnnotateTaskSettings;\n","import React, { useEffect } from \"react\";\n\nimport { Icon, Form, Radio, Divider } from \"semantic-ui-react\";\n\nimport QuestionTaskSettings from \"./QuestionTaskSettings\";\nimport AnnotateTaskSettings from \"./AnnotateTaskSettings\";\nimport db from \"apis/dexie\";\n\nconst defaultTaskSettings = {\n  // contains the type of task (annotate, question) and settings for this task\n  // note that each type corresponds to a key. So if for instance type = 'questions',\n  // the questions settings will be used.\n  type: null,\n\n  // annotate type settings\n  annotate: {\n    settings: { editAll: false },\n    variables: [\n      {\n        name: \"Variable name\",\n        buttonMode: \"all\",\n        onlyEdit: false,\n        multiple: false,\n        searchBox: false,\n        codes: [\"Some\", \"example\", \"options\"],\n      },\n    ],\n  },\n\n  // question type settings\n  questions: {\n    settings: {},\n    questions: [\n      {\n        name: \"Question name\",\n        type: \"select code\",\n        question: \"[The question itself]\",\n        codes: [\"No\", \"Skip\", \"Yes\"],\n      },\n    ],\n  },\n};\n\nconst TaskSettings = ({ codingjob }) => {\n  const unitSettings = codingjob?.unitSettings;\n  const taskSettings = codingjob?.taskSettings || defaultTaskSettings;\n  const setTaskSettings = (ts) => {\n    db.setCodingjobProp(codingjob, \"taskSettings\", ts);\n  };\n\n  useEffect(() => {\n    if (!codingjob?.taskSettings) return;\n    if (!codingjob.importedCodes) return;\n    for (let variable of Object.keys(codingjob.importedCodes)) {\n      const codes = codingjob.importedCodes[variable];\n      const ts = codingjob.taskSettings;\n      if (!ts.annotate.variables.some((v) => v.name === variable)) {\n        ts.annotate.variables.push({\n          name: variable,\n          buttonMode: codes.length > 10 ? \"recent\" : \"all\",\n          searchBox: codes.length > 10,\n          codes,\n          enabled: false,\n        });\n        db.setCodingjobProp(codingjob, \"taskSettings\", ts);\n      }\n    }\n  }, [codingjob]);\n\n  if (!taskSettings || !unitSettings) return null;\n\n  return (\n    <div style={{ verticalAlign: \"top\", float: \"top\", paddingLeft: \"1em\" }}>\n      <TypeForm taskSettings={taskSettings} setTaskSettings={setTaskSettings} />\n      <Divider />\n      {taskSettings.type === \"questions\" ? (\n        <QuestionTaskSettings\n          taskSettings={taskSettings}\n          setTaskSettings={setTaskSettings}\n          unitSettings={unitSettings}\n        />\n      ) : null}\n      {taskSettings.type === \"annotate\" ? (\n        <AnnotateTaskSettings\n          taskSettings={taskSettings}\n          setTaskSettings={setTaskSettings}\n          unitSettings={unitSettings}\n        />\n      ) : null}\n    </div>\n  );\n};\n\nconst TypeForm = ({ taskSettings, setTaskSettings }) => {\n  useEffect(() => {\n    if (!taskSettings?.type)\n      setTaskSettings({\n        ...taskSettings,\n        type: \"annotate\",\n      });\n  }, [taskSettings, setTaskSettings]);\n\n  const radioButton = (value, label) => {\n    return (\n      <Form.Field>\n        <Radio\n          value={value}\n          label={label}\n          checked={taskSettings.type === value}\n          onChange={(e, d) =>\n            setTaskSettings({\n              ...taskSettings,\n              type: value,\n            })\n          }\n        />\n      </Form.Field>\n    );\n  };\n\n  return (\n    <Form>\n      <Form.Group>\n        <Icon name=\"setting\" />\n        <label>Set task type</label>\n      </Form.Group>\n      <Form.Group grouped widths=\"equal\">\n        {radioButton(\"annotate\", \"Annotate\")}\n        {radioButton(\"questions\", \"Question\")}\n      </Form.Group>\n    </Form>\n  );\n};\n\nexport default React.memo(TaskSettings);\n","import React, { useState, useEffect } from \"react\";\nimport TaskSettings from \"./subcomponents/TaskSettings\";\nimport { Grid, Header } from \"semantic-ui-react\";\nimport useUnits from \"components/CodingjobManager/subcomponents/useUnits\";\nimport { standardizeUnits } from \"library/standardizeUnits\";\nimport { getCodebook } from \"library/codebookManagement\";\nimport { useSelector } from \"react-redux\";\n\n// imported from annotator\nimport { AnnotateTask, QuestionTask, IndexController } from \"ccs-annotator-client\";\n\nconst ManageTask = ({ codingjob }) => {\n  // When a new codingjob is loaded, set codingjobLoaded ref to false\n  // this prevents actually loading the data until unitSettings has loaded\n  // the unitSettings stored in the codingjob\n  const [units] = useUnits(codingjob);\n\n  if (!codingjob) return null;\n  let cwidths = [8, 8];\n  if (codingjob.taskSettings?.type) {\n    if (codingjob.taskSettings.type === \"annotate\") cwidths = [6, 10];\n    if (codingjob.taskSettings.type === \"questions\") cwidths = [8, 8];\n  }\n\n  return (\n    <div>\n      <Grid stackable columns={2}>\n        <Grid.Column verticalAlign=\"top\" stretched width={cwidths[0]}>\n          <Header textAlign=\"center\" style={{ background: \"#1B1C1D\", color: \"white\" }}>\n            Settings\n          </Header>\n          <TaskSettings codingjob={codingjob} />\n        </Grid.Column>\n        <Grid.Column width={cwidths[1]}>\n          <PreviewTask codingjob={codingjob} units={units} />\n        </Grid.Column>\n      </Grid>\n    </div>\n  );\n};\n\nconst PreviewTask = React.memo(({ codingjob, units }) => {\n  const [index, setIndex] = useState(null);\n  const [standardizedUnit, setStandardizedUnit] = useState(null);\n  const [codebook, setCodebook] = useState(null);\n\n  useEffect(() => {\n    if (!codingjob?.taskSettings) return;\n    setCodebook(getCodebook(codingjob.taskSettings));\n  }, [codingjob.taskSettings]);\n\n  console.log(standardizedUnit);\n  useEffect(() => {\n    if (!units || index === null) {\n      setStandardizedUnit(null);\n      return null;\n    }\n    if (index >= units.length) return null;\n    standardizeUnits(codingjob, [units[index]]).then((singleUnitArray) => {\n      console.log(singleUnitArray);\n      const previewUnit = singleUnitArray[0];\n      previewUnit.jobServer = {\n        postAnnotations: (unit_id, data) => console.log(`PREVIEW: POST ${data.length} annotations`),\n      }; // don't store annotations\n      previewUnit.progress = { seek_backwards: true, seek_forwards: true };\n      setStandardizedUnit(previewUnit);\n    });\n  }, [index, units, setStandardizedUnit, codingjob]);\n\n  if (!units) return null;\n\n  const renderTaskPreview = (type) => {\n    switch (type) {\n      case \"questions\":\n        return (\n          <PreviewQuestionTask\n            codebook={codebook}\n            standardizedUnit={standardizedUnit}\n            setUnitIndex={setIndex}\n          >\n            <IndexController n={units?.length} index={index} setIndex={setIndex} />\n          </PreviewQuestionTask>\n        );\n      case \"annotate\":\n        return (\n          <PreviewAnnotateTask\n            codebook={codebook}\n            standardizedUnit={standardizedUnit}\n            setUnitIndex={setIndex}\n          >\n            <IndexController n={units?.length} index={index} setIndex={setIndex} />\n          </PreviewAnnotateTask>\n        );\n      default:\n        return null;\n    }\n  };\n\n  if (!codingjob?.taskSettings?.type) return null;\n  return renderTaskPreview(codingjob.taskSettings.type);\n});\n\nconst PreviewQuestionTask = React.memo(({ children, codebook, standardizedUnit, setUnitIndex }) => {\n  if (!codebook) return null;\n  if (!codebook?.type === \"questions\") return null;\n\n  return (\n    <>\n      <Header textAlign=\"center\" style={{ background: \"#1B1C1D\", color: \"white\", height: \"40px\" }}>\n        Preview\n        {children}\n      </Header>\n\n      <div\n        style={{\n          padding: \"0\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          height: \"calc(100vh - 250px)\",\n          minHeight: \"500px\",\n          maxHeight: \"800px\",\n        }}\n      >\n        <div\n          style={{\n            padding: \"0em\",\n            width: \"70%\",\n            paddingTop: \"1em\",\n            height: \"100%\",\n          }}\n        >\n          <QuestionTask\n            unit={standardizedUnit}\n            codebook={codebook}\n            setUnitIndex={setUnitIndex}\n            blockEvents={true}\n          />\n        </div>\n      </div>\n    </>\n  );\n});\n\nconst PreviewAnnotateTask = ({ children, codebook, standardizedUnit, setUnitIndex }) => {\n  const blockEvents = useSelector((state) => state.eventsBlocked);\n  if (!codebook) return null;\n  if (codebook.type !== \"annotate\") return null;\n\n  return (\n    <>\n      <Header textAlign=\"center\" style={{ background: \"#1B1C1D\", color: \"white\" }}>\n        Preview\n      </Header>\n      {children}\n\n      <div\n        style={{\n          padding: \"0\",\n          width: \"100%\",\n          height: \"calc(100vh - 250px)\",\n          minHeight: \"500px\",\n        }}\n      >\n        <div style={{ padding: \"0\", height: \"100%\" }}>\n          <AnnotateTask\n            unit={standardizedUnit}\n            codebook={codebook}\n            setUnitIndex={setUnitIndex}\n            blockEvents={blockEvents}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default React.memo(ManageTask);\n","import React, { useState, useEffect } from \"react\";\n\nimport { Icon, Form, Radio, Input } from \"semantic-ui-react\";\n\nimport db from \"apis/dexie\";\nimport Help from \"./Help\";\n\nconst defaultDeploySettings = {\n  medium: null,\n  nCoders: 1,\n  pctOverlap: 10,\n  //coders: [{ pctUnits: 100, pctOverlap: 10 }],\n};\n\nconst DeploySettings = ({ codingjob }) => {\n  const deploySettings = codingjob?.deploySettings || defaultDeploySettings;\n  const setDeploySettings = (us) => {\n    db.setCodingjobProp(codingjob, \"deploySettings\", us);\n  };\n\n  if (!deploySettings) return null;\n\n  return (\n    <div style={{ verticalAlign: \"top\", float: \"top\", paddingLeft: \"1em\" }}>\n      <DeployForm\n        codingjob={codingjob}\n        deploySettings={deploySettings}\n        setDeploySettings={setDeploySettings}\n      />\n    </div>\n  );\n};\n\nconst DeployForm = ({ codingjob, deploySettings, setDeploySettings }) => {\n  const [delayed, setDelayed] = useState(null); // delayed unitSettings\n  const totalUnits = codingjob?.unitSettings?.totalUnits || 0;\n\n  useEffect(() => {\n    setDelayed(deploySettings);\n  }, [deploySettings, setDelayed]);\n\n  useEffect(() => {\n    if (delayed === deploySettings) return null;\n    const timer = setTimeout(() => {\n      //const newDelayed = computeCoderShare(delayed);\n      setDeploySettings(delayed);\n    }, 300);\n    return () => clearTimeout(timer);\n  }, [delayed, deploySettings, setDeploySettings]);\n\n  const radioButton = (value, label) => {\n    return (\n      <Form.Field>\n        <Radio\n          value={value}\n          label={label}\n          checked={deploySettings.medium === value}\n          onChange={(e, d) =>\n            setDeploySettings({\n              ...deploySettings,\n              medium: value,\n            })\n          }\n        />\n      </Form.Field>\n    );\n  };\n\n  const amcatSettings = () => {\n    return <div></div>;\n  };\n  const fileSettings = () => {\n    if (deploySettings.medium !== \"file\") return null;\n    return (\n      <>\n        <br />\n        <Form.Group>\n          <Icon name=\"setting\" />\n          <label>Divide jobs</label>\n        </Form.Group>\n        <Form.Group>\n          <Form.Field width={4}>\n            <label>\n              Coders\n              {delayed.nCoders > 1 && codingjob?.unitSettings?.ordered ? (\n                <Help\n                  header=\"Using multiple coders shuffles data\"\n                  type=\"warn\"\n                  texts={[\n                    `You disabled 'shuffle' in the sample settings, but if more than 1 coder is assigned, \n                     the data will still be shuffled. Otherwise only the overlap items would be random, and \n                     they could be identifiable by breaking a pattern`,\n                  ]}\n                />\n              ) : null}\n            </label>\n\n            <Input\n              size=\"mini\"\n              type=\"number\"\n              min={1}\n              value={delayed.nCoders}\n              onChange={(e, d) => setDelayed((state) => ({ ...state, nCoders: d.value }))}\n            />\n          </Form.Field>\n\n          <Form.Field width={4}>\n            <label>\n              Overlap\n              {delayed.pctOverlap === \"0\" ? (\n                <Help\n                  header=\"Are you sure?\"\n                  type=\"warn\"\n                  texts={[\n                    `I mean, we're not being judgmental, but reviewer 2 is going to ask for that intercoder reliability`,\n                  ]}\n                />\n              ) : null}\n            </label>\n            <Input\n              size=\"mini\"\n              type=\"number\"\n              step={1}\n              min={0}\n              max={100}\n              label=\"%\"\n              labelPosition=\"right\"\n              value={delayed.pctOverlap}\n              onChange={(e, d) => setDelayed((state) => ({ ...state, pctOverlap: d.value }))}\n            />\n          </Form.Field>\n\n          {/* <Form.Field width={5}>\n            <label>Off total units</label>\n            <Input\n              size=\"mini\"\n              type=\"number\"\n              step={1}\n              min={1}\n              max={100}\n              label=\"%\"\n              labelPosition=\"right\"\n              value={delayed.pctOfUnits}\n              onChange={(e, d) => setDelayed((state) => ({ ...state, pctOfUnits: d.value }))}\n            />\n          </Form.Field> */}\n          <Form.Field width={8}>\n            <CoderDistribution totalUnits={totalUnits} settings={delayed} />\n          </Form.Field>\n        </Form.Group>\n      </>\n    );\n  };\n\n  if (delayed === null) return null;\n\n  return (\n    <Form>\n      <Form.Group>\n        <Icon name=\"setting\" />\n        <label>Deploy medium</label>\n      </Form.Group>\n      <Form.Group grouped widths=\"equal\">\n        {radioButton(\"file\", \"File\")}\n        {radioButton(\"amcat\", \"AmCAT\")}\n      </Form.Group>\n      {amcatSettings()}\n      {fileSettings()}\n    </Form>\n  );\n};\n\n// const computeCoderShare = (settings) => {\n//   let coders = settings.coders.slice(0, settings.nCoders);\n//   const prevCoders = coders.length;\n//   const needCoders = settings.nCoders - prevCoders;\n\n//   for (let i = 0; i < needCoders; i++)\n//     coders.push({ pctUnits: 100 / prevCoders, pctOverlap: settings.pctOverlap });\n\n//   const totalPctUnits = coders.reduce((total, coder) => {\n//     return (total += coder.pctUnits);\n//   }, 0);\n\n//   coders = coders.map((coder) => ({\n//     ...coder,\n//     pctUnits: (coder.pctUnits = (100 * coder.pctUnits) / totalPctUnits),\n//   }));\n\n//   return { ...settings, coders };\n// };\n\nconst CoderDistribution = ({ totalUnits, settings }) => {\n  if (!settings) return null;\n\n  const overlapSet = Math.round((totalUnits * settings.pctOverlap) / 100);\n  const unitSet = totalUnits - overlapSet;\n\n  const avgPerCoder = overlapSet + unitSet / settings.nCoders;\n\n  return (\n    <div style={{ textAlign: \"center\", color: \"blue\" }}>\n      Avg. units per coder <br />\n      <b style={{ fontSize: \"1.3em\" }}>{Math.round(avgPerCoder * 100) / 100}</b>\n    </div>\n  );\n};\n\n// const CoderTable = ({ totalUnits, settings }) => {\n//   console.log(settings);\n//   if (!settings.coders) return null;\n\n//   const rows = () => {\n//     return settings.coders.map((coder, i) => {\n//       return (\n//         <Table.Row>\n//           <Table.Cell>{i + 1}</Table.Cell>\n//           <Table.Cell>{Math.round(coder.pctUnits * 100) / 100}</Table.Cell>\n//           <Table.Cell>{Math.ceil((coder.pctUnits / 100) * totalUnits)}</Table.Cell>\n//         </Table.Row>\n//       );\n//     });\n//   };\n\n//   return (\n//     <Table>\n//       <Table.Header>\n//         <Table.Row>\n//           <Table.HeaderCell>Coder</Table.HeaderCell>\n//           <Table.HeaderCell>% units</Table.HeaderCell>\n//           <Table.HeaderCell># units</Table.HeaderCell>\n//         </Table.Row>\n//       </Table.Header>\n//       <Table.Body>{rows()}</Table.Body>\n//     </Table>\n//   );\n// };\n\n// Also make an option for the type of deployment\n// unitlist: users receive single codingjob json with all units\n// unitchain: each unit contains a reference to the next unit\n\n// /**\n//  * A custom medium allows any backend to be used that can host codingjob jsons, and\n//  * has an address to POST annotations. The form lets the user define where to send the codingjob,\n//  * and where to\n//  * @returns\n//  */\n// const CustomMedium = () => {\n//   return <div></div>;\n// };\n\nexport default DeploySettings;\n","import React, { useState, useEffect } from \"react\";\n\nimport { Button, Form } from \"semantic-ui-react\";\nimport { saveAs } from \"file-saver\";\nimport JSZip from \"jszip\";\n\nimport { drawRandom } from \"library/sample\";\n\nconst FileDeploy = ({ codingjobPackage }) => {\n  const [title, setTitle] = useState(\"\");\n\n  useEffect(() => {\n    if (codingjobPackage?.title) setTitle(codingjobPackage.title);\n  }, [codingjobPackage]);\n\n  const onDownload = async () => {\n    const cjSets = createCoderSets(codingjobPackage);\n\n    const zip = new JSZip();\n    zip.file(`AmCAT_annotator_${title}.json`, JSON.stringify(codingjobPackage));\n    for (let i = 0; i < cjSets.length; i++) {\n      const fname = `set_${cjSets[i].set}_units_${cjSets[i].units.length}_${title}.json`;\n      zip.file(fname, JSON.stringify(cjSets[i]));\n    }\n\n    const content = await zip.generateAsync({ type: \"blob\" });\n    saveAs(content, `AmCAT_annotator_${title}.zip`);\n  };\n\n  return (\n    <div>\n      <Form onSubmit={() => onDownload()}>\n        <Form.Input\n          placeholder=\"username\"\n          value={title}\n          maxLength={30}\n          onChange={(e, d) => setTitle(d.value)}\n          autoFocus\n          style={{ width: \"100%\" }}\n        />\n      </Form>\n      <br />\n\n      <Button\n        primary\n        fluid\n        loading={codingjobPackage === null}\n        disabled={title.length < 5}\n        onClick={onDownload}\n      >\n        {title.length < 5 ? \"please use 5 characters or more\" : \"Download codingjob files\"}{\" \"}\n      </Button>\n    </div>\n  );\n};\n\nconst createCoderSets = (codingjobPackage) => {\n  const unitSettings = codingjobPackage.provenance.unitSettings;\n  const deploySettings = codingjobPackage.provenance.deploySettings;\n  let units = codingjobPackage.units.map((u) => u.unit); // remove unit data for backend (like 'gold')\n\n  if (unitSettings.nCoders === 1)\n    return [{ set: 1, title: codingjobPackage.title, codebook: codingjobPackage.codebook, units }];\n\n  const nOverlap = Math.round((unitSettings.totalUnits * deploySettings.pctOverlap) / 100);\n  //const n = totalSet - overlapSet\n\n  units = drawRandom(units, units.length, false, 42, null);\n  const overlapSet = units.slice(0, nOverlap);\n  const unitSet = units.slice(nOverlap);\n\n  let unitSets = Array(Number(deploySettings.nCoders))\n    .fill([])\n    .map((set) => [...overlapSet]);\n  for (let i = 0; i < unitSet.length; i++) {\n    unitSets[i % unitSets.length].push(unitSet[i]);\n  }\n\n  return unitSets.map((us, i) => ({\n    set: i + 1,\n    title: codingjobPackage.title,\n    codebook: codingjobPackage.codebook,\n    units: drawRandom(us, us.length, false, 42, null),\n  }));\n};\n\nexport default FileDeploy;\n","import React, { useState, useEffect } from \"react\";\nimport { Button, Form } from \"semantic-ui-react\";\nimport db from \"apis/dexie\";\nimport { useCookies } from \"react-cookie\";\nimport newAmcatSession from \"apis/amcat\";\nimport { LoginForm } from \"components/HeaderMenu/Login\";\n\nconst AmcatDeploy = ({ codingjobPackage }) => {\n  const [name, setName] = useState(\"\");\n  const [cookies, setCookie] = useCookies([\"amcat\"]);\n\n  useEffect(() => {\n    if (codingjobPackage?.name) setName(codingjobPackage.name);\n  }, [codingjobPackage]);\n\n  const deploy = async () => {\n    const amcat = newAmcatSession(cookies.amcat.host, cookies.amcat.token);\n    try {\n      const id = await amcat.postCodingjob(codingjobPackage, name);\n      const url = `${amcat.host}/codingjob/${id.data.id}`;\n      db.createDeployedJob(name, url);\n    } catch (e) {\n      console.log(e);\n      setCookie(\"amcat\", JSON.stringify({ ...cookies.amcat, token: null }), { path: \"/\" });\n    }\n  };\n\n  if (!cookies?.amcat?.token)\n    return (\n      <LoginForm\n        cookies={cookies}\n        setCookies={setCookie}\n        setOpen={() => null}\n        setLoggedIn={() => null}\n      />\n    );\n\n  return (\n    <div>\n      <Form onSubmit={() => deploy()}>\n        <Form.Input\n          placeholder=\"Codingjob title\"\n          value={name}\n          maxLength={30}\n          onChange={(e, d) => setName(d.value)}\n          autoFocus\n          style={{ width: \"100%\" }}\n        />\n      </Form>\n      <br />\n\n      <Button fluid primary disabled={name.length < 5} onClick={() => deploy()}>\n        {name.length < 5 ? \"please use 5 characters or more\" : \"Upload to AmCAT\"}\n      </Button>\n    </div>\n  );\n};\n\nexport default AmcatDeploy;\n","import db from \"apis/dexie\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Grid, Header, Popup } from \"semantic-ui-react\";\nimport QRCode from \"react-qr-code\";\nimport { useCookies } from \"react-cookie\";\nimport newAmcatSession from \"apis/amcat\";\nimport DataTable from \"./DexieTable\";\nimport FullDataTable from \"./FullDataTable\";\n\nconst dtColumns = [\n  { name: \"id\", width: 1 },\n  { name: \"title\" },\n  { name: \"url\" },\n  { name: \"created\" },\n];\n\nconst DeployedJobs = () => {\n  const [jobKey, setJobKey] = useState(null);\n\n  const linkAndQr = () => {\n    if (jobKey == null) return <div style={{ height: \"6em\" }} />;\n    const url =\n      \"https://ccs-amsterdam.github.io/ccs-annotator-client/#/annotator?url=\" + jobKey?.url;\n    const qrUrl =\n      \"https://ccs-amsterdam.github.io/ccs-annotator-client/#/annotator?url=\" +\n      jobKey?.url.replace(\":\", \"%colon%\");\n    return (\n      <div style={{ height: \"6em\" }}>\n        <h3>\n          <a href={url}>Open coding job</a>\n        </h3>\n        <Popup on=\"click\" hoverable trigger={<Button>Show QR code</Button>}>\n          <QRCode value={encodeURI(qrUrl)} size={256} />\n        </Popup>\n      </div>\n    );\n  };\n\n  return (\n    <Grid centered container>\n      <Grid.Row>\n        <Grid.Column width={8}>\n          <DataTable\n            table={\"deployedJobs\"}\n            columns={dtColumns}\n            setSelected={setJobKey}\n            reverse={true}\n          />\n        </Grid.Column>\n        <Grid.Column width={8}>\n          <br />\n          <br />\n          {linkAndQr()}\n          <Header>Current annotations</Header>\n          <ResultsTable jobKey={jobKey} />\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n};\n\nconst rtColumns = [\n  { name: \"document_id\" },\n  { name: \"unit_id\" },\n  { name: \"coder\" },\n  { name: \"variable\" },\n  { name: \"value\" },\n  { name: \"offset\" },\n  { name: \"length\" },\n  { name: \"text\" },\n];\n\nconst ResultsTable = ({ jobKey }) => {\n  const [annotations, setAnnotations] = useState([]);\n  const [cookies] = useCookies([\"amcat\"]);\n\n  useEffect(() => {\n    if (!jobKey) return null;\n    if (!cookies.amcat) return null;\n    const amcat = newAmcatSession(cookies.amcat.host, cookies.amcat.email, cookies.amcat.token);\n    setAnnotations([]);\n    getResultUrl(jobKey, amcat, setAnnotations);\n  }, [jobKey, cookies, setAnnotations]);\n\n  return <FullDataTable data={annotations} columns={rtColumns} />;\n};\n\nconst getResultUrl = async (jobKey, amcat, setAnnotations) => {\n  let job = await db.idb.deployedJobs.get({ url: jobKey.url });\n\n  if (!job) return;\n\n  if (!amcat) return;\n  try {\n    const job_id = jobKey.url.split(\"/\").slice(-1)[0];\n    const res = await amcat.getCodingjob(job_id);\n\n    const annotations = res.data.units.reduce((arr, unit, i) => {\n      if (unit.annotations) {\n        for (let userAnnotations of unit.annotations) {\n          const coder = userAnnotations.user;\n          const annotations = userAnnotations.annotation;\n\n          for (let ann of annotations) {\n            const a = {\n              document_id: unit.document_id,\n              unit_id: i,\n              coder,\n              ...unit.provenance,\n              ...ann,\n            };\n\n            if (unit.meta) {\n              for (let key of Object.keys(unit.meta)) {\n                a[\"meta_\" + key] = unit.meta[key];\n              }\n            }\n\n            arr.push(a);\n          }\n        }\n      }\n      return arr;\n    }, []);\n    setAnnotations(annotations);\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport default DeployedJobs;\n","import React, { useState, useEffect } from \"react\";\nimport DeploySettings from \"./subcomponents/DeploySettings\";\nimport useUnits from \"components/CodingjobManager/subcomponents/useUnits\";\nimport { Grid, Header } from \"semantic-ui-react\";\nimport FileDeploy from \"./subcomponents/FileDeploy\";\nimport AmcatDeploy from \"./subcomponents/AmcatDeploy\";\n\nimport db from \"apis/dexie\";\nimport { standardizeUnits } from \"library/standardizeUnits\";\nimport { getCodebook } from \"library/codebookManagement\";\nimport DeployedJobs from \"./subcomponents/DeployedJobs\";\n\nconst DeployCodingjob = ({ codingjob }) => {\n  const [codingjobPackage, setCodingjobPackage] = useState(null);\n  const [units] = useUnits(codingjob);\n\n  useEffect(() => {\n    if (!units || units.length === 0) return;\n    if (!codingjob?.unitSettings || !codingjob?.taskSettings || !codingjob?.deploySettings) return;\n\n    const includeDocuments = codingjob.deploySettings.medium === \"file\";\n    createCodingjobPackage(codingjob, units, setCodingjobPackage, includeDocuments);\n  }, [codingjob, units, setCodingjobPackage]);\n\n  const deployButton = (medium) => {\n    if (!medium) return null;\n    switch (codingjob.deploySettings.medium) {\n      case \"file\":\n        return <FileDeploy codingjobPackage={codingjobPackage} />;\n      case \"amcat\":\n        return <AmcatDeploy codingjobPackage={codingjobPackage} />;\n      default:\n        return null;\n    }\n  };\n\n  const viewDeployed = () => {\n    if (!codingjob?.deploySettings?.medium) return null;\n    if (codingjob.deploySettings.medium !== \"amcat\") return null;\n    return (\n      <Grid.Column width={11}>\n        <Header textAlign=\"center\" style={{ background: \"#1B1C1D\", color: \"white\" }}>\n          Jobs deployed on AmCAT\n        </Header>\n        <DeployedJobs />\n      </Grid.Column>\n    );\n  };\n\n  if (!codingjob) return null;\n\n  return (\n    <div>\n      <Grid centered stackable columns={2}>\n        <Grid.Column width={5}>\n          <Header textAlign=\"center\" style={{ background: \"#1B1C1D\", color: \"white\" }}>\n            Deploy Codingjob\n          </Header>\n          <DeploySettings codingjob={codingjob} />\n          <br />\n          {deployButton(codingjob?.deploySettings?.medium)}\n        </Grid.Column>\n        {viewDeployed()}\n      </Grid>\n    </div>\n  );\n};\n\nconst createCodingjobPackage = async (\n  codingjob,\n  units,\n  setCodingjobPackage,\n  includeDocuments = false\n) => {\n  let sunits = await standardizeUnits(codingjob, units);\n  sunits = sunits.map((su) => {\n    return {\n      unit: su,\n      //gold: {}\n    };\n  });\n\n  const cjpackage = {\n    title: codingjob.name,\n    provenance: { unitSettings: codingjob.unitSettings, deploySettings: codingjob.deploySettings },\n    codebook: getCodebook(codingjob.taskSettings),\n    units: sunits,\n    rules: { ruleset: \"crowdcoding\" },\n  };\n\n  if (includeDocuments)\n    cjpackage.provenance.documents = await db.idb.documents\n      .where(\"job_id\")\n      .equals(codingjob.id)\n      .toArray();\n\n  setCodingjobPackage(cjpackage);\n};\n\nexport default DeployCodingjob;\n","import React, { useState } from \"react\";\n\nimport { Segment, Step } from \"semantic-ui-react\";\n\nimport db from \"apis/dexie\";\nimport { useLiveQuery } from \"dexie-react-hooks\";\n\nimport CodingjobSelector from \"./1_CodingjobSelector\";\nimport ManageDocuments from \"./2_ManageDocuments\";\nimport ManageCodingUnits from \"./3_ManageCodingUnits\";\nimport ManageTask from \"./4_ManageTask\";\nimport DeployCodingjob from \"./5_DeployCodingjob\";\n\nconst CodingjobManager = () => {\n  const [menuItem, setMenuItem] = useState(\"codingjobs\");\n  const [selectedCodingjob, setSelectedCodingjob] = useState(null);\n\n  console.log(selectedCodingjob);\n\n  const codingjob = useLiveQuery(() => {\n    // retrieve codingjob from Dexie whenever selectedCodingjob changes OR dexie is updated\n    if (selectedCodingjob) {\n      return db.idb.codingjobs\n        .get(selectedCodingjob.id)\n        .then((cj) => {\n          return { ...cj, ROW_ID: selectedCodingjob.ROW_ID };\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    } else return null;\n  }, [selectedCodingjob]);\n\n  const nDocuments = useLiveQuery(() => {\n    if (!codingjob?.id) return 0;\n    return db.idb.documents.where(\"job_id\").equals(codingjob.id).count();\n  }, [codingjob]);\n\n  const renderSwitch = (menuItem) => {\n    switch (menuItem) {\n      case \"codingjobs\":\n        return <CodingjobSelector setSelectedCodingjob={setSelectedCodingjob} />;\n      case \"documents\":\n        return <ManageDocuments codingjob={codingjob} />;\n      case \"units\":\n        return <ManageCodingUnits codingjob={codingjob} />;\n      case \"task\":\n        return <ManageTask codingjob={codingjob} />;\n      case \"deploy\":\n        return <DeployCodingjob codingjob={codingjob} />;\n      default:\n        return null;\n    }\n  };\n  return (\n    <div style={{ margin: \"1em\" }}>\n      <Step.Group ordered unstackable size=\"tiny\" style={{ width: \"100%\", overflow: \"auto\" }}>\n        <Step\n          title=\"Codingjob\"\n          description={codingjob ? codingjob.name : \"none selected\"}\n          active={menuItem === \"codingjobs\"}\n          completed={codingjob !== null && codingjob != null}\n          onClick={(e, d) => {\n            setMenuItem(\"codingjobs\");\n          }}\n        />\n        <Step\n          title=\"Documents\"\n          description={nDocuments > 0 ? `${nDocuments} documents` : \"\"}\n          active={menuItem === \"documents\"}\n          completed={nDocuments > 0}\n          disabled={codingjob === null}\n          onClick={(e, d) => setMenuItem(\"documents\")}\n        />\n        <Step\n          title=\"Units\"\n          description={\n            codingjob?.unitSettings?.n\n              ? `${codingjob?.unitSettings?.n} units ${\n                  codingjob?.unitSettings.annotationMix ? `(+random)` : \"\"\n                }`\n              : null\n          }\n          active={menuItem === \"units\"}\n          completed={!!codingjob?.unitSettings?.n}\n          disabled={nDocuments === 0}\n          onClick={(e, d) => setMenuItem(\"units\")}\n        />\n        <Step\n          title=\"Codebook\"\n          description={codingjob?.taskSettings?.type || \"Define the task\"}\n          active={menuItem === \"task\"}\n          completed={!!codingjob?.taskSettings?.type}\n          disabled={!codingjob?.unitSettings?.n}\n          onClick={(e, d) => setMenuItem(\"task\")}\n        />\n        <Step\n          title=\"Deploy\"\n          description={\"Get (others) to work\"}\n          active={menuItem === \"deploy\"}\n          disabled={\n            codingjob === null || !codingjob?.unitSettings?.n || !codingjob?.taskSettings?.type\n          }\n          onClick={(e, d) => setMenuItem(\"deploy\")}\n        />\n      </Step.Group>\n\n      <Segment style={{ border: \"0\" }} attached=\"bottom\">\n        {renderSwitch(menuItem)}\n      </Segment>\n    </div>\n  );\n};\n\nexport default React.memo(CodingjobManager);\n","import db from \"apis/dexie\";\n\n/**\n * Class for jobs hosted on a server\n */\nexport class JobServerRemote {\n  constructor(amcat, job_id) {\n    this.amcat = amcat;\n    this.job_id = job_id;\n    this.where = \"remote\";\n  }\n\n  async init() {\n    try {\n      this.codebook = await this.amcat.getCodebook(this.job_id);\n      this.progress = await this.amcat.getProgress(this.job_id);\n    } catch (e) {\n      console.log(e);\n      this.success = false;\n      return;\n    }\n    this.success = true;\n  }\n\n  async getUnit(i) {\n    const getNext = i >= this.progress.n_coded && !this.progress.seek_forwards;\n    this.progress.n_coded = Math.max(i, this.progress.n_coded);\n    return await this.amcat.getUnit(this.job_id, getNext ? null : i);\n  }\n\n  postAnnotations(unit_id, annotation, status) {\n    this.amcat.postAnnotation(this.job_id, unit_id, annotation, status);\n  }\n}\n\n/**\n * Class for jobs using local data in Indexed DB\n */\nexport class JobServerLocal {\n  constructor(id, coderName) {\n    this.id = id;\n    this.coderName = coderName;\n    this.where = \"local\";\n  }\n\n  async init() {\n    let job = await db.idb.localJobs.get({ id: this.id });\n    if (!job) {\n      this.success = false;\n      return null;\n    }\n\n    this.success = true;\n    this.title = job.title;\n    this.units = job.units;\n    this.set = job.set;\n\n    this.codebook = job.codebook;\n    this.progress = {\n      n_total: job.units.length,\n      n_coded: job.n_coded || 0,\n      seek_backwards: true,\n      seek_forwards: false,\n    };\n  }\n\n  async getUnit(i) {\n    if (i !== null) {\n      this.progress.n_coded = Math.max(i, this.progress.n_coded);\n      // on get unit, also update progress.\n      // progressindex is the index of the currently fetched unit.\n      await db.idb.localJobs\n        .where(\"id\")\n        .equals(this.id)\n        .modify({ n_coded: Math.max(i, this.progress.n_coded), last_modified: new Date() });\n    }\n\n    const unit_id = this.units[i].unit_id;\n    let annotation = await db.getUnitAnnotations(this.id, unit_id);\n    const status = annotation?.status;\n    annotation = annotation?.annotations || [];\n\n    return {\n      id: unit_id,\n      unit: { ...this.units[i] },\n      annotation,\n      status,\n    };\n  }\n\n  async postAnnotations(unit_id, annotation, status) {\n    db.postAnnotations(this.id, unit_id, annotation, status);\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router\";\n\nimport Annotator from \"ccs-annotator-client\";\nimport { JobServerRemote, JobServerLocal } from \"components/Annotator/JobServerClass\";\nimport { useCookies } from \"react-cookie\";\nimport Login from \"components/HeaderMenu/Login\";\n\nimport \"components/Annotator/annotatorStyle.css\";\nimport newAmcatSession from \"apis/amcat\";\n\nconst AnnotatorLocal = () => {\n  const location = useLocation();\n  const [jobServer, setJobServer] = useState(null);\n  const [loginScreen, setLoginScreen] = useState(null);\n  const [cookies] = useCookies([\"amcat\"]);\n\n  useEffect(() => {\n    if (location.search) {\n      const queries = parseQueryString(location);\n      if (queries?.url) createRemoteJobServer(queries.url, cookies, setJobServer, setLoginScreen);\n      if (queries.id) createLocalJobServer(queries.id, cookies, setJobServer, setLoginScreen);\n    } else {\n      setJobServer(null);\n    }\n  }, [location, cookies, setJobServer]);\n\n  if (!jobServer) return loginScreen;\n  return <Annotator jobServer={jobServer} />;\n};\n\nconst createRemoteJobServer = async (url, cookies, setJobServer, setLoginScreen) => {\n  const u = new URL(url);\n  const amcat = newAmcatSession(u.origin, cookies?.amcat?.token);\n\n  try {\n    await amcat.getToken();\n  } catch (e) {\n    // if could not get token, assume it's because login failed\n    setLoginScreen(<Login host={u.origin} force={true} />);\n  }\n\n  const job_id = u.pathname.split(\"/\").slice(-1)[0];\n  const us = new JobServerRemote(amcat, job_id);\n  await us.init();\n  if (us.success) setJobServer(us);\n};\n\nconst createLocalJobServer = async (id, cookies, setJobServer) => {\n  const us = new JobServerLocal(id, cookies?.email, cookies?.token);\n  await us.init();\n  if (us.success) setJobServer(us);\n};\n\nconst parseQueryString = (location) => {\n  const query = location.search.substring(1);\n  const parts = query.split(\"&\");\n  return parts.reduce((obj, part) => {\n    const [key, value] = part.split(\"=\");\n    obj[decodeURIComponent(key)] = decodeURIComponent(value);\n    return obj;\n  }, {});\n};\n\nexport default AnnotatorLocal;\n","import DexieTable from \"components/CodingjobManager/subcomponents/DexieTable\";\nimport React from \"react\";\n\nconst tableColumns = [\n  { name: \"title\" },\n  { name: \"set\" },\n  { name: \"progress\", f: (row) => `${row.n_coded || 0} / ${row.units.length}` },\n  { name: \"last_modified\" },\n  { name: \"id\", hide: true },\n];\n\nconst LocalJobTable = ({ jobKey, setJobKey }) => {\n  return (\n    <DexieTable\n      table={\"localJobs\"}\n      columns={tableColumns}\n      setSelected={setJobKey}\n      searchOn=\"title\"\n    />\n  );\n};\n\nexport default LocalJobTable;\n","import db from \"apis/dexie\";\nimport objectHash from \"object-hash\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { Button, Grid, Header } from \"semantic-ui-react\";\nimport TaskTable from \"./LocalJobTable\";\nimport JSZip from \"jszip\";\n\nconst LocalJobs = () => {\n  const history = useHistory();\n  const [jobKey, setJobKey] = useState(null);\n\n  const uploadFile = async (e) => {\n    const fileReader = new FileReader();\n    const fileblob = e.target.files[0];\n    const type = getExtension(fileblob.name);\n\n    if (type === \"json\") {\n      fileReader.readAsText(fileblob, \"UTF-8\");\n      fileReader.onload = (e) => {\n        const id = objectHash(e.target.result);\n        db.createLocalJob(JSON.parse(e.target.result), id);\n      };\n    }\n    if (type === \"zip\") {\n      let newZip = new JSZip();\n      const zipped = await newZip.loadAsync(fileblob);\n      zipped.forEach(async (relpath, file) => {\n        if (file.name.slice(0, 3) !== \"set\") return;\n        const content = await zipped.file(file.name).async(\"text\");\n        const id = objectHash(content);\n        db.createLocalJob(JSON.parse(content), id);\n      });\n    }\n  };\n\n  const setJobUrlQuery = async () => {\n    // set task.url as url query to open job in annotator\n    history.push(\"/annotator?id=\" + jobKey.id);\n  };\n\n  return (\n    <Grid centered stackable container style={{ marginTop: \"5em\" }}>\n      <Grid.Column style={{ textAlign: \"center\" }} width={8}>\n        <Header textAlign=\"center\" style={{ background: \"#1B1C1D\", color: \"white\" }}>\n          Read codingjob\n        </Header>\n\n        <input type=\"file\" accept=\".json,.zip\" onChange={uploadFile} />\n        <div>\n          <br />\n        </div>\n      </Grid.Column>\n      <Grid.Column width={8}>\n        <Header textAlign=\"center\" style={{ background: \"#1B1C1D\", color: \"white\" }}>\n          Your codingjobs\n        </Header>\n        <Button fluid primary disabled={!jobKey} onClick={setJobUrlQuery}>\n          Open selected codingjob\n        </Button>\n        <br />\n        <br />\n        <TaskTable jobKey={jobKey} setJobKey={setJobKey} />\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nconst getExtension = (filename) => {\n  const parts = filename.split(\".\");\n  return parts[parts.length - 1];\n};\n\nexport default LocalJobs;\n","import React from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport HeaderMenu from \"components/HeaderMenu/HeaderMenu\";\n\n// Main pages. Use below in items to include in header menu\nimport CodingjobManager from \"components/CodingjobManager/CodingjobManager\";\nimport Annotator from \"components/Annotator/Annotator\";\nimport LocalJobs from \"components/LocalJobs/LocalJobs\";\n\n// Change to add new components to the header\n// The first item will be the opening page after login\n// TODO: annotate, manage jobs, monitor jobs\nconst items = [\n  { label: \"Annotator\", path: \"/annotator\", Component: Annotator, menu: false },\n  { label: \"Jobs\", path: \"/jobs\", Component: LocalJobs, menu: true },\n  {\n    label: \"Codingjob manager\",\n    path: \"/manager\",\n    Component: CodingjobManager,\n    menu: true,\n  },\n];\n\nconst createRoutes = (items) => {\n  return items.map((item) => {\n    return <Route exact path={item.path} render={() => <item.Component />} />;\n  });\n};\n\nconst App = () => {\n  return (\n    <HashRouter basename=\"/\">\n      <HeaderMenu items={items}>\n        <Switch>\n          <Route exact path={\"/\"} render={() => <CodingjobManager />} />\n          {createRoutes(items)}\n        </Switch>\n      </HeaderMenu>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import { combineReducers } from \"redux\";\n\nconst eventsBlocked = (state = false, action) => {\n  switch (action.type) {\n    case \"BLOCK_EVENTS\":\n      return action.block;\n    default:\n      return state;\n  }\n};\n\nconst fullScreenNode = (state = null, action) => {\n  switch (action.type) {\n    case \"SET_FULL_SCREEN_NODE\":\n      return action.node;\n    default:\n      return state;\n  }\n};\n\nconst rootReducer = combineReducers({\n  eventsBlocked,\n  fullScreenNode,\n});\n\nexport default rootReducer;\n","import \"semantic-ui-css/semantic.min.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"App\";\nimport { createStore } from \"redux\";\nimport rootReducer from \"reducers\";\nimport { Provider } from \"react-redux\";\nimport { CookiesProvider } from \"react-cookie\";\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <CookiesProvider>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </CookiesProvider>\n  </React.StrictMode>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}