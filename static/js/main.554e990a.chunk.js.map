{"version":3,"sources":["library/tokens.js","library/annotations.js","library/createDocuments.js","library/codebook.js","apis/dexie.js","components/HeaderMenu/Reset.js","apis/storemanager.js","components/HeaderMenu/Persist.js","apis/amcat.js","components/HeaderMenu/Amcat.js","components/HeaderMenu/UserName.js","components/HeaderMenu/HeaderMenu.js","components/CodingjobManager/subcomponents/SelectionTable.js","apis/demodata.js","components/CodingjobManager/1_CodingjobSelector.js","components/CodingjobManager/subcomponents/UploadForms.js","components/CodingjobManager/subcomponents/UploadDocuments.js","components/CodingjobManager/subcomponents/DocumentTable.js","components/CodingjobManager/2_ManageDocuments.js","components/CodingjobManager/subcomponents/UnitSettings.js","library/refNavigation.js","components/Document/subcomponents/AnnotationEvents.js","library/scroll.js","library/tokenDesign.js","components/Document/subcomponents/AnnotateNavigation.js","components/Document/subcomponents/Meta.js","components/Document/subcomponents/Tokens.js","components/Document/subcomponents/useCodeSelector.js","components/Document/subcomponents/useUnit.js","components/Document/subcomponents/SelectVariable.js","components/Document/Document.js","library/sample.js","components/CodingjobManager/subcomponents/useUnits.js","library/selectTokens.js","library/standardizeUnits.js","components/CodingjobManager/subcomponents/Help.js","components/CodingjobManager/subcomponents/CheckboxTable.js","components/CodingjobManager/subcomponents/SampleSettings.js","components/Annotator/subcomponents/IndexController.js","components/CodingjobManager/subcomponents/UnitLayoutSettings.js","components/CodingjobManager/3_ManageCodingUnits.js","actions/index.js","components/CodingjobManager/subcomponents/EditCodePopup.js","components/CodingjobManager/subcomponents/CodesEditor.js","components/CodingjobManager/subcomponents/VariableMenu.js","components/CodingjobManager/subcomponents/QuestionTaskSettings.js","components/CodingjobManager/subcomponents/AnnotateTaskSettings.js","components/CodingjobManager/subcomponents/TaskSettings.js","components/Annotator/subcomponents/AnnotateTable.js","components/Annotator/AnnotateTask.js","components/Annotator/subcomponents/AnswerForms.js","components/Annotator/subcomponents/QuestionForm.js","components/Annotator/QuestionTask.js","components/CodingjobManager/4_ManageTask.js","components/CodingjobManager/subcomponents/DeploySettings.js","components/CodingjobManager/subcomponents/DeployedJobs.js","components/CodingjobManager/5_DeployCodingjob.js","components/CodingjobManager/CodingjobManager.js","components/Annotator/subcomponents/DownloadAnnotations.js","components/Annotator/subcomponents/FullScreenFix.js","components/Annotator/AnnotatorScreen.js","components/Annotator/JobServerClass.js","components/Annotator/Annotator.js","components/LocalJobs/LocalJobTable.js","components/LocalJobs/LocalJobs.js","App.js","reducers/index.js","index.js"],"names":["nlp","extend","paragraphs","parseTokens","text_fields","tokens","token","paragraph","sentence","tokenIndex","t","text","has_unit_start","unit_start","unit_started","unit_ended","text_field","section","name","offset","value","tokenize","json","par","length","sent","sentences","sent2","term","terms","start","unit_end","tokenobj","index","pre","post","codingUnit","push","importTokens","last_paragraph","tokensColumnToRow","last_sentence","totalLength","i","alert","space","repeat","Math","max","includes","importTokenAnnotations","codes","annotations","codeTracker","annotationDict","annotation","Set","add","prevTokenPost","variable","Object","keys","key","values","Array","isArray","columns","n","tokensArray","reduce","obj","column","tokensRowToColumn","tokensObj","exportSpanAnnotations","includeText","uniqueAnnotations","un_ann","ann","span","ann_obj","slice","map","join","importSpanAnnotations","annotationsArray","currentAnnotations","importedAnnotations","prepareSpanAnnotations","trackAnnotations","matchedAnnotations","findMatches","codeCounter","annArray","matchedAnnotation","addAnnotations","newAnnotation","toggleSpanAnnotation","rm","a","end","sectionAnnotations","prepareDocumentBatch","documentList","existingUids","job_id","silent","ids","duplicates","preparedDocuments","result","document","document_id","doc_uid","hash","has","prepareDocument","message","doc","importedTokens","meta_fields","n_paragraphs","n_sentences","tokenAnnotations","getCodebook","taskSettings","codebook","type","variables","filter","v","enabled","standardizeCodes","code","active","tree","parent","makes_irrelevant","required_for","color","randomColor","seed","luminosity","codeBookEdgesToMap","codeMap","children","totalChildren","totalActiveChildren","parentData","activeParent","foldToParent","getCodeTreeArray","showColors","parents","codeTreeArray","fillCodeTreeArray","object","codeTrail","newcodeTrail","level","folded","reverse","textToCodes","root","frozen","updatedCodes","parentLevel","lines","split","line","spaces","search","newCode","flag","trim","newCodeObj","some","c","findParent","irrelevantString","standardizeColor","e","pspaces","Number","str","ctx","createElement","getContext","fillStyle","dbName","idbStores","codingjobs","documents","tasks","deployedJobs","localJobs","localAnnotations","AnnotationDB","this","idb","Dexie","version","stores","delete","Date","now","toString","codingjob","where","equals","docs","count","prop","get","cj","settings","modify","primaryKeys","getCodingjobProp","importedCodes","updateImportedCodes","bulkAdd","documentIds","bulkDelete","limit","ndocs","toArray","title","url","created","codingjobPackage","id","last_modified","unit_id","put","window","location","reload","addCodes","codesArray","from","db","Reset","useState","open","setOpen","history","useHistory","onClick","deleteDB","console","log","Modal","closeIcon","trigger","Menu","Item","icon","style","onClose","onOpen","Header","content","Content","Actions","Button","Icon","persist","navigator","storage","undefined","isStoragePersisted","persisted","Persist","setPersisted","useEffect","then","getToken","host","email","password","Axios","auth","username","response","data","newAmcatSession","Amcat","api","create","baseURL","headers","Authorization","units","provenance","rules","AmcatLogin","setCookie","setHost","setEmail","setPassword","status","setStatus","submitForm","JSON","stringify","path","Grid","inverted","textAlign","height","verticalAlign","Column","maxWidth","as","Form","size","Segment","stacked","Input","fluid","error","onChange","iconPosition","placeholder","Message","useCookies","cookies","amcat","UserName","force","setName","setCookies","storeName","width","onSubmit","d","autoFocus","primary","disabled","withRouter","items","useLocation","menuItems","item","menu","Link","to","header","pathname","label","Sidebar","Pushable","animation","visible","direction","position","Pusher","SelectionTable","selectedRow","setSelectedRow","defaultSize","ROW_ID","activeRow","setActiveRow","useTable","initialState","pageIndex","floor","pageSize","globalFilter","useGlobalFilter","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","pageCount","gotoPage","preGlobalFilteredRows","setGlobalFilter","state","createHeader","headerGroup","TableHeaderCell","className","headerClass","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","Table","compact","unstackable","fixed","singleLine","selectable","fontSize","overflowY","TableHeader","TableRow","getHeaderGroupProps","TableBody","row","onRowSelect","getRowProps","cells","cell","TableCell","getCellProps","createBody","Footer","Row","HeaderCell","colSpan","Pagination","floated","border","firstItem","lastItem","nextItem","prevItem","boundaryRange","ellipsisItem","activePage","totalPages","onPageChange","event","GlobalFilter","target","React","memo","demo_codebook","demo_articles","CodingjobSelector","setSelectedCodingjob","useLiveQuery","String","tableColumns","accessor","centered","stackable","background","Group","widths","setCodingjob","Container","marginTop","overflow","createDemoJob","createCodingjob","job","createDocuments","writeCodebook","CreateCodingjob","codingjobName","setCodingjobName","preventDefault","required","Dimmer","Loader","DeleteCodingjob","deleteCodingjob","UploadTextsCsv","multiple","defaults","keepOriginal","renderTextForms","options","fields","setFields","renderForm","UploadTokensCsv","int","renderTokenForms","UploadCsv","setData","fileRef","useRef","ref","nodrag","onFileLoad","addRemoveButton","onRemoveFile","SubmitForm","setOptions","loading","setLoading","colname","newfields","col","def","csvToJson","fieldIndices","field","subfield","findIndex","k","datarow","original","fieldindex","parseInt","uploadData","preparedData","tokensToDocumentList","setCodingjobProp","current","removeFile","Field","control","allDone","Dropdown","clearable","selection","minWidth","PreviewTable","createRowCells","Cell","Body","createRows","align","UploadDocuments","activeItem","setActiveItem","attached","tabular","renderSwitch","fetchFromDb","setPages","setColumns","getJobDocumentCount","ceil","newdata","getJobDocuments","getColumns","newcolumns","s","tf","DocumentTable","pages","rowObj","find","pageChange","createHeaderRow","createBodyRows","siblingRange","pointing","secondary","defaultActivePage","ManageDocuments","paddingLeft","defaultUnitSettings","textUnit","unitSelection","contextUnit","contextWindow","ordered","balanceDocuments","balanceAnnotations","validCodes","highlightAnnotation","layout","meta","UnitSettings","unitSettings","setUnitSettings","us","float","paddingTop","CodingUnitForm","totalUnits","radioButton","annotated","jump","checked","Radio","marginLeft","grouped","fontWeight","annotationDropdown","ContextUnitForm","setContextWindow","ContextWindow","Popup","hoverable","padding","labelPosition","moveUp","arr","selected","currentPos","getPosition","correctRow","prevColOverlap","nextPos","sameRow","colOverlap","calcColOverlap","left","right","moveDown","b","lowestTop","top","min","bottom","rightestLeft","leftestRight","pctA","pctB","getBoundingClientRect","arrowkeys","KeyEvents","tokenSelection","currentToken","HoldSpace","setMover","setHoldSpace","setHoldArrow","triggerCodePopup","addEventListener","onKeyDown","onKeyUp","removeEventListener","keyCode","annotationFromSelection","startposition","ntokens","counter","MouseEvents","setCurrentToken","setTokenSelection","selectionStarted","tapped","istouch","maxTouchPoints","msMaxTouchPoints","onMouseDown","onMouseMove","onMouseUp","onTouchDown","onContextMenu","currentNode","storeMouseSelection","updateSelection","which","getSelection","empty","button","stopPropagation","movePosition","mover","newPosition","moveSentence","firstUnit","firstAfterUnit","lastIndexOf","scrollTokenToMiddle","getNode","getTokenAttributes","originalTarget","touches","elementFromPoint","clientX","clientY","parentNode","tokenNode","getAttribute","child","parentBounding","clientBounding","parentTop","parentHeight","clientTop","needUp","scrollTop","keepInView","newSelection","AnnotationEvents","eventsBlocked","holdArrow","delay","setTimeout","getColor","annotationCode","foldTo","getColorGradient","colors","pct","gradColors","showAnnotations","variableMap","allowedAnnotations","annotateToken","classList","contains","remove","setTokenColor","nLeft","nRight","allLeft","allRight","anyLeft","anyRight","cl","textColor","preColor","postColor","showSelection","arrayIndex","AnnotationPopup","fullScreenNode","mountNode","context","basic","mouseLeaveDelay","margin","List","backgroundColor","AnnotateNavigation","disableAnnotations","formatValue","parse","replace","Meta","cellStyle","bold","italic","fontStyle","lineHeight","Tokens","centerVertical","setReady","setText","containerRef","firstTextUnitToken","topToCenter","scrollToMiddle","renderText","display","alignItems","Ref","innerRef","flex","maxHeight","section_name","paragraph_nr","sentence_nr","renderSentence","renderParagraph","renderSection","createRef","renderToken","fontstyle","paddingBottom","tokenindex","arrowKeys","CodeSelectorPopup","tokenRef","overwrites","hasOpened","setHasOpened","overwriteWarning","SelectVariablePage","setVariable","setOverwrites","canBeNew","setValue","annId","getOptions","canDelete","rowSize","callback","NewCodePage","codeHistory","setAnnotations","setCodeHistory","textInputRef","focusOnButtons","setFocusOnButtons","onKeydown","useCallback","searchBox","activeElement","click","onButtonSelect","updateAnnotations","buttonOptions","dropdownOptions","buttonMode","selectOnNavigation","minCharacters","autoComplete","onSearchChange","searchQuery","dropdownSelection","ButtonSelection","setSelected","allOptions","setAllOptions","nbuttons","flexWrap","option","borderColor","onMouseOver","deleteCurrent","rmAnnotation","newstate","useCodeSelector","selectedVariable","setSelection","setTokenRef","setTokenAnnotations","fullVariableMap","setFullVariableMap","setVariableMap","setSelectedCodeHistory","vm","cm","popup","useUnit","unit","safetyCheck","returnTokens","preparedUnit","setPreparedUnit","annotationsChanged","SelectVariable","variableNames","move","shiftKey","newIndex","Document","onChangeAnnotations","blockEvents","useSelector","tokensReady","setTokensReady","codeSelectorOpen","drawRandom","array","group","random","seedrandom","indices","ns","splitIndex","distributeN","out","j","getRandomSubarray","temp","shuffled","groupOb","fill","full","remain","remainIndices","select","getUnits","setUnits","getUnitsFromDB","getGroup","cjIndices","docIndex","allUnits","annotationUnits","done","annotationMix","noDuplicates","all","sampleN","addSample","nCodes","concat","orderUnits","getDocuments","minIndex","maxIndex","Infinity","useIndexWindow","indexWindow","each","unitIndex","textFields","getTextFields","metaFields","getMetaFields","parIndex","sentIndex","unique","useCode","valid","itemId","sort","useUnits","selectTokens","newTokens","tokenRange","tokenContext","getTokenRange","getContextRange","startValue","endValue","range","standardizeUnits","standardizedUnits","jobhash","getDocument","docAnnotations","firstUnitIndex","indexOf","lastUnitIndex","fromChar","toChar","unit_index","unparseTokens","mf","date","Help","texts","wide","circular","paddingRight","CheckboxTable","autoResetPage","checkboxHeader","definition","Checkbox","toggle","SampleSettings","SampleForm","delayed","setDelayed","setPct","round","timer","clearTimeout","setWithoutDelay","step","valueN","validCodesColumns","SelectValidCodes","isAnnotation","setValidCodes","newValidCodes","valueMap","N","IndexController","setIndex","canGoForward","canGoBack","reached","quickKeyNext","canMove","setActivePage","delayedActivePage","setDelayedActivePage","boxShadow","leftMargin","borderRadius","pageItem","defaultLayout","l","toUpperCase","replaceAll","LayoutFields","FieldSettings","update","newLayout","labelField","boldField","italicField","sizeField","nr","isNaN","rows","rowSpan","celled","structured","UnitLayoutSettings","f","textField","metaField","ManageCodingUnits","stretched","PreviewDocument","setUnitIndex","standardizedUnit","setStandardizedUnit","singleItemArray","previewItem","block","setFullScreenNode","node","setCodes","codeParent","newCodes","AddCodePopup","alreadyExists","setAlreadyExists","textInput","setTextInput","addCode","TextArea","RmCodePopup","rmCode","keepChildren","ucode","getAllChildren","ButtonGroup","MoveCodePopup","newParent","setNewParent","parentOptions","getAllParentOptions","mvCode","codeIsNew","inline","EditCodePopup","toggleActiveCode","setChangeColor","canAdd","dispatch","useDispatch","popupContent","setPopupContent","buttonStyle","minHeight","changeColorPopup","onInput","addCodePopup","rmCodePopup","moveCodePopup","changePosition","flowing","branchingDropdown","question","questions","onChangeBranching","makesIrrelevantOptions","makes_irrelevant_values","mi","required_for_values","rf","validValues","o","renderLabel","renderMakesIrrelevantLabel","Label","PlainTextEditor","cta","indentSpaces","paramOffset","txt","addSpace","ctaToText","on","overflowX","fontFamily","positive","changeCodeColor","selectedCode","toggleFoldCode","CodesEditor","setCodeMap","setCodeTreeArray","changeColor","formatCode","updateCode","nc","marginRight","borderRight","borderTop","cursor","ChangeName","setVariables","delayedName","setDelayedName","oldname","uniqueName","processNameChange","setNewName","onFocus","onBlur","DeleteButton","deleteOpen","setDeleteOpen","zIndex","newVariables","MoveButtons","onMove","newName","uniqueNewName","existingNames","newname","VariableMenu","newVariableDefaults","questionDefaultSettings","QuestionForm","setTaskSettings","questionIndex","questionForm","setQuestionForm","newTaskSettings","newValue","QuestionFormSettings","warn","setWarn","newWarn","AnnotinderEditor","up","swipes","setSwipes","firstTime","swipe","directions","getSwipeCode","onSelect","newcode","QuestionTaskSettings","setQuestionIndex","variableDefaultSettings","AnnotateForm","variableIndex","annotateForm","annotate","setAnnotateForm","AnnotateTaskSettings","setVariableIndex","defaultTaskSettings","TaskSettings","ts","Divider","TypeForm","COLWIDTHS","annotationRows","AnnotationRow","AnnotateTable","role","AnnotateTask","NextUnitButton","tempDisable","setTempDisable","onNext","ctrlKey","Instructions","ListItem","SearchBoxDropdown","scrolling","upward","searchInput","flexDirection","justifyContent","flexBasis","Annotinder","swipeOptions","alignContent","DONE_COLOR","answerTransition","setAnswerTransition","answered","prepareAnnotations","prepareQuestion","flexFlow","currentAnswer","answer","processIrrelevantBranching","jobServer","postAnnotations","unitId","newQuestionIndex","makesIrrelevant","q","createAnnotationObject","getCurrentAnswer","QuestionIndexStep","canSelect","setCanSelect","cs","newState","setColor","textOverflow","AnswerSegment","showCurrent","sections","lastToken","charspan","indexspan","unitStarted","unitEnded","length_tokens","length_paragraphs","length_sentences","sameQuestion","x","y","annotationObject","preparedQuestion","codeTag","markedString","regex","RegExp","prev","string","documentSettings","QuestionTask","setTokens","setQuestions","refs","box","textReady","setTextReady","questionTaskSettings","splitHeight","textSize","setSettings","divref","prepareQuestions","transition","opacity","transform","setSwipe","textSwipe","useSwipeable","swipeControl","menuSwipe","SettingsPopup","addRequiredFor","haveRequired","hasReq","alwaysDoVertical","triggerdist","transitionTime","swipeConfig","delta","preventDefaultTouchmoveEvent","trackTouch","trackMouse","rotationAngle","getDeltas","deltaX","deltaY","abs","el","getElementsByClassName","scrollHeight","clientHeight","onSwiping","bgc","talign","innerText","onSwiped","ManageTask","cwidths","PreviewTask","setCodebook","singleUnitArray","previewUnit","PreviewQuestionTask","renderTaskPreview","PreviewAnnotateTask","defaultDeploySettings","medium","nCoders","pctOverlap","DeployForm","deploySettings","setDeploySettings","CoderDistribution","overlapSet","avgPerCoder","DeploySettings","deployedTableColumns","DeployedTable","jobKey","setJobKey","jobs","toDateString","resultsTableColumns","ResultsTable","getResultUrl","res","coder","DeployedJobs","setJobUrlQuery","container","qrUrl","encodeURI","linkAndQr","DownloadButton","setTitle","onDownload","cjSets","createCoderSets","zip","JSZip","file","fname","set","generateAsync","saveAs","maxLength","AmcatDeploy","removeCookie","deploy","postCodingjob","createDeployedJob","nOverlap","unitSet","unitSets","createCodingjobPackage","setCodingjobPackage","includeDocuments","authentication","cjpackage","DeployCodingjob","deployButton","viewDeployed","CodingjobManager","menuItem","setMenuItem","selectedCodingjob","catch","nDocuments","Step","description","completed","formatAnnotateTaskResults","localJobServer","formatQuestionsTaskResults","results","unitMap","getAllAnnotations","annotationsPerUnit","unitAnnotations","DownloadAnnotations","filename","coderName","DOMNodeProvider","setNode","FullScreenFix","handle","Finished","AskFullScreenModal","askFullscreen","setAskFullscreen","enter","exit","FullScreenButton","link","ExitButton","goBack","corner","Task","AnnotatorScreen","fsHandle","useFullScreenHandle","progressIndex","getUnit","JobServerRemote","axios","success","JobServerLocal","getUnitAnnotations","createLocalJobServer","setJobServer","init","createRemoteJobServer","parseQueryString","substring","part","decodeURIComponent","LocalJobTable","last_modified_str","progress","getExtension","parts","LocalJobs","uploadFile","fileReader","FileReader","fileblob","files","readAsText","onload","objectHash","createLocalJob","newZip","loadAsync","zipped","forEach","relpath","async","accept","Component","queries","App","basename","exact","rootReducer","combineReducers","action","store","createStore","ReactDOM","StrictMode","CookiesProvider","querySelector"],"mappings":"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","file":"static/js/main.554e990a.chunk.js","sourcesContent":["import nlp from \"compromise\";\nimport paragraphs from \"compromise-paragraphs\";\nnlp.extend(paragraphs);\n\n/**\n * Tokenize a document, but allowing for multiple text fields to be concatenated as different sections.\n * @param {*} text_fields  An array of objects, where each object has the structure {name, value}. 'name' becomes the name of the section, 'value' is the text\n *                         each item can also have an 'offset' key with an integer value, in case the value is a subset starting at the [offset] character (this is needed to get the correct positions in the original document)\n *                         each item can also have a 'unit_start' and 'unit_end' key, each with an integer value to indicate where in this text_field the codingUnit starts/ends.\n *                              If both unit_start and unit_end is omitted, the whole text is considered codingUnit.\n * @returns\n */\nexport const parseTokens = (text_fields) => {\n  const tokens = [];\n  let token = null;\n  let paragraph = 0; // offset can be used if position in original article is known\n  let sentence = 0;\n  let tokenIndex = 0;\n  let t = null;\n  let text = null;\n\n  let has_unit_start = false;\n  for (let text_field of text_fields) if (text_field.unit_start != null) has_unit_start = true;\n  let unit_started = !has_unit_start; // if unit start not specified, start from beginning\n  let unit_ended = false;\n\n  for (let text_field of text_fields) {\n    let section = text_field.name || \"text\";\n    let offset = text_field.offset || 0;\n\n    text = text_field.value;\n    t = nlp.tokenize(text).paragraphs().json({ offset: true });\n    // map to single array.\n    for (let par = 0; par < t.length; par++) {\n      for (let sent = 0; sent < t[par].sentences.length; sent++) {\n        for (let sent2 = 0; sent2 < t[par].sentences[sent].length; sent2++) {\n          // for some reason there's an extra array layer between sents and pars...\n          // I've only found cases where lenght is 1, but I'll map it just in case\n          for (let term = 0; term < t[par].sentences[sent][sent2].terms.length; term++) {\n            token = t[par].sentences[sent][sent2].terms[term];\n\n            if (\n              text_field.unit_start != null &&\n              token.offset.start + offset >= text_field.unit_start\n            )\n              unit_started = true;\n            if (text_field.unit_end != null && token.offset.start + offset > text_field.unit_end)\n              unit_ended = true;\n\n            const tokenobj = {\n              section: section,\n              offset: token.offset.start + offset,\n              length: token.offset.length,\n              paragraph: paragraph,\n              sentence: sentence,\n              index: tokenIndex,\n              text: token.text,\n              pre: token.pre,\n              post: token.post,\n              codingUnit: unit_started & !unit_ended,\n            };\n            tokens.push(tokenobj);\n            tokenIndex++;\n          }\n        }\n        sentence++;\n      }\n      paragraph++;\n    }\n  }\n  return tokens;\n};\n\nexport const importTokens = (tokens) => {\n  tokens = tokensColumnToRow(tokens);\n\n  let paragraph = 0;\n  let last_paragraph = tokens[0].paragraph;\n\n  let sentence = 0;\n  let last_sentence = tokens[0].sentence;\n\n  let offset = 0;\n  let totalLength = 0;\n\n  for (let i = 0; i < tokens.length; i++) {\n    if (tokens[i].text == null) {\n      if (tokens[i].token != null) {\n        tokens[i].text = tokens[i].token;\n      } else {\n        alert(\"Invalid token data:\\n\\nimported tokens must have 'text' or 'token' field\");\n        return null;\n      }\n    }\n    if (tokens[i].offset == null && tokens[i].start != null) tokens[i].offset = tokens[i].start;\n    if (tokens[i].length == null) tokens[i].length = tokens[i].text.length;\n\n    if (tokens[i].pre == null) tokens[i].pre = \"\";\n    if (tokens[i].post == null && tokens[i].space != null) tokens[i].post = tokens[i].space;\n    if (tokens[i].post == null) {\n      if (tokens[i].offset != null && tokens[i].length != null) {\n        tokens[i].post =\n          i < tokens[i].length - 1\n            ? \" \".repeat(Math.max(0, tokens[i + 1].offset - tokens[i].offset - tokens[i].length))\n            : \"\";\n      } else {\n        tokens[i].post = \" \";\n      }\n    }\n\n    totalLength = tokens[i].length + tokens[i].post.length;\n    if (i < tokens.length - 1) totalLength = totalLength + (tokens[i + 1].pre?.length || 0);\n\n    if (tokens[i].offset == null) {\n      tokens[i].offset = offset;\n      offset = offset + totalLength;\n    }\n\n    if (i < tokens.length - 1) {\n      if (!tokens[i].section || tokens[i].section === tokens[i + 1].section) {\n        if (tokens[i + 1].offset == null && tokens[i + 1].start != null)\n          tokens[i + 1].offset = tokens[i + 1].start;\n        if (tokens[i + 1].offset && tokens[i + 1].offset < tokens[i].offset + totalLength) {\n          alert(\n            `Invalid token position data. The length of \"${\n              tokens[i].pre + tokens[i].text + tokens[i].post\n            }\" on position ${tokens[i].offset} exeeds the offset/start position of the next token`\n          );\n          return null;\n        }\n      }\n    }\n\n    // ensure sentence counter\n    // currently doesn't actually do sentence boundary detection (if people want that,\n    // they should include sentence in the input)\n    // if sentence exists, still overwrite with new counter to ensure that it adds up\n    // also increment sentence on new paragraph\n    if (tokens[i].sentence == null) {\n      tokens[i].sentence = sentence;\n      if (tokens[i].text.includes(\"\\n\") || tokens[i].post.includes(\"\\n\")) sentence++;\n    } else {\n      if (tokens[i].paragraph !== last_paragraph || tokens[i].sentence !== last_sentence) {\n        last_sentence = tokens[i].sentence;\n        sentence++;\n      }\n      tokens[i].sentence = sentence;\n    }\n\n    // ensure paragraph counter\n    // if paragraph exists, still overwrite with new counter to ensure that it adds up\n    if (tokens[i].paragraph == null) {\n      tokens[i].paragraph = paragraph;\n      if (tokens[i].text.includes(\"\\n\") || tokens[i].post.includes(\"\\n\")) paragraph++;\n    } else {\n      if (tokens[i].paragraph !== last_paragraph) {\n        last_paragraph = tokens[i].paragraph;\n        paragraph++;\n      }\n      tokens[i].paragraph = paragraph;\n    }\n\n    if (tokens[i].section == null) tokens[i].section = \"text\";\n    tokens[i].index = i;\n  }\n\n  return tokens;\n};\n\nexport const importTokenAnnotations = (tokens, codes) => {\n  // returns annotations, and also modifies the codes object\n  // codes keeps track of annotations to create a codebook\n  if (tokens.length === 0) return [];\n  let annotations = [];\n  let codeTracker = {};\n  let section = tokens[0].section;\n  for (let i = 0; i < tokens.length; i++) {\n    if (!tokens[i].annotations) {\n      for (let annotation of Object.values(codeTracker)) annotations.push(annotation);\n      codeTracker = {};\n      continue;\n    }\n\n    let annotationDict = {};\n\n    for (let annotation of tokens[i].annotations) {\n      if (annotation.value === \"\") continue; // Should be a checkbox when importing\n\n      if (!codes[annotation.name]) {\n        codes[annotation.name] = new Set();\n      }\n      codes[annotation.name].add(annotation.value);\n\n      annotationDict[annotation.name] = annotation.value;\n\n      const prevTokenPost = i > 0 ? tokens[i - 1].post : \"\";\n      if (codeTracker[annotation.name] == null)\n        codeTracker[annotation.name] = {\n          index: i,\n          variable: annotation.name,\n          value: annotation.value,\n          offset: tokens[i].offset,\n          text: tokens[i].text,\n          section: tokens[i].section,\n          length: tokens[i].length,\n        };\n      if (codeTracker[annotation.name].value === annotation.value) {\n        codeTracker[annotation.name].length =\n          tokens[i].offset + tokens[i].length - codeTracker[annotation.name].offset;\n        codeTracker[annotation.name].text += prevTokenPost + tokens[i].pre + tokens[i].post;\n      }\n    }\n\n    for (let key of Object.keys(codeTracker)) {\n      if (annotationDict[key] == null) {\n        annotations.push(codeTracker[key]);\n        delete codeTracker[key];\n        continue;\n      }\n      if (annotationDict[key] !== codeTracker[key].value) {\n        annotations.push(codeTracker[key]);\n        codeTracker[key] = {\n          index: i,\n          variable: key,\n          value: annotationDict[key],\n          offset: tokens[i].offset,\n          text: tokens[i].text,\n          section: tokens[i].section,\n          length: tokens[i].length,\n        };\n      }\n    }\n\n    if (i < tokens.length - 1 && tokens[i + 1].section !== section) {\n      for (let annotation of Object.values(codeTracker)) annotations.push(annotation);\n      codeTracker = {};\n      section = tokens[i].section;\n      continue;\n    }\n  }\n\n  for (let annotation of Object.values(codeTracker)) annotations.push(annotation);\n\n  return annotations;\n};\n\n/**\n * Check if tokens are in column format\n *  [{doc_id: [1,1,1,1,...]},{token_id: [1,2,3,4,etc.]}]\n * and if so, change to row format\n *  {doc_id: 1, token_id: 1}, {doc_id: 2, token_id: 2}\n *\n * row format is easier to work with, but column format is more efficient\n * @param {} tokens\n */\nexport const tokensColumnToRow = (tokens) => {\n  if (Array.isArray(tokens)) return tokens;\n  const columns = Object.keys(tokens);\n  const n = tokens[columns[0]].length;\n\n  const tokensArray = [];\n  for (let i = 0; i < n; i++) {\n    const token = columns.reduce((obj, column) => {\n      obj[column] = tokens[column][i];\n      return obj;\n    }, {});\n    tokensArray.push(token);\n  }\n\n  return tokensArray;\n};\n\n/**\n * Check if tokens are in row format\n *  {doc_id: 1, token_id: 1}, {doc_id: 2, token_id: 2}\n * and if so, change to column format\n *  [{doc_id: [1,1,1,1,...]},{token_id: [1,2,3,4,etc.]}]\n *\n * row format is easier to work with, but column format is more efficient\n * @param {} tokens\n */\nexport const tokensRowToColumn = (tokens) => {\n  if (!Array.isArray(tokens)) return tokens;\n\n  const tokensObj = {};\n  for (let token of tokens) {\n    for (let column of Object.keys(token)) {\n      if (!tokensObj[column]) tokensObj[column] = [];\n      tokensObj[column].push(token[column]);\n    }\n  }\n\n  return tokensObj;\n};\n","export const exportSpanAnnotations = (annotations, tokens, includeText = false) => {\n  // export annotations from the object format (for fast use in the annotator) to array format\n  if (Object.keys(annotations).length === 0) return [];\n  const uniqueAnnotations = Object.keys(annotations).reduce((un_ann, index) => {\n    const ann = annotations[index];\n    for (let key of Object.keys(ann)) {\n      //const endIndex = if (index === 'unit' ? index : )\n\n      if (index !== \"unit\") if (ann[key].index !== ann[key].span[0]) continue;\n\n      const ann_obj = {\n        variable: key,\n        value: ann[key].value,\n        section: ann[key].section,\n        offset: ann[key].offset,\n        length: ann[key].length,\n      };\n\n      if (includeText) {\n        const span = ann[key].span;\n        const text = tokens\n          .slice(span[0], span[1] + 1)\n          .map((t) => t.pre + t.text + t.post)\n          .join(\"\");\n        ann_obj[\"text\"] = text;\n      }\n\n      un_ann.push(ann_obj);\n    }\n    return un_ann;\n  }, []);\n  return uniqueAnnotations;\n};\n\nexport const importSpanAnnotations = (annotationsArray, tokens, currentAnnotations = {}) => {\n  if (annotationsArray.length === 0) return { ...currentAnnotations };\n  // import span annotations. Uses the offset to match annotations to tokens\n  const importedAnnotations = prepareSpanAnnotations(annotationsArray);\n  let trackAnnotations = {};\n  let matchedAnnotations = [];\n\n  for (let token of tokens) {\n    findMatches(token, importedAnnotations, trackAnnotations, matchedAnnotations);\n  }\n\n  const codeCounter = {};\n  const annArray = [];\n  for (let matchedAnnotation of matchedAnnotations) {\n    if (!codeCounter[matchedAnnotation.variable]) codeCounter[matchedAnnotation.variable] = 0;\n    codeCounter[matchedAnnotation.variable]++;\n    annArray.push(matchedAnnotation);\n  }\n\n  let addAnnotations = [];\n  for (let ann of annArray) {\n    for (let i = ann.span[0]; i <= ann.span[1]; i++) {\n      let newAnnotation = { ...ann };\n      newAnnotation.index = i;\n      addAnnotations.push(newAnnotation);\n    }\n  }\n\n  for (let ann of annArray) {\n    currentAnnotations = toggleSpanAnnotation(currentAnnotations, ann, false);\n  }\n\n  return currentAnnotations;\n};\n\nexport const toggleAnnotation = (annotations, unit, index, group, annotation) => {\n  if (!annotations[unit][index]) annotations[unit][index] = {};\n\n  if (annotation === null) {\n    delete annotations[unit][index][group];\n    if (Object.keys(annotations[unit][index]).length === 0) {\n      delete annotations[unit][index];\n    }\n  } else {\n    annotations[unit][index][group] = annotation;\n  }\n\n  return annotations;\n};\n\nexport const toggleSpanAnnotation = (annotations, newAnnotation, rm) => {\n  // Add span annotations in a way that prevents double assignments of the same group to a token\n\n  for (let index = newAnnotation.span[0]; index <= newAnnotation.span[1]; index++) {\n    let a = newAnnotation;\n\n    // if group in annotations, remove it\n    if (annotations[index]) {\n      if (annotations[index][a.variable]) {\n        const span = annotations[index][a.variable].span;\n        for (let i = span[0]; i <= span[1]; i++) {\n          if (annotations[i]) {\n            if (annotations[i][a.variable]) {\n              delete annotations[i][a.variable];\n              if (Object.keys(annotations[i]).length === 0) {\n                delete annotations[i];\n              }\n            }\n          }\n        }\n      }\n    }\n\n    if (!rm) {\n      if (!annotations[index]) annotations[index] = {};\n      annotations[index][a.variable] = {\n        index: index,\n        span: [a.span[0], a.span[1]],\n        length: a.length,\n        value: a.value,\n        section: a.section,\n        offset: a.offset,\n      };\n    }\n  }\n\n  return annotations;\n};\n\nconst prepareSpanAnnotations = (annotations) => {\n  if (!annotations || annotations === \"\") return {};\n  // create an object where the key is a section+offset, and the\n  // value is an array that tells which variables start and end there\n  // used in Tokens for matching to token indices\n  return annotations.reduce((obj, ann) => {\n    if (!obj[ann.section]) obj[ann.section] = {};\n    if (!obj[ann.section][ann.offset]) obj[ann.section][ann.offset] = { start: [], end: [] };\n    if (!obj[ann.section][ann.offset + ann.length - 1])\n      obj[ann.section][ann.offset + ann.length - 1] = { start: [], end: [] };\n    obj[ann.section][ann.offset].start.push(ann); // for the starting point the full annotation is given, so that we have all the information\n    obj[ann.section][ann.offset + ann.length - 1].end.push(ann.variable); // for the ending point we just need to know the variable\n    return obj;\n  }, {});\n};\n\nconst findMatches = (token, importedAnnotations, trackAnnotations, matchedAnnotations) => {\n  const start = token.offset;\n  const end = token.offset + token.length - 1;\n  if (!importedAnnotations[token.section]) return;\n  const sectionAnnotations = importedAnnotations[token.section];\n\n  for (let i = start; i <= end; i++) {\n    if (sectionAnnotations[i]) {\n      for (let annotation of sectionAnnotations[i].start) {\n        trackAnnotations[annotation.variable] = { ...token };\n        trackAnnotations[annotation.variable].variable = annotation.variable;\n        trackAnnotations[annotation.variable].value = annotation.value;\n        trackAnnotations[annotation.variable].offset = start;\n        trackAnnotations[annotation.variable].length = null;\n        trackAnnotations[annotation.variable].span = [token.index];\n      }\n\n      for (let variable of sectionAnnotations[i].end) {\n        if (!trackAnnotations[variable]) continue;\n        trackAnnotations[variable].span.push(token.index);\n        trackAnnotations[variable].length =\n          token.offset + token.length - trackAnnotations[variable].offset;\n        matchedAnnotations.push(trackAnnotations[variable]);\n        delete trackAnnotations[variable];\n      }\n    }\n  }\n};\n","import hash from \"object-hash\";\nimport { importTokens, importTokenAnnotations, parseTokens } from \"library/tokens\";\nimport { importSpanAnnotations } from \"library/annotations\";\n\n/**\n * Prepares a batch of documents. Returns [documents, codes], where codes contains the annotation codes used in the documents\n *\n * @param {*} documentList an Array with documents\n * @param {*} existingUids An (optional) array of existing unique (hash-based) ids, to ignore duplicate articles\n * @param {*} job_id       A unique job_id for which the document is intended. If not given, assumes it's a temp document (that won't be stored in indexedDB)\n * @param {*} silent       Whether or not to report if items have been created\n */\nexport const prepareDocumentBatch = (\n  documentList,\n  existingUids = [],\n  job_id = \"TEMP\",\n  silent = true\n) => {\n  let ids = new Set(existingUids);\n\n  let n = 0;\n  let duplicates = 0;\n  let codes = {};\n\n  const preparedDocuments = documentList.reduce((result, document) => {\n    if (document.document_id == null) return result;\n    n++;\n    const doc_uid = hash([document, job_id]); // codingjob included for doc_uid (unique id) hash\n    if (!ids.has(doc_uid)) {\n      ids.add(doc_uid);\n\n      result.push({\n        doc_uid: doc_uid,\n        job_id: job_id,\n        ...prepareDocument(document, codes), // the codes  are filled within\n      });\n    } else {\n      duplicates++;\n    }\n    return result;\n  }, []);\n\n  if (!silent) {\n    let message = `Created ${n - duplicates} new documents.`;\n    if (duplicates > 0) message = message + ` Ignored ${duplicates} duplicates`;\n    alert(message);\n  }\n\n  return [preparedDocuments, codes];\n};\n\nexport const prepareDocument = (document, codes = {}) => {\n  const doc = { ...document };\n\n  if (doc.tokens) {\n    doc.importedTokens = true;\n    doc.tokens = importTokens(document.tokens);\n  } else {\n    doc.importedTokens = false;\n    if (!doc.text_fields && doc.text) doc.text_fields = [{ name: \"text\", value: doc.text }];\n    doc.tokens = parseTokens([...doc.text_fields]);\n  }\n\n  doc.meta_fields = document.meta_fields || [];\n\n  if (doc.tokens.length > 0) {\n    doc.n_paragraphs = doc.tokens[doc.tokens.length - 1].paragraph;\n    doc.n_sentences = doc.tokens[doc.tokens.length - 1].sentence;\n  } else {\n    doc.n_paragraphs = 0;\n    doc.n_sentences = 0;\n  }\n\n  if (doc.annotations) {\n    doc.annotations = importSpanAnnotations([...doc.annotations], doc.tokens);\n  } else doc.annotations = {};\n\n  const tokenAnnotations = importTokenAnnotations(doc.tokens, codes); // also fills codes\n  if (tokenAnnotations.length > 0)\n    doc.annotations = importSpanAnnotations(tokenAnnotations, doc.tokens, doc.annotations);\n\n  return doc;\n};\n","import randomColor from \"randomcolor\";\n\n/**\n * Transform the taskSettings into the codebook. The difference is that taskSettings also contains information that's only relevant in the manager. The codebook contains only the information relevant for the annotator\n *  Also removes other information that's only relevant for the manager\n * @param {*} taskSettings\n */\nexport const getCodebook = (taskSettings) => {\n  const codebook = {\n    type: taskSettings.type,\n    ...taskSettings[taskSettings.type],\n  };\n  if (taskSettings.type === \"annotate\")\n    codebook.variables = codebook.variables.filter((v) => v.enabled == null || v.enabled === true);\n\n  return codebook;\n};\n\nexport const standardizeCodes = (codes) => {\n  return codes.map((code, i) => {\n    if (typeof code !== \"object\") code = { code };\n    if (code.active == null) code.active = true;\n    if (code.tree == null) code.tree = [];\n    if (code.parent == null) code.parent = \"\";\n    if (code.makes_irrelevant == null) code.makes_irrelevant = [];\n    if (typeof code.makes_irrelevant !== \"object\") code.makes_irrelevant = [code.makes_irrelevant];\n\n    if (code.required_for == null) code.required_for = [];\n    if (typeof code.required_for !== \"object\") code.required_for = [code.required_for];\n\n    if (code.color == null) code.color = randomColor({ seed: code.code, luminosity: \"light\" });\n    return code;\n  });\n};\n\nexport const codeBookEdgesToMap = (codes) => {\n  const standardizedCodes = standardizeCodes(codes);\n  // the payload is an array of objects, but for efficients operations\n  // in the annotator we convert it to an object with the codes as keys\n  const codeMap = standardizedCodes.reduce((result, code) => {\n    result[code.code] = {\n      ...code,\n      children: [],\n      totalChildren: 0,\n      totalActiveChildren: 0,\n    };\n    return result;\n  }, {});\n\n  // If there are codes of which the parent doesn't exist, add the parent\n  const originalKeys = Object.keys(codeMap);\n  for (const key of originalKeys) {\n    if (codeMap[key].parent !== \"\" && !codeMap[codeMap[key].parent]) {\n      codeMap[codeMap[key].parent] = {\n        code: codeMap[key].parent,\n        parent: \"\",\n        children: [],\n        active: false,\n        totalChildren: 0,\n        totalActiveChildren: 0,\n      };\n    }\n  }\n\n  for (const code of Object.keys(codeMap)) {\n    [codeMap[code].tree, codeMap[code].activeParent, codeMap[code].foldToParent] = parentData(\n      codeMap,\n      code\n    );\n\n    if (codeMap[code].parent) codeMap[codeMap[code].parent].children.push(code);\n\n    for (const parent of codeMap[code].tree) {\n      codeMap[parent].totalChildren++;\n      if (codeMap[code].active && codeMap[code].activeParent) {\n        codeMap[parent].totalActiveChildren++;\n      }\n    }\n  }\n\n  return codeMap;\n};\n\nexport const getCodeTreeArray = (codeMap, showColors) => {\n  let parents = Object.keys(codeMap).filter(\n    (code) => !codeMap[code].parent || codeMap[code].parent === \"\"\n  );\n  const codeTreeArray = [];\n  fillCodeTreeArray(codeMap, parents, codeTreeArray, [], showColors);\n  return codeTreeArray.map((object, i) => ({ ...object, i: i }));\n};\n\nconst fillCodeTreeArray = (codeMap, parents, codeTreeArray, codeTrail, showColors) => {\n  for (const code of parents) {\n    let newcodeTrail = [...codeTrail];\n    newcodeTrail.push(code);\n\n    codeTreeArray.push({\n      ...codeMap[code],\n      code: code,\n      codeTrail: codeTrail,\n      level: codeTrail.length,\n      color: codeMap[code].color\n        ? codeMap[code].color\n        : randomColor({ seed: code, luminosity: \"light\" }),\n    });\n\n    if (codeMap[code].children) {\n      fillCodeTreeArray(codeMap, codeMap[code].children, codeTreeArray, newcodeTrail, showColors);\n    }\n  }\n};\n\nconst parentData = (codeMap, code) => {\n  // get array of parents from highest to lowers (tree)\n  // look at parents to see if one is not active (activeParent).\n  //    (this only matters if the same parent is folded, otherwise only the parent code itself is inactive)\n  // look if there are folded parents, and if so pick the highest (foldToParent)\n  const parents = [];\n  let activeParent = true;\n  let foldToParent = \"\";\n\n  let parent = codeMap[code].parent;\n  while (parent) {\n    parents.push(parent);\n    if (codeMap[parent].folded != null && codeMap[parent].folded) {\n      foldToParent = parent; // this ends up being the highest level folded parent\n\n      // code is inactive if only one of the folded parents is inactive\n      if (codeMap[parent].active != null && !codeMap[parent].active) activeParent = false;\n    }\n    parent = codeMap[parent].parent;\n  }\n  return [parents.reverse(), activeParent, foldToParent];\n};\n\nexport const ctaToText = (cta, indentSpaces = 2, paramOffset = 25) => {\n  let txt = \"\";\n  let line;\n  for (let code of cta) {\n    line = \"\";\n    line += Array(1 + code.level * indentSpaces).join(\" \");\n    line += code.code;\n\n    const addSpace = paramOffset - line.length;\n    if (addSpace > 0) line += Array(addSpace).join(\" \");\n    line += ` #color(${code.color})`;\n    if (!code.active) line += \" #disabled\";\n    if (code.folded) line += \" #folded\";\n    if (code.makes_irrelevant && code.makes_irrelevant.length > 0)\n      line += ` #irrelevant(${code.makes_irrelevant.join(\",\")})`;\n    txt += line + \"\\n\";\n  }\n  return txt;\n};\n\nexport const textToCodes = (text, root, codes, frozen) => {\n  const codeMap = codes.reduce((obj, code) => {\n    if (typeof code === \"object\") {\n      obj[code.code] = 1;\n      obj[code.parent] = 1;\n    } else obj[code] = 1;\n    return obj;\n  }, {});\n  const duplicates = [];\n  const updatedCodes = [...codes];\n  const parentLevel = {};\n  const lines = text.split(\"\\n\");\n  for (let line of lines) {\n    const spaces = line.search(/\\S/);\n\n    let newCode = line;\n    for (let flag of [\"color\", \"disabled\", \"folded\", \"irrelevant\"]) {\n      newCode = newCode.split(`#${flag}`)[0].trim();\n    }\n    if (newCode === \"\") continue;\n    if (codeMap[newCode]) duplicates.push(newCode);\n    codeMap[newCode] = 1;\n\n    const newCodeObj = {\n      code: newCode,\n      frozen: frozen.some((c) => c.code === newCode),\n      parent: findParent(parentLevel, root, newCode, spaces),\n      active: !line.includes(\"#disabled\"),\n      folded: line.includes(\"#folded\"),\n    };\n\n    if (line.includes(\"#irrelevant\")) {\n      const irrelevantString = line.split(\"#irrelevant(\")[1].split(\")\")[0];\n      newCodeObj.makes_irrelevant = irrelevantString.split(\",\");\n    }\n    if (line.includes(\"#color\")) {\n      let color = line.split(\"#color(\")[1].split(\")\")[0];\n      newCodeObj.color = standardizeColor(color);\n    }\n    updatedCodes.push(newCodeObj);\n  }\n\n  for (let code of frozen) {\n    if (updatedCodes.some((e) => e.code === code.code)) continue;\n    code.parent = \"\";\n    updatedCodes.push(code);\n  }\n\n  return [updatedCodes, duplicates];\n};\n\nconst findParent = (parentLevel, code, newCode, spaces) => {\n  // also updates parentLevel\n  let parent = code;\n  for (let pspaces of Object.keys(parentLevel)) {\n    pspaces = Number(pspaces);\n    if (spaces > pspaces) {\n      parent = parentLevel[pspaces];\n    } else {\n      delete parentLevel[pspaces];\n      parentLevel[spaces] = newCode;\n    }\n  }\n  parentLevel[spaces] = newCode;\n  return parent;\n};\n\nconst standardizeColor = (str) => {\n  if (!str) return \"#FFFFFF\";\n  // https://stackoverflow.com/questions/1573053/javascript-function-to-convert-color-names-to-hex-codes\n  const ctx = document.createElement(\"canvas\").getContext(\"2d\");\n  ctx.fillStyle = str.trim();\n  const color = ctx.fillStyle; // make lighter\n  return color;\n};\n","import Dexie from \"dexie\";\nimport hash from \"object-hash\";\n\nimport { prepareDocumentBatch } from \"library/createDocuments\";\nimport { standardizeCodes } from \"library/codebook\";\n\nconst dbName = \"CSSannotator_V1\";\nconst idbStores = {\n  codingjobs: \"job_id, name\", // unindexed fields: jobcreator, codingscheme, codebook, codebookEdit, returnAddress\n  documents: \"doc_uid, job_id\", // unindexed fields: title, text, meta, tokens, annotations\n  tasks: \"[title+url], last_modified, url\", // unindexed fields:  codebook, items\n\n  deployedJobs: \"url\", // unindexed: title, created\n  localJobs: \"[title+id], last_modified, id\", // unindexed fields:  codebook, items\n  localAnnotations: \"[id+unit_id], id\",\n};\n\nclass AnnotationDB {\n  constructor() {\n    this.idb = new Dexie(dbName);\n\n    //for testing, clean db on refresh\n    // this.idb.delete();\n    // this.idb = new Dexie(dbName);\n    try {\n      this.idb.version(2).stores(idbStores);\n    } catch (e) {\n      // this is not a good idea for production, but for now it helps solve the problem\n      // that whenever the schemas are changed (in development), everything breaks\n      this.idb.delete();\n      this.idb = new Dexie(dbName);\n      this.idb.version(2).stores(idbStores);\n    }\n  }\n\n  // CODINGJOBS\n  async createCodingjob(name, job_id = null) {\n    if (!job_id) job_id = hash([name, Date.now().toString()]);\n    this.idb.codingjobs.add({\n      job_id,\n      name,\n    });\n    return { job_id, name };\n  }\n  async deleteCodingjob(codingjob) {\n    const docs = await this.idb.documents.where(\"job_id\").equals(codingjob.job_id);\n    const ndocs = await docs.count();\n    if (ndocs > 0) docs.delete();\n    return this.idb.codingjobs.delete(codingjob.job_id);\n  }\n\n  async getCodingjobProp(codingjob, prop) {\n    let cj = await this.idb.codingjobs.get(codingjob.job_id);\n    return cj[prop];\n  }\n  async setCodingjobProp(codingjob, prop, value) {\n    let cj = await this.idb.codingjobs.get(codingjob.job_id);\n    if (cj.settings == null) cj.settings = {};\n    return this.idb.codingjobs\n      .where(\"job_id\")\n      .equals(codingjob.job_id)\n      .modify({ [prop]: value });\n  }\n\n  // DOCUMENTS\n  async createDocuments(codingjob, documentList, silent = false) {\n    let ids = new Set(\n      await this.idb.documents.where(\"job_id\").equals(codingjob.job_id).primaryKeys()\n    );\n\n    const [preparedDocuments, codes] = prepareDocumentBatch(\n      documentList,\n      ids,\n      codingjob.job_id,\n      silent\n    );\n\n    let importedCodes = await this.getCodingjobProp(codingjob, \"importedCodes\");\n    importedCodes = updateImportedCodes(codingjob, importedCodes, codes);\n\n    this.idb.codingjobs.where(\"job_id\").equals(codingjob.job_id).modify({ importedCodes });\n    return this.idb.documents.bulkAdd(preparedDocuments);\n  }\n\n  async deleteDocuments(documents) {\n    const documentIds = documents.map((document) => document.doc_uid);\n    return this.idb.documents.bulkDelete(documentIds);\n  }\n\n  async getJobDocuments(codingjob, offset, limit) {\n    if (offset !== null && offset < 0) return null;\n    let documents = await this.idb.documents.where(\"job_id\").equals(codingjob.job_id);\n    const ndocs = await documents.count();\n    if (offset !== null && offset > ndocs - 1) return null;\n    if (limit !== null) documents = documents.offset(offset).limit(limit);\n    return documents.toArray();\n  }\n\n  async getJobDocumentCount(codingjob) {\n    return this.idb.documents.where(\"job_id\").equals(codingjob.job_id).count();\n  }\n\n  async getDocuments(codingjob) {\n    return this.idb.documents.where(\"job_id\").equals(codingjob.job_id);\n  }\n\n  async getDocument(doc_uid) {\n    return this.idb.documents.get(doc_uid);\n  }\n\n  async writeTokens(document, tokens) {\n    return this.idb.documents.where(\"doc_uid\").equals(document.doc_uid).modify({ tokens: tokens });\n  }\n\n  // async writeAnnotations(document, annotations) {\n  //   return this.idb.documents\n  //     .where(\"doc_uid\")\n  //     .equals(document.doc_uid)\n  //     .modify({ annotations: annotations });\n  // }\n\n  // DEPLOYED JOBS\n  async createDeployedJob(title, url) {\n    const exists = await this.idb.deployedJobs.get({ url });\n\n    if (!exists) {\n      this.idb.deployedJobs.add({\n        title,\n        url,\n        created: new Date(),\n      });\n    } else {\n      this.idb.deployedJobs.get({ url }).modify({ created: new Date() });\n    }\n  }\n\n  // LOCAL JOBS\n  async createLocalJob(codingjobPackage, id) {\n    const exists = await this.idb.localJobs.get({ id });\n\n    if (!exists) {\n      this.idb.localJobs.add({\n        ...codingjobPackage,\n        id,\n        last_modified: new Date(),\n      });\n    } else {\n      alert(\"This job has already been created before\");\n    }\n  }\n\n  // ANNOTATIONS\n  async getUnitAnnotations(job_id, unit_id) {\n    return this.idb.localAnnotations.get({ id: job_id, unit_id });\n  }\n  async getAllAnnotations(job_id) {\n    return this.idb.localAnnotations.where(\"id\").equals(job_id).toArray();\n  }\n  async postAnnotations(job_id, unit_id, annotations) {\n    return this.idb.localAnnotations.put({ unit_id, id: job_id, annotations }, [job_id, unit_id]);\n  }\n\n  // CLEANUP\n  async deleteDB() {\n    await this.idb.delete();\n    this.idb = new Dexie(dbName);\n    this.idb.version(2).stores(idbStores);\n    window.location.reload(false);\n  }\n}\n\nconst updateImportedCodes = (codingjob, importedCodes, codes) => {\n  const addCodes = Object.keys(codes).reduce((obj, key) => {\n    const codesArray = standardizeCodes(Array.from(codes[key]));\n    obj[key] = codesArray.map((code) => ({ ...code, frozen: true }));\n    return obj;\n  }, {});\n\n  if (!importedCodes) return addCodes;\n\n  for (let key of Object.keys(addCodes)) {\n    if (!importedCodes[key]) {\n      importedCodes[key] = addCodes[key];\n    } else {\n      for (let code of addCodes[key]) {\n        if (!importedCodes[key].some((c) => c.code === code.code)) {\n          importedCodes[key].push(code);\n        }\n      }\n    }\n  }\n  return importedCodes;\n};\n\n// const safeNewCode = (code, codeMap, parentMap, i) => {\n//   // for preventing overlapping code names\n//   if (!codeMap[code] && !parentMap[code]) return code;\n//   if (i > 2) code = code.slice(0, code.length - code.toString().length);\n//   code += \" \" + i;\n//   safeNewCode(code, codeMap, i + 1);\n// };\n\nconst db = new AnnotationDB();\nexport default db;\n","import React, { useState } from \"react\";\nimport { Menu, Button, Header, Icon, Modal } from \"semantic-ui-react\";\nimport { useHistory } from \"react-router-dom\";\nimport db from \"apis/dexie\";\n\nconst Reset = () => {\n  const [open, setOpen] = useState(false);\n  const history = useHistory();\n\n  const onClick = async () => {\n    try {\n      await db.deleteDB();\n      setOpen(false);\n      history.push(\"/\");\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return (\n    <Modal\n      closeIcon\n      open={open}\n      trigger={<Menu.Item icon=\"rocket\" name=\"Reset\" style={{ color: \"#d7a3a3\" }} />}\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n    >\n      <Header icon=\"power off\" content=\"Reset Annotator Database\" />\n      <Modal.Content>\n        <p>\n          This will remove all document and annotation data from your browser. Any annotations that\n          have not been saved/synchronized will be lost. Are you absolutely sure?\n        </p>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button\n          color=\"red\"\n          onClick={() => {\n            setOpen(false);\n          }}\n        >\n          <Icon name=\"remove\" /> No\n        </Button>\n        <Button color=\"green\" onClick={onClick}>\n          <Icon name=\"checkmark\" /> Yes\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  );\n};\n\nexport default Reset;\n","// this contains functions for setting indexedDB to persistent\n// taken from: https://dexie.org/docs/StorageManager\n\n/** Check if storage is persisted already.\n  @returns {Promise<boolean>} Promise resolved with true if current origin is\n  using persistent storage, false if not, and undefined if the API is not\n  present.\n*/\n\nexport async function initStoragePersistence() {\n  //const persist = tryPersistWithoutPromtingUser();\n  tryPersistWithoutPromtingUser()\n    .then(persist => {\n      switch (persist) {\n        case \"never\":\n          console.log(\"Not possible to persist storage\");\n          break;\n        case \"persisted\":\n          console.log(\"Successfully persisted storage silently\");\n          break;\n        case \"prompt\":\n          console.log(\"Not persisted, but we may prompt user when we want to.\");\n          break;\n        default:\n          console.log(\"compiler desperately wanted a default\");\n      }\n    })\n    .catch(e => {\n      console.log(\n        \"actually failed so hard it threw an error. Probably that persistent-storage is not (yet) a valid permission in the browser\"\n      );\n    });\n}\n\n/** Tries to convert to persisted storage.\n  @returns {Promise<boolean>} Promise resolved with true if successfully\n  persisted the storage, false if not, and undefined if the API is not present.\n*/\nexport async function persist() {\n  return (await navigator.storage) && navigator.storage.persist\n    ? navigator.storage.persist()\n    : undefined;\n}\n\nexport async function isStoragePersisted() {\n  return (await navigator.storage) && navigator.storage.persisted\n    ? navigator.storage.persisted()\n    : undefined;\n}\n\n/** Queries available disk quota.\n  @see https://developer.mozilla.org/en-US/docs/Web/API/StorageEstimate\n  @returns {Promise<{quota: number, usage: number}>} Promise resolved with\n  {quota: number, usage: number} or undefined.\n*/\n// async function showEstimatedQuota() {\n//   return (await navigator.storage) && navigator.storage.estimate\n//     ? navigator.storage.estimate()\n//     : undefined;\n// }\n\n/** Tries to persist storage without ever prompting user.\n  @returns {Promise<string>}\n    \"never\" In case persisting is not ever possible. Caller don't bother\n      asking user for permission.\n    \"prompt\" In case persisting would be possible if prompting user first.\n    \"persisted\" In case this call successfully silently persisted the storage,\n      or if it was already persisted.\n*/\nasync function tryPersistWithoutPromtingUser() {\n  if (!navigator.storage || !navigator.storage.persisted) {\n    return \"never\";\n  }\n  let persisted = await navigator.storage.persisted();\n  if (persisted) {\n    return \"persisted\";\n  }\n  if (!navigator.permissions || !navigator.permissions.query) {\n    return \"prompt\"; // It MAY be successful to prompt. Don't know.\n  }\n  const permission = await navigator.permissions.query({\n    name: \"persistent-storage\",\n  });\n  if (permission.state === \"granted\") {\n    persisted = await navigator.storage.persist();\n    if (persisted) {\n      return \"persisted\";\n    } else {\n      throw new Error(\"Failed to persist\");\n    }\n  }\n  if (permission.state === \"prompt\") {\n    return \"prompt\";\n  }\n  return \"never\";\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Menu, Button, Header, Icon, Modal } from \"semantic-ui-react\";\nimport { persist, isStoragePersisted } from \"apis/storemanager\";\n\nconst Persist = () => {\n  const [open, setOpen] = useState(false);\n  const [persisted, setPersisted] = useState(false);\n\n  useEffect(() => {\n    if (!persisted) {\n      isStoragePersisted().then(setPersisted);\n    }\n  }, [persisted]);\n\n  const onClick = async () => {\n    await persist();\n    const ispersisted = await isStoragePersisted();\n    if (ispersisted) {\n      setPersisted(true);\n      alert(\"indexedDB set to persistent for AmCAT Annotator\");\n    } else {\n      alert(\"Failed to set indexedDB to persistent\");\n    }\n  };\n\n  if (persisted) return null;\n\n  return (\n    <Modal\n      closeIcon\n      open={open}\n      trigger={<Menu.Item icon=\"database\" name=\"Enable persitance\" style={{ color: \"#d7a3a3\" }} />}\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n    >\n      <Header icon=\"database\" content=\"Set database persistence\" />\n      <Modal.Content>\n        <p>\n          We did not have permission to automatically make the data storage for this website\n          persistent. This means that the data could be removed automatically by your browser if it\n          needs to free up space for another website. You can try to set this manually here, but not\n          all browsers support this (yet).\n        </p>\n        <p>\n          If the database is not persistent the app can still be used, but you need to be more\n          carefull in making sure that data is regularly backed up, either by manually downloading\n          data or syncing with some backend (work in progress).\n        </p>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button onClick={onClick}>\n          <Icon name=\"checkmark\" /> Yes\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  );\n};\n\nexport default Persist;\n","import Axios from \"axios\";\n\nexport async function getToken(host, email, password) {\n  const response = await Axios.get(`${host}/anno/auth/token/`, {\n    auth: { username: email, password: password },\n  });\n  return response.data.token;\n}\n\nexport default function newAmcatSession(host, email, token) {\n  return new Amcat(host, email, token);\n}\n\nclass Amcat {\n  constructor(host, email, token) {\n    this.host = host;\n    this.email = email;\n    this.api = Axios.create({\n      baseURL: host,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n  }\n\n  postCodingjob(codingjobPackage, title) {\n    codingjobPackage.title = title;\n\n    return this.api.post(`/codingjob`, {\n      title: title,\n      units: codingjobPackage.units,\n      codebook: codingjobPackage.codebook,\n      provenance: codingjobPackage.provenance,\n      rules: codingjobPackage.rules,\n    });\n  }\n}\n","import React, { useState } from \"react\";\nimport { getToken } from \"apis/amcat\";\nimport { Button, Form, Grid, Header, Message, Segment, Menu, Modal } from \"semantic-ui-react\";\nimport { useCookies } from \"react-cookie\";\n\nconst Amcat = () => {\n  const [open, setOpen] = useState(false);\n  const [cookies, setCookie] = useCookies([\"amcat\"]);\n\n  return (\n    <Modal\n      closeIcon\n      open={open}\n      trigger={\n        <Menu.Item\n          icon={cookies.amcat == null ? \"toggle off\" : \"toggle on\"}\n          name={\"AmCAT\"}\n          style={{ color: cookies.amcat == null ? \"red\" : \"green\" }}\n        />\n      }\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n    >\n      <Header icon=\"database\" content=\"Connect to AmCAT server\" />\n      <Modal.Content>\n        <AmcatLogin setOpen={setOpen} setCookie={setCookie} />\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nconst color = \"blue\";\n\nconst AmcatLogin = ({ setOpen, setCookie }) => {\n  const [host, setHost] = useState(\"https://amcat4.labs.vu.nl/api\");\n  const [email, setEmail] = useState(\"admin\");\n  const [password, setPassword] = useState(\"admin\");\n  const [status, setStatus] = useState(\"idle\");\n\n  const submitForm = async () => {\n    setStatus(\"waiting\");\n    try {\n      const token = await getToken(host, email, password);\n      if (token) {\n        setCookie(\"amcat\", JSON.stringify({ host, email, token }), { path: \"/\" });\n        setStatus(\"success\");\n        setOpen(false);\n      } else setStatus(\"error\");\n    } catch (e) {\n      console.log(e);\n      setStatus(\"error\");\n    }\n  };\n\n  return (\n    <Grid inverted textAlign=\"center\" style={{ height: \"50%\" }} verticalAlign=\"middle\">\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as=\"h2\" color={color} textAlign=\"center\">\n          Connect to AmCAT server\n        </Header>\n        <Form size=\"large\">\n          <Segment stacked>\n            <Form.Input\n              fluid\n              error={status === \"error\"}\n              value={host}\n              onChange={(e, { value }) => {\n                setStatus(\"idle\");\n                setHost(value);\n              }}\n              icon=\"home\"\n              iconPosition=\"left\"\n              placeholder=\"Host\"\n            />\n            <Form.Input\n              fluid\n              error={status === \"error\"}\n              value={email}\n              onChange={(e, { value }) => {\n                setStatus(\"idle\");\n                setEmail(value);\n              }}\n              icon=\"user\"\n              iconPosition=\"left\"\n              placeholder=\"Email adress\"\n            />\n            <Form.Input\n              fluid\n              error={status === \"error\"}\n              value={password}\n              onChange={(e, { value }) => {\n                setStatus(\"idle\");\n                setPassword(value);\n              }}\n              icon=\"lock\"\n              iconPosition=\"left\"\n              placeholder=\"Password\"\n              type=\"password\"\n            />\n\n            <Button onClick={submitForm} color={color} fluid size=\"large\">\n              Login\n            </Button>\n          </Segment>\n        </Form>\n        <Message>Don't have an account? Too bad</Message>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default Amcat;\n","import React, { useEffect, useState } from \"react\";\nimport { Menu, Header, Modal, Form, Button } from \"semantic-ui-react\";\nimport { useCookies } from \"react-cookie\";\n\nconst UserName = ({ force = false }) => {\n  const [open, setOpen] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [cookies, setCookies] = useCookies([\"name\"]);\n\n  const storeName = () => {\n    if (name.length < 5) return;\n    setCookies(\"name\", name, { path: \"/\" });\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    if (cookies.name) setName(cookies.name);\n  }, [cookies.name]);\n\n  return (\n    <Modal\n      closeIcon={!force}\n      open={open || force}\n      trigger={\n        <Menu.Item\n          icon={cookies.name == null ? \"toggle off\" : \"toggle on\"}\n          name={\"Name\"}\n          style={{ color: cookies.name == null ? \"red\" : \"green\" }}\n        />\n      }\n      style={{ width: \"23em\" }}\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n    >\n      <Header icon=\"user\" content=\"Set user name\" />\n      <Modal.Content>\n        <Form onSubmit={storeName}>\n          <Form.Input\n            placeholder=\"username\"\n            value={name}\n            onChange={(e, d) => {\n              if (d.value.length < 50) setName(d.value);\n            }}\n            autoFocus\n            style={{ width: \"18em\" }}\n          />\n        </Form>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button primary disabled={name.length < 5} onClick={storeName}>\n          {name.length < 5 ? \"please use 5 characters or more\" : \"Set user name\"}\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  );\n};\n\nexport default UserName;\n","import React from \"react\";\nimport { Menu, Sidebar } from \"semantic-ui-react\";\nimport { Link, withRouter, useLocation } from \"react-router-dom\";\n\nimport Reset from \"./Reset\";\nimport Persist from \"./Persist\";\nimport Amcat from \"./Amcat\";\nimport UserName from \"./UserName\";\n\n// This is the index file of HeaderMenu, but importing via index\n// breaks. Probably due to the withRouter()\n\nconst HeaderMenu = ({ items, children }) => {\n  const location = useLocation();\n  const menuItems = items.map((item, index) => {\n    if (!item.menu) return null;\n    return (\n      <Menu.Item\n        key={\"item-\" + index}\n        index={index}\n        as={Link}\n        to={item.path}\n        header={index === 0}\n        active={item.path === location.pathname}\n      >\n        {item.label}\n      </Menu.Item>\n    );\n  });\n\n  if (location.pathname === \"/annotator\") return children;\n  return (\n    <Sidebar.Pushable style={{ height: \"100vh\" }}>\n      <Sidebar as={Menu} inverted animation=\"push\" visible={true} direction={\"top\"} size=\"mini\">\n        {menuItems}\n        <Menu.Menu position=\"right\">\n          <UserName />\n          <Amcat />\n          <Persist />\n          <Reset />\n        </Menu.Menu>\n      </Sidebar>\n      <Sidebar.Pusher>{children}</Sidebar.Pusher>\n    </Sidebar.Pushable>\n  );\n};\n\nexport default withRouter(HeaderMenu);\n","import React, { useEffect, useState } from \"react\";\nimport { useTable, useSortBy, usePagination, useGlobalFilter } from \"react-table\";\nimport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableRow,\n  TableHeaderCell,\n  TableCell,\n  Pagination,\n  Icon,\n} from \"semantic-ui-react\";\n\n// Uses react-table with semantic ui. The columns and data arguments are lists of objects\n// The 'columns' argument specifies column names (Header) and the names of the keys to get from data.\n//\n// const columns = [\n//   { Header: \"ID\", accessor: \"id\", headerClass: \"one wide\" },\n//   { Header: \"Name\", accessor: \"text\", headerClass: \"one wide\" },\n// ]\n//\n// Note that headerClass is custom, and enables setting the header cell class,\n// which is used in semantic ui to specify the width (one wide, ten wide, etc).\n\nconst SelectionTable = ({\n  columns,\n  data,\n  selectedRow,\n  setSelectedRow,\n  width = null,\n  defaultSize = 15,\n}) => {\n  const [activeRow, setActiveRow] = useState(selectedRow ? selectedRow.ROW_ID : null);\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    pageCount,\n    gotoPage,\n    preGlobalFilteredRows,\n    setGlobalFilter,\n    state: { pageIndex, globalFilter },\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState: {\n        pageIndex: selectedRow ? Math.floor(Number(selectedRow.ROW_ID) / defaultSize) : 0,\n        pageSize: defaultSize,\n        globalFilter: \"\",\n      },\n    },\n\n    useGlobalFilter,\n    useSortBy,\n    usePagination\n  );\n\n  useEffect(() => {\n    if (selectedRow) {\n      setActiveRow(selectedRow.ROW_ID);\n    } else {\n      setActiveRow(null);\n    }\n  }, [selectedRow]);\n\n  const onRowSelect = (row) => {\n    if (!setSelectedRow) return null;\n    if (!activeRow || activeRow !== row.id) {\n      setSelectedRow({ ...data[row.id], ROW_ID: row.id });\n      setActiveRow(row.id);\n    }\n  };\n\n  const createHeader = (headerGroup) => {\n    return headerGroup.headers.map((column) => {\n      return (\n        <TableHeaderCell\n          className={column.headerClass}\n          {...column.getHeaderProps(column.getSortByToggleProps())}\n        >\n          {column.render(\"Header\")}\n          <span>{column.isSorted ? (column.isSortedDesc ? \" 🔽\" : \" 🔼\") : \"\"}</span>\n        </TableHeaderCell>\n      );\n    });\n  };\n\n  const createBody = (page) => {\n    return page.map((row, i) => {\n      prepareRow(row);\n      return (\n        <TableRow\n          active={activeRow ? activeRow === row.id : false}\n          onClick={() => onRowSelect(row)}\n          {...row.getRowProps()}\n        >\n          {row.cells.map((cell) => {\n            return (\n              <TableCell title={cell.value} {...cell.getCellProps()}>\n                {cell.render(\"Cell\")}\n              </TableCell>\n            );\n          })}\n        </TableRow>\n      );\n    });\n  };\n\n  //if (data.length === 0) return null;\n\n  return (\n    <div style={{ width: width }}>\n      <GlobalFilter\n        preGlobalFilteredRows={preGlobalFilteredRows}\n        globalFilter={globalFilter}\n        setGlobalFilter={setGlobalFilter}\n      />\n      <Table\n        compact\n        unstackable\n        fixed\n        singleLine\n        selectable\n        {...getTableProps()}\n        size=\"small\"\n        style={{ fontSize: \"10px\", overflowY: \"auto\" }}\n      >\n        <TableHeader>\n          {headerGroups.map((headerGroup) => (\n            <TableRow {...headerGroup.getHeaderGroupProps()}>{createHeader(headerGroup)}</TableRow>\n          ))}\n        </TableHeader>\n        <TableBody {...getTableBodyProps()}>{createBody(page)}</TableBody>\n        <Table.Footer>\n          <Table.Row>\n            <Table.HeaderCell colSpan={columns.length}>\n              {data.length > defaultSize ? (\n                <Pagination\n                  floated=\"right\"\n                  style={{ border: \"0\" }}\n                  size=\"mini\"\n                  firstItem={false}\n                  lastItem={false}\n                  nextItem={false}\n                  prevItem={false}\n                  boundaryRange={1}\n                  ellipsisItem={{\n                    content: <Icon name=\"ellipsis horizontal\" />,\n                    icon: true,\n                  }}\n                  activePage={pageIndex + 1}\n                  totalPages={pageCount}\n                  onPageChange={(event, data) => {\n                    gotoPage(data.activePage - 1);\n                  }}\n                />\n              ) : null}\n            </Table.HeaderCell>\n          </Table.Row>\n        </Table.Footer>\n      </Table>\n    </div>\n  );\n};\n\nconst GlobalFilter = ({ preGlobalFilteredRows, globalFilter, setGlobalFilter }) => {\n  //const count = preGlobalFilteredRows && preGlobalFilteredRows.length;\n\n  return (\n    <span>\n      <input\n        value={globalFilter || \"\"}\n        onChange={(e) => {\n          setGlobalFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\n        }}\n        placeholder={`Enter search term`}\n        style={{\n          border: \"0\",\n        }}\n      />\n    </span>\n  );\n};\n\nexport default React.memo(SelectionTable);\n","export const demo_codebook = {\n  codes: [\n    { code: \"VVD\", parent: \"Actor\", active: true },\n    { code: \"D66\", parent: \"Actor\", active: true },\n    { code: \"Groenlinks\", parent: \"Actor\", active: true },\n    { code: \"Mark Rutte\", parent: \"VVD\", active: true },\n    { code: \"Sigrid Kaag\", parent: \"D66\", active: true },\n    { code: \"Jesse Klaver\", parent: \"Groenlinks\", active: true },\n    { code: \"Climate change\", parent: \"Issue\", active: true },\n  ],\n};\n\nexport const demo_articles = [\n  {\n    document_id: \"Some document ID\",\n    meta_fields: [\n      // { name: \"date\", value: \"2010-01-01T00:00:01Z\" },\n      { name: \"source\", value: \"Krantje\" },\n    ],\n    text_fields: [\n      {\n        name: \"title\",\n        value: `GL en PvdA hebben goed gesprek met informateur, maar wantrouwen Rutte`,\n      },\n      {\n        name: \"text\",\n        value: `PvdA-leider Lilianne Ploumen en GroenLinks-leider Jesse Klaver hadden vrijdag een goed gesprek met informateur Herman Tjeenk Willink, zeiden ze zelf. De twee benadrukten dat, hoewel er inhoudelijke stappen zijn gezet, hun vertrouwen in VVD-leider Mark Rutte nog niet is hersteld.\n\n    Informateur Willink zette zich vrijdag aan zijn taak. Eerste punt op de agenda zijn gesprekken met de lijsttrekkers van de acht grootste partijen.\n    \n    Een week nadat een groot deel van de partijleiders bekendmaakte niet meer met Rutte verder te willen onderhandelen over een nieuwe coalitie, wordt gekeken waarover partijen het inhoudelijk eens zijn.\n    \n    \"Het was een prettig gesprek langs de lijnen van de inhoud\", zei PvdA-leider Lilianne Ploumen na afloop. Ze heeft haar zorgen over de ongelijkheid in Nederland en over de zorg gedeeld.\n    \n    Ook Jesse Klaver (GroenLinks), die een uur eerder op gesprek kwam bij de informateur, benadrukte dat het ging over de problemen die opgelost moeten worden.\n    \n    Situatie niet veranderd in een week\n\nWat betreft de positie ten opzichte van Rutte is echter niets veranderd. Vorige week ondertekenden Ploumen en Klaver net als alle andere oppositiepartijen een motie van wantrouwen, vanwege Ruttes betrokkenheid bij de notitie over CDA-Kamerlid Pieter Omtzigt.\n\n\"Als het aan ons ligt, was Rutte geen premier meer\", zei Ploumen. Hoe Tjeenk Willink dat gedeukte vertrouwen kan herstellen, weet ze niet. \"We wachten de voorstellen van de informateur af.\"\n\n\"De vertrouwensbreuk is niet hersteld na één gesprek met de fractievoorzitters\", zei ook Klaver. \"Mijn mening over Rutte is niet veranderd.\"\n\nSP'er Lilian Marijnissen sprak zich al eerder expliciet uit tegen samenwerking met Rutte.\n\nDe partijleiders hekelen het gebrek aan openheid en transparantie waar Rutte in hun ogen voor staat. \"Als je een fout maakt, dan moet je dat toegeven en er niet over liegen\", zei Klaver. Ploumen: \"Het probleem is dat Mark Rutte heeft gelogen. Wij hebben het vertrouwen in hem opgezegd.\"\n\nWat de vervolgstappen moeten zijn, laten ze volledig over aan Tjeenk Willink. \"Ik ga geen lijstjes maken met wat er moet gebeuren\", zei Ploumen.\n\nDe informateur ontvangt later op vrijdag nog de partijleiders Wopke Hoekstra (CDA) en Sigrid Kaag (D66), en Rutte zelf.\n\nTjeenk Willink denkt niet dat Rutte zomaar door kan\n\nTjeenk Willink suggereerde woensdag op een persconferentie dat hij Rutte niet per se een sta-in-de-weg voor een verandering van de bestuursstijl in Den Haag vindt. Toen daarover vervolgens berichten in de media verschenen, voelde de informateur zich vrijdag genoodzaakt die boodschap bij te sturen.\n\nDe conclusie dat Rutte geen belemmering vormt voor de formatie, kan hij niet voor zijn rekening nemen, luidt een schriftelijke verklaring.\n\nTjeenk Willink heeft namelijk ook de opdracht om te onderzoeken \"of en zo ja onder welke voorwaarden er voldoende vertrouwen tussen partijen bestaat of weer kan ontstaan\".`,\n      },\n    ],\n  },\n  {\n    document_id: \"Another document ID\",\n    meta_fields: [\n      // { name: \"date\", value: \"2010-01-01T00:00:01Z\" },\n      { name: \"source\", value: \"Krantje\" },\n    ],\n    text_fields: [\n      {\n        name: \"title\",\n        value: `CU-leider Segers vindt dat uitspraak over Rutte te veel op de man was gespeeld`,\n      },\n      {\n        name: \"text\",\n        value: `Partijleider Gert-Jan Segers van de ChristenUnie (CU) vindt dat hij te veel op de man heeft gespeeld door coalitiedeelname uit te sluiten als VVD-leider Mark Rutte opnieuw premier zou worden. Terugblikkend zegt hij dat het niet om één persoon moet gaan, maar om \"een ongezonde politieke cultuur en een genadeloze overheid\". Daar moet volgens hem verandering in komen, zo zei hij zaterdag tijdens een congres van de partij.\n\n    \n    Segers deed zijn uitspraak over Rutte na het debat over de notitie \"functie elders\" voor CDA-Kamerlid Pieter Omtzigt. Binnen de CU is verdeeldheid ontstaan over het besluit van de fractie, erkent Segers.\n    \n    Naast steun is er ook kritiek van veel leden, die zeggen dat hij \"te veel op de man heeft gespeeld en te weinig de bal\". \"Te veel Rutte, te weinig ons allemaal. En als dat de perceptie van veel mensen is, dan moet ik me dat aantrekken\", aldus Segers tijdens het congres.\n    \n    \n    Volgens de CU-leider staat \"de politieke cultuur in Den Haag natuurlijk niet los van Mark Rutte, zeker niet\".\n    \n    \"Maar die oude cultuur staat of valt niet met één man. Ook wijzelf maken er deel van uit. Ik wil niet genadeloos zijn voor personen, maar ik wil wel hard en helder zijn over een cultuur die niet deugt en een genadeloze overheid. Daar moet écht een omslag in komen\", zei Segers.\n    \n    \n    De ChristenUnie heeft vijf zetels in de Tweede Kamer. Op het congres werden vier oude Kamerleden uitgezwaaid en trad Ankie van Tatenhove aan als nieuwe partijvoorzitter.`,\n      },\n    ],\n  },\n];\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Header,\n  Button,\n  Modal,\n  Form,\n  Loader,\n  Dimmer,\n  Icon,\n  Segment,\n  Container,\n  Grid,\n} from \"semantic-ui-react\";\n\nimport SelectionTable from \"./subcomponents/SelectionTable\";\nimport db from \"apis/dexie\";\nimport { demo_articles, demo_codebook } from \"apis/demodata\";\nimport { useLiveQuery } from \"dexie-react-hooks\";\n\nconst CodingjobSelector = ({ codingjob, setSelectedCodingjob }) => {\n  const codingjobs = useLiveQuery(() => db.idb.codingjobs.toArray());\n\n  useEffect(() => {\n    // If no codingjob is selected, pick the top row\n    if (!codingjob?.job_id && codingjobs) {\n      setSelectedCodingjob(codingjobs.length > 0 ? { ...codingjobs[0], ROW_ID: \"0\" } : null);\n    }\n    console.log(codingjobs);\n  }, [codingjob, codingjobs, setSelectedCodingjob]);\n\n  useEffect(() => {\n    // if codingjob does not have a row_id (for table row selection), look up the index from codingjobs\n    if (!codingjobs) return;\n    if (codingjob?.ROW_ID != null) return;\n    if (!codingjob?.job_id) return;\n    for (let i = 0; i < codingjobs.length; i++) {\n      if (codingjobs[i].job_id === codingjob.job_id) {\n        setSelectedCodingjob({ ...codingjob, ROW_ID: String(i) });\n        return;\n      }\n    }\n  }, [codingjob, codingjobs, setSelectedCodingjob]);\n\n  const tableColumns = [\n    {\n      Header: \"Coding job\",\n      accessor: \"name\",\n      headerClass: \"thirteen wide\",\n    },\n  ];\n\n  const table = () => {\n    if (!codingjobs) return null;\n    if (codingjobs.length === 0)\n      return (\n        <div style={{ textAlign: \"center\" }}>\n          <Button primary onClick={() => createDemoJob()}>\n            Create Demo job\n          </Button>\n        </div>\n      );\n    return (\n      <SelectionTable\n        columns={tableColumns}\n        data={codingjobs ? codingjobs : []}\n        selectedRow={codingjob}\n        setSelectedRow={setSelectedCodingjob}\n        defaultSize={15}\n      />\n    );\n  };\n\n  return (\n    <Grid centered stackable columns={1}>\n      <Grid.Column width={6}>\n        <Header textAlign=\"center\" style={{ background: \"#1B1C1D\", color: \"white\" }}>\n          Select Codingjob\n        </Header>\n        <Segment style={{ border: \"0\" }}>\n          <Button.Group widths=\"2\" size=\"mini\">\n            <CreateCodingjob setSelectedCodingjob={setSelectedCodingjob} />\n            <DeleteCodingjob codingjob={codingjob} setCodingjob={setSelectedCodingjob} />\n          </Button.Group>\n\n          <Container style={{ marginTop: \"30px\", overflow: \"auto\", width: \"800px\" }}>\n            {table()}\n          </Container>\n        </Segment>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nconst createDemoJob = async () => {\n  try {\n    const exists = await db.idb.codingjobs.get({ name: \"Demo codingjob\" });\n    if (exists) return null;\n    const job = await db.createCodingjob(\"Demo codingjob\");\n    await db.createDocuments(job, demo_articles, true);\n    await db.writeCodebook(job, demo_codebook);\n    return null;\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nconst CreateCodingjob = ({ setSelectedCodingjob }) => {\n  const [status, setStatus] = useState(\"inactive\");\n  const [codingjobName, setCodingjobName] = useState(\"\");\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n\n    setCodingjobName(codingjobName.trim());\n    setStatus(\"pending\");\n\n    try {\n      const cj = await db.createCodingjob(codingjobName);\n      setSelectedCodingjob(cj);\n      setStatus(\"inactive\");\n    } catch (e) {\n      console.log(e);\n      setStatus(\"error\");\n    }\n  };\n\n  return (\n    <Modal\n      as={Form}\n      trigger={\n        <Button>\n          <Icon name=\"plus\" />\n          Create job\n        </Button>\n      }\n      onSubmit={(e) => onSubmit(e)}\n      open={status !== \"inactive\"}\n      onClose={() => setStatus(\"inactive\")}\n      onOpen={() => {\n        setCodingjobName(\"\");\n        setStatus(\"awaiting input\");\n      }}\n      size=\"tiny\"\n    >\n      <Header icon=\"pencil\" content=\"Create new Codingjob\" as=\"h2\" />\n      <Modal.Content>\n        <Form.Group>\n          <Form.Input\n            width={12}\n            label=\"Name\"\n            required\n            type=\"text\"\n            value={codingjobName}\n            onChange={(e, d) => {\n              setStatus(\"awaiting input\");\n              setCodingjobName(d.value);\n            }}\n            placeholder=\"Enter name\"\n          />\n        </Form.Group>\n      </Modal.Content>\n      <Modal.Actions>\n        {status === \"error\" ? (\n          <div>\n            Could not create codingjob for a reason not yet covered in the error handling...\n          </div>\n        ) : null}\n        {status === \"pending\" ? (\n          <Dimmer active inverted>\n            <Loader content=\"Creating codingjob\" />\n          </Dimmer>\n        ) : (\n          <Button type=\"submit\" color=\"green\" icon=\"save\" content=\"Create\" />\n        )}\n      </Modal.Actions>\n    </Modal>\n  );\n};\n\nconst DeleteCodingjob = ({ codingjob, setCodingjob }) => {\n  const [status, setStatus] = useState(\"inactive\");\n\n  const onSubmit = async (event) => {\n    setStatus(\"pending\");\n    try {\n      await db.deleteCodingjob(codingjob);\n      setCodingjob(null);\n\n      setStatus(\"inactive\");\n    } catch (e) {\n      setStatus(\"error\");\n    }\n  };\n\n  if (!codingjob?.job_id) return null;\n\n  return (\n    <Modal\n      closeIcon\n      open={status !== \"inactive\"}\n      trigger={\n        <Button compact>\n          <Icon name=\"minus\" /> Delete job\n        </Button>\n      }\n      onClose={() => {\n        setStatus(\"inactive\");\n      }}\n      onOpen={() => {\n        setStatus(\"awaiting input\");\n      }}\n    >\n      <Header icon=\"trash\" content={`Delete codingjob ${codingjob.name}`} />\n      <Modal.Content>\n        <p>Do you really want to delete this codingjob?</p>\n      </Modal.Content>\n      <Modal.Actions>\n        {status === \"error\" ? (\n          <div>\n            Could not delete codingjob for a reason not yet covered in the error handling...\n          </div>\n        ) : null}\n        {status === \"pending\" ? (\n          <Dimmer active inverted>\n            <Loader content=\"Deleting codingjob\" />\n          </Dimmer>\n        ) : (\n          <>\n            <Button\n              color=\"red\"\n              onClick={() => {\n                setStatus(\"inactive\");\n              }}\n            >\n              <Icon name=\"remove\" /> No\n            </Button>\n            <Button color=\"green\" onClick={onSubmit}>\n              <Icon name=\"checkmark\" /> Yes\n            </Button>\n          </>\n        )}\n      </Modal.Actions>\n    </Modal>\n  );\n};\n\nexport default React.memo(CodingjobSelector);\n","import React, { useRef, useEffect, useState } from \"react\";\nimport { Container, Header, Table, Grid, Form, Button, Icon, Dropdown } from \"semantic-ui-react\";\n\n//import CSVReader from \"react-csv-reader\";\n//import Papa from \"papaparse\";\nimport { CSVReader } from \"react-papaparse\";\nimport db from \"apis/dexie\";\n\nexport const UploadTextsCsv = ({ codingjob }) => {\n  const columns = {\n    document_id: { required: true, multiple: false, defaults: [\"doc_id\", \"document_id\"] },\n    text_fields: {\n      required: true,\n      multiple: true,\n      defaults: [\"title\", \"headline\", \"body\", \"message\", \"text\"],\n    },\n    meta_fields: {\n      required: false,\n      multiple: true,\n      defaults: [\"title\", \"date\"],\n    },\n  };\n  return <UploadCsv codingjob={codingjob} type=\"texts\" columns={columns} keepOriginal={false} />;\n};\n\nconst renderTextForms = (columns, options, fields, setFields) => {\n  return (\n    <>\n      <Form.Group widths=\"equal\">\n        {renderForm(\"document id\", \"document_id\", columns, options, fields, setFields)}\n        {renderForm(\"text columns\", \"text_fields\", columns, options, fields, setFields)}\n        {renderForm(\"meta columns\", \"meta_fields\", columns, options, fields, setFields)}\n      </Form.Group>\n    </>\n  );\n};\n\nexport const UploadTokensCsv = ({ codingjob }) => {\n  const columns = {\n    document_id: { required: true, multiple: false, defaults: [\"doc_id\", \"document_id\"] },\n    token: { required: true, multiple: false, defaults: [\"token\", \"text\"] },\n    sentence: { required: false, multiple: false, defaults: [\"sentence\", \"sentence_id\"] },\n    paragraph: { required: false, multiple: false, defaults: [\"paragraph\", \"paragraph_id\"] },\n    offset: { required: false, int: true, multiple: false, defaults: [\"offset\", \"start\"] },\n    end: { required: false, int: true, multiple: false, defaults: [\"end\"] },\n    post: { required: false, multiple: false, defaults: [\"post\", \"space\"] },\n    section: { required: false, multiple: false, defaults: [\"section\"] },\n    annotations: { required: false, multiple: true, defaults: [] },\n  };\n  return <UploadCsv codingjob={codingjob} type=\"tokens\" columns={columns} keepOriginal={false} />;\n};\n\nconst renderTokenForms = (columns, options, fields, setFields) => {\n  return (\n    <>\n      <Form.Group widths=\"equal\">\n        {renderForm(\"document id\", \"document_id\", columns, options, fields, setFields)}\n        {renderForm(\"token\", \"token\", columns, options, fields, setFields)}\n      </Form.Group>\n      <Form.Group widths=\"equal\">\n        {renderForm(\"section\", \"section\", columns, options, fields, setFields)}\n        {renderForm(\"paragraph\", \"paragraph\", columns, options, fields, setFields)}\n        {renderForm(\"sentence\", \"sentence\", columns, options, fields, setFields)}\n      </Form.Group>\n      <Form.Group widths=\"equal\">\n        {renderForm(\"start / offset\", \"offset\", columns, options, fields, setFields)}\n        {renderForm(\"end\", \"end\", columns, options, fields, setFields)}\n        {renderForm(\"space / post\", \"post\", columns, options, fields, setFields)}\n      </Form.Group>\n      <Form.Group widths=\"equal\">\n        {renderForm(\"annotations\", \"annotations\", columns, options, fields, setFields, true)}\n      </Form.Group>\n    </>\n  );\n};\n\nconst UploadCsv = ({ codingjob, type = \"text\", columns, keepOriginal }) => {\n  const [data, setData] = useState([]);\n  const fileRef = useRef();\n\n  return (\n    <Container>\n      <Grid>\n        <Grid.Column width={5}>\n          <CSVReader\n            ref={fileRef}\n            nodrag\n            onFileLoad={(data) => setData(data)}\n            addRemoveButton\n            onRemoveFile={() => setData([])}\n          >\n            <span>Click to upload</span>\n          </CSVReader>\n        </Grid.Column>\n        <Grid.Column floated=\"right\" width={11}>\n          <SubmitForm\n            type={type}\n            data={data}\n            codingjob={codingjob}\n            fileRef={fileRef}\n            columns={columns}\n            keepOriginal={keepOriginal}\n          />\n        </Grid.Column>\n      </Grid>\n      <PreviewTable data={data} />\n    </Container>\n  );\n};\n\nconst SubmitForm = ({ type, data, codingjob, fileRef, columns, keepOriginal }) => {\n  const [options, setOptions] = useState([]);\n  const [fields, setFields] = useState({});\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (data.length <= 1) {\n      setFields({});\n      setOptions([]);\n      return;\n    }\n\n    setOptions(\n      data[0].data.map((colname) => {\n        return { key: colname, value: colname, text: colname };\n      })\n    );\n\n    let newfields = {};\n    for (let col of Object.keys(columns)) {\n      newfields[col] = columns[col].multiple ? [] : null;\n      for (let def of columns[col].defaults) {\n        if (data[0].data.includes(def)) {\n          if (columns[col].multiple) {\n            newfields[col].push(def);\n          } else newfields[col] = def;\n        }\n      }\n    }\n    setFields(newfields);\n  }, [data, columns]);\n\n  const csvToJson = (data, fields) => {\n    const keys = data[0].data;\n\n    // first get indices from header row\n    // more efficient than lookup for each row\n    const fieldIndices = { ...fields };\n    for (let field of Object.keys(fields)) {\n      if (columns[field].multiple) {\n        fieldIndices[field] = {};\n        for (let subfield of fields[field]) {\n          fieldIndices[field][subfield] = keys.findIndex((k) => k === subfield);\n        }\n      } else {\n        fieldIndices[field] = keys.findIndex((k) => k === fields[field]);\n      }\n    }\n\n    return data.slice(1).map((row) => {\n      const datarow = {};\n\n      if (keepOriginal) {\n        const original = keys.map((key, i) => {\n          return { name: key, value: row.data[i] };\n        });\n        datarow.original = original;\n      }\n\n      for (let field of Object.keys(fields)) {\n        if (columns[field].multiple) {\n          datarow[field] = [];\n          for (let subfield of fields[field]) {\n            const fieldindex = fieldIndices[field][subfield];\n            if (fieldindex < 0) continue;\n            let v = row.data[fieldindex];\n            if (columns[field].int) v = parseInt(v);\n            datarow[field].push({ name: keys[fieldindex], value: v });\n          }\n        } else {\n          const fieldindex = fieldIndices[field];\n          if (fieldindex < 0) continue;\n          let v = row.data[fieldindex];\n          datarow[field] = columns[field].int ? parseInt(v) : v;\n        }\n      }\n      return datarow;\n    });\n  };\n\n  const uploadData = async () => {\n    try {\n      setLoading(true);\n      let preparedData = csvToJson(data, fields);\n      if (type === \"tokens\") preparedData = tokensToDocumentList(preparedData);\n      await db.createDocuments(codingjob, preparedData);\n      await db.setCodingjobProp(codingjob, \"codebook.unitSettings.n\", null);\n      fileRef.current.removeFile();\n      //dispatch(selectCodingjob(codingjob));\n      setLoading(false);\n    } catch (e) {\n      console.log(e);\n      setLoading(false);\n    }\n  };\n\n  const allDone = () => {\n    for (let col of Object.keys(columns)) {\n      if (columns[col].multiple) {\n        if (columns[col].required && fields[col].length === 0) return false;\n      } else {\n        if (columns[col].required && !fields[col]) return false;\n      }\n    }\n    return true;\n  };\n\n  //if (data.length <= 1) return null;\n\n  return (\n    <>\n      <Form loading={loading}>\n        {type === \"texts\" ? renderTextForms(columns, options, fields, setFields) : null}\n        {type === \"tokens\" ? renderTokenForms(columns, options, fields, setFields) : null}\n        <Form.Group>\n          <Form.Field control={Button} onClick={uploadData} disabled={!allDone()}>\n            <Icon name=\"upload\" />\n            Upload\n          </Form.Field>\n        </Form.Group>\n      </Form>\n    </>\n  );\n};\n\nconst tokensToDocumentList = (data) => {\n  const documents = [];\n  let tokens = [data[0]];\n  for (let i = 1; i < data.length; i++) {\n    if (data[i].document_id !== data[i - 1].document_id) {\n      documents.push({ document_id: data[i - 1].document_id, tokens });\n      tokens = [];\n    }\n    tokens.push(data[i]);\n  }\n  return documents;\n};\n\nconst renderForm = (label, column, columns, options, fields, setFields) => {\n  return (\n    <Form.Field\n      control={Dropdown}\n      clearable\n      selection\n      multiple={columns[column].multiple ? true : false}\n      label={{ children: label, style: { fontSize: \"10px\" } }}\n      required={columns[column].required}\n      options={options}\n      value={fields[column]}\n      onChange={(e, d) => {\n        const newfields = { ...fields };\n        newfields[column] = d.value;\n        setFields(newfields);\n      }}\n      style={{ minWidth: \"3em\", fontSize: \"10px\" }}\n    />\n  );\n};\n\nconst PreviewTable = ({ data }) => {\n  const n = 5;\n\n  const createHeader = (data) => {\n    return data[0].data.map((colname) => {\n      return (\n        <Table.HeaderCell style={{ width: \"7em\" }}>\n          <span title={colname}>{colname}</span>\n        </Table.HeaderCell>\n      );\n    });\n  };\n\n  const createRows = (data, n) => {\n    const previewdata = data.slice(0, n + 1);\n    return previewdata.slice(1).map((row) => {\n      return <Table.Row>{createRowCells(row.data)}</Table.Row>;\n    });\n  };\n\n  const createRowCells = (row) => {\n    return row.map((cell) => {\n      return (\n        <Table.Cell>\n          <span title={cell}>{cell}</span>\n        </Table.Cell>\n      );\n    });\n  };\n\n  if (data.length <= 1) return null;\n\n  return (\n    <div\n      style={{\n        marginTop: \"3em\",\n        overflow: \"auto\",\n        width: \"100%\",\n        border: \"solid 1px\",\n      }}\n    >\n      <Table unstackable singleLine fixed size=\"small\" compact>\n        <Table.Header>\n          <Table.Row>{createHeader(data)}</Table.Row>\n        </Table.Header>\n        <Table.Body>{createRows(data, n)}</Table.Body>\n      </Table>\n      {data.length > n ? <Header align=\"center\">{data.length - 1 - n} more rows</Header> : null}\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Menu, Segment } from \"semantic-ui-react\";\n\nimport { UploadTextsCsv, UploadTokensCsv } from \"./UploadForms\";\n\nconst UploadDocuments = ({ codingjob }) => {\n  const [activeItem, setActiveItem] = useState(\"Documents CSV\");\n  const renderSwitch = (activeItem) => {\n    switch (activeItem) {\n      case \"Documents CSV\":\n        return <UploadTextsCsv codingjob={codingjob} />;\n      case \"Tokens CSV\":\n        return <UploadTokensCsv codingjob={codingjob} />;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <>\n      <Menu attached=\"top\" tabular>\n        <Menu.Item\n          name=\"Documents CSV\"\n          active={activeItem === \"Documents CSV\"}\n          onClick={(e, d) => setActiveItem(d.name)}\n        />\n        <Menu.Item\n          name=\"Tokens CSV\"\n          active={activeItem === \"Tokens CSV\"}\n          onClick={(e, d) => setActiveItem(d.name)}\n        />\n      </Menu>\n      <Segment attached=\"bottom\">{renderSwitch(activeItem)}</Segment>\n    </>\n  );\n};\n\nexport default UploadDocuments;\n","import React, { useEffect, useState } from \"react\";\nimport { Container, Pagination, Table, Icon } from \"semantic-ui-react\";\nimport db from \"apis/dexie\";\n\nconst PAGESIZE = 10;\n\nconst DocumentTable = ({ codingjob }) => {\n  const [data, setData] = useState([]);\n  const [pages, setPages] = useState(1);\n  const [columns, setColumns] = useState([]);\n\n  useEffect(() => {\n    if (!codingjob) {\n      setData([]);\n      setColumns([]);\n      return null;\n    }\n    fetchFromDb(codingjob, PAGESIZE, setPages, setData, setColumns);\n  }, [codingjob]);\n\n  const createHeaderRow = (data, columns) => {\n    return columns.map((colname, i) => {\n      return (\n        <Table.HeaderCell key={i} width={i === 0 ? 3 : null}>\n          <span title={colname}>{colname}</span>\n        </Table.HeaderCell>\n      );\n    });\n  };\n\n  const createBodyRows = (data) => {\n    return data.map((rowObj, i) => {\n      return <Table.Row key={i}>{createRowCells(rowObj)}</Table.Row>;\n    });\n  };\n\n  const tokensToText = (tokens, section) => {\n    return tokens.reduce((text, token) => {\n      if (token.section === section) text = text + token.pre + token.token + token.post;\n      return text;\n    }, \"\");\n  };\n\n  const createRowCells = (rowObj) => {\n    return columns.map((key, i) => {\n      let content = null;\n      if (key === \"document_id\") {\n        content = rowObj.document_id;\n      } else {\n        if (rowObj.text_fields) {\n          content = rowObj.text_fields.find((tf) => tf.name === key);\n          if (content) content = content.value;\n        }\n        if (!content && !rowObj.text_fields && rowObj.tokens) {\n          content = tokensToText(rowObj.tokens, key);\n        }\n      }\n\n      return (\n        <Table.Cell key={i}>\n          <span title={content}>{content}</span>\n        </Table.Cell>\n      );\n    });\n  };\n\n  const pageChange = async (event, data) => {\n    const offset = (data.activePage - 1) * PAGESIZE;\n    const newdata = await db.getJobDocuments(codingjob, offset, PAGESIZE);\n    setData(newdata);\n    setColumns(getColumns(newdata));\n  };\n\n  if (data.length < 1)\n    return (\n      <h3 style={{ marginTop: \"5em\", textAlign: \"center\" }}>\n        This codingjob does not yet have any documents\n      </h3>\n    );\n\n  return (\n    <Container style={{ marginTop: \"2em\" }}>\n      <Table\n        unstackable\n        selectable\n        fixed\n        compact\n        singleLine\n        size=\"small\"\n        style={{ fontSize: \"10px\" }}\n      >\n        <Table.Header>\n          <Table.Row>{createHeaderRow(data, columns)}</Table.Row>\n        </Table.Header>\n        <Table.Body>{createBodyRows(data)}</Table.Body>\n        <Table.Footer>\n          <Table.Row>\n            <Table.HeaderCell colSpan={columns.length}>\n              {pages > 1 ? (\n                <Pagination\n                  size=\"mini\"\n                  floated=\"right\"\n                  boundaryRange={1}\n                  siblingRange={1}\n                  ellipsisItem={{\n                    content: <Icon name=\"ellipsis horizontal\" />,\n                    icon: true,\n                  }}\n                  firstItem={{\n                    content: <Icon name=\"angle double left\" />,\n                    icon: true,\n                  }}\n                  lastItem={{\n                    content: <Icon name=\"angle double right\" />,\n                    icon: true,\n                  }}\n                  prevItem={{ content: <Icon name=\"angle left\" />, icon: true }}\n                  nextItem={{\n                    content: <Icon name=\"angle right\" />,\n                    icon: true,\n                  }}\n                  pointing\n                  secondary\n                  defaultActivePage={1}\n                  totalPages={pages}\n                  onPageChange={pageChange}\n                ></Pagination>\n              ) : null}\n            </Table.HeaderCell>\n          </Table.Row>\n        </Table.Footer>\n      </Table>\n    </Container>\n  );\n};\n\nconst fetchFromDb = async (codingjob, pageSize, setPages, setData, setColumns) => {\n  const n = await db.getJobDocumentCount(codingjob);\n  setPages(Math.ceil(n / pageSize));\n  let newdata = [];\n  if (n > 0) newdata = await db.getJobDocuments(codingjob, 0, pageSize);\n\n  setData(newdata);\n  setColumns(getColumns(newdata));\n};\n\nconst getColumns = (newdata) => {\n  let newcolumns = [];\n  if (newdata.length > 0) {\n    newcolumns = newdata.reduce((s, row) => {\n      if (row.text_fields) {\n        for (let tf of row.text_fields) s.add(tf.name);\n      } else {\n        for (let i = 0; i < row.tokens.length; i++) s.add(row.tokens[i].section);\n      }\n      return s;\n    }, new Set());\n  }\n  return [\"document_id\", ...newcolumns];\n};\n\nexport default DocumentTable;\n","import React from \"react\";\n\nimport { Grid, Header } from \"semantic-ui-react\";\nimport UploadDocuments from \"./subcomponents/UploadDocuments\";\nimport DocumentTable from \"./subcomponents/DocumentTable\";\n\nconst ManageDocuments = ({ codingjob }) => {\n  return (\n    <div style={{ paddingLeft: \"1em\" }}>\n      <Grid stackable columns={2}>\n        <Grid.Column width={8}>\n          <Header textAlign=\"center\" style={{ background: \"#1B1C1D\", color: \"white\" }}>\n            Upload Documents\n          </Header>\n          <UploadDocuments codingjob={codingjob} />\n        </Grid.Column>\n        <Grid.Column width={8}>\n          <Header textAlign=\"center\" style={{ background: \"#1B1C1D\", color: \"white\" }}>\n            Document list\n          </Header>\n\n          <DocumentTable codingjob={codingjob} />\n        </Grid.Column>\n      </Grid>\n    </div>\n  );\n};\n\nexport default React.memo(ManageDocuments);\n","import React, { useEffect } from \"react\";\nimport { Icon, Form, Radio, Input, Dropdown, Popup, Button, Grid } from \"semantic-ui-react\";\nimport db from \"apis/dexie\";\n\nconst defaultUnitSettings = {\n  textUnit: null, // document, paragraph, sentence or span (span only if codingUnit is annotations)\n  unitSelection: \"allTextUnits\", // or: annotations\n  annotation: null,\n  contextUnit: \"document\", // or: paragraph, sentence, no context\n  contextWindow: [1, 1],\n\n  n: null,\n  seed: 42,\n  ordered: false,\n  balanceDocuments: true,\n  balanceAnnotations: true,\n  validCodes: {},\n  highlightAnnotation: false,\n  layout: {\n    text: {},\n    meta: {},\n  },\n};\n\nconst UnitSettings = ({ codingjob }) => {\n  const unitSettings = codingjob?.unitSettings || defaultUnitSettings;\n  const setUnitSettings = (us) => {\n    db.setCodingjobProp(codingjob, \"unitSettings\", us);\n  };\n\n  if (!unitSettings) return null;\n  return (\n    <div style={{ verticalAlign: \"top\", float: \"top\", paddingLeft: \"1em\" }}>\n      <Grid style={{ paddingTop: \"1em\" }}>\n        <Grid.Row>\n          <Grid.Column width={8}>\n            <CodingUnitForm\n              codingjob={codingjob}\n              unitSettings={unitSettings}\n              setUnitSettings={setUnitSettings}\n            />\n          </Grid.Column>\n          <Grid.Column width={8}>\n            <ContextUnitForm unitSettings={unitSettings} setUnitSettings={setUnitSettings} />\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </div>\n  );\n};\n\nconst CodingUnitForm = ({ codingjob, unitSettings, setUnitSettings }) => {\n  useEffect(() => {\n    if (unitSettings?.textUnit === null)\n      setUnitSettings({\n        ...unitSettings,\n        textUnit: \"document\",\n        value: \"allTextUnits\",\n        n: null,\n        totalUnits: null,\n      });\n  }, [unitSettings, setUnitSettings]);\n\n  const radioButton = (value, label, annotated, jump) => {\n    const unitSelection = annotated ? \"annotations\" : \"allTextUnits\";\n    let checked = unitSettings.textUnit === value && unitSettings.unitSelection === unitSelection;\n\n    return (\n      <Form.Field>\n        <Radio\n          value={value}\n          label={label}\n          checked={checked}\n          onChange={(e, d) =>\n            setUnitSettings({\n              ...unitSettings,\n              textUnit: value,\n              unitSelection: unitSelection,\n              n: null,\n              totalUnits: null,\n            })\n          }\n          style={{ marginLeft: jump ? \"1em\" : \"0em\" }}\n        />\n      </Form.Field>\n    );\n  };\n\n  const annotationDropdown = () => {\n    if (!codingjob.importedCodes) return null;\n    if (Object.keys(codingjob.importedCodes).length === 0) return null;\n    const options = Object.keys(codingjob.importedCodes).map((code) => ({\n      key: code,\n      value: code,\n      text: code,\n    }));\n    if (unitSettings.annotation === null)\n      setUnitSettings({ ...unitSettings, annotation: options[0].value });\n    return (\n      <span style={{ fontWeight: \"bold\" }}>\n        Annotation:{\"   \"}\n        <Dropdown\n          options={options}\n          value={unitSettings.annotation}\n          onChange={(e, d) => setUnitSettings({ ...unitSettings, annotation: d.value })}\n        />\n      </span>\n    );\n  };\n\n  const annotationButtons = () => {\n    if (!unitSettings.annotation) return null;\n    return (\n      <>\n        {radioButton(\"span\", \"Span annotation\", true, true)}\n        {radioButton(\"document\", \"Span + document\", true, true)}\n        {radioButton(\"paragraph\", \"Span + paragraph\", true, true)}\n        {radioButton(\"sentence\", \"Span + sentence\", true, true)}\n      </>\n    );\n  };\n\n  return (\n    <Form>\n      <Form.Group>\n        <Icon name=\"setting\" />\n        <label>Coding unit</label>\n      </Form.Group>\n      <Form.Group grouped widths=\"equal\">\n        {radioButton(\"document\", \"Document\", false)}\n        {radioButton(\"paragraph\", \"Paragraph\", false)}\n        {radioButton(\"sentence\", \"Sentence\", false)}\n        {annotationDropdown()}\n        {annotationButtons()}\n      </Form.Group>\n    </Form>\n  );\n};\n\nconst ContextUnitForm = ({ unitSettings, setUnitSettings }) => {\n  const setContextWindow = (value) => {\n    setUnitSettings({\n      ...unitSettings,\n      contextWindow: value,\n    });\n  };\n\n  const radioButton = (value, label) => {\n    return (\n      <Form.Field>\n        <Radio\n          value={value}\n          label={label}\n          disabled={unitSettings.textUnit === \"document\"}\n          checked={unitSettings.contextUnit === value}\n          onChange={(e, d) =>\n            setUnitSettings({\n              ...unitSettings,\n              contextUnit: value,\n            })\n          }\n        />\n        {\"  \"}\n        {(value === \"paragraph\" || value === \"sentence\") && value === unitSettings.contextUnit ? (\n          <ContextWindow\n            contextUnit={unitSettings.contextUnit}\n            contextWindow={unitSettings.contextWindow}\n            setContextWindow={setContextWindow}\n          />\n        ) : null}\n      </Form.Field>\n    );\n  };\n\n  return (\n    <Form>\n      <Form.Group>\n        <Icon name=\"setting\" />\n        <label>Context unit</label>\n      </Form.Group>\n      <Form.Group grouped widths=\"equal\">\n        {radioButton(\"document\", \"Document\")}\n        {radioButton(\"paragraph\", \"Paragraph\")}\n        {radioButton(\"sentence\", \"Sentence\")}\n        {radioButton(\"none\", \"No context\")}\n      </Form.Group>\n    </Form>\n  );\n};\n\n// at some point maybe implement document filters\n// like min paragraph and max tokens and such\n//\n// const DocumentFilters = () => {\n//   const onChangeUseMinUnitIndex = (e, d) => {\n//     setWithoutDelay(\"useMinUnitIndex\", d.checked);\n//   };\n//   const onChangeUseMaxUnitIndex = (e, d) => {\n//     setWithoutDelay(\"useMaxUnitIndex\", d.checked);\n//   };\n//   const onChangeMinUnitIndex = (e, d) => {\n//     let value = Number(d.value);\n//     setDelayed((current) => ({ ...current, minUnitIndex: value }));\n//   };\n//   const onChangeMaxUnitIndex = (e, d) => {\n//     let value = Number(d.value);\n//     setDelayed((current) => ({ ...current, maxUnitIndex: value }));\n//   };\n\n//   return (\n//     <Form>\n//       <Form.Group>\n//         <Form.Field width={8}>\n//           <label>Maximum {unitSettings.textUnit}</label>\n\n//           <Input\n//             width={5}\n//             min={0}\n//             label={\n//               <Checkbox\n//                 toggle\n//                 style={{ width: \"6em\" }}\n//                 disabled={unitSettings.textUnit === \"document\"}\n//                 checked={unitSettings.useMaxUnitIndex}\n//                 onChange={onChangeUseMaxUnitIndex}\n//               />\n//             }\n//             size=\"mini\"\n//             type=\"number\"\n//             value={unitSettings.maxUnitIndex}\n//             onChange={onChangeMaxUnitIndex}\n//           ></Input>\n//         </Form.Field>\n//       </Form.Group>\n//     </Form>\n//   );\n// };\n\nconst ContextWindow = ({ contextUnit, contextWindow, setContextWindow }) => {\n  if (contextUnit === \"document\") return null;\n\n  return (\n    <Popup\n      hoverable\n      trigger={\n        <Button\n          style={{\n            padding: \"0em 0.2em 0em 0.2em\",\n            background: \"white\",\n            border: \"1px solid\",\n          }}\n        >{`${contextWindow[0]} - ${contextWindow[1]}`}</Button>\n      }\n    >\n      <Dropdown.Menu>\n        <Dropdown.Header content={`Set ${contextUnit} window`} />\n        <Grid style={{ paddingTop: \"1em\", width: \"20em\" }}>\n          <Grid.Column width={8}>\n            <Input\n              size=\"mini\"\n              value={contextWindow[0]}\n              type=\"number\"\n              style={{ width: \"6em\" }}\n              label={\"before\"}\n              onChange={(e, d) => setContextWindow([Number(d.value), contextWindow[1]])}\n            />\n          </Grid.Column>\n          <Grid.Column width={5}>\n            <Input\n              size=\"mini\"\n              value={contextWindow[1]}\n              type=\"number\"\n              labelPosition=\"right\"\n              style={{ width: \"6em\" }}\n              label={\"after\"}\n              onChange={(e, d) => setContextWindow([contextWindow[0], Number(d.value)])}\n            />\n          </Grid.Column>\n        </Grid>\n      </Dropdown.Menu>\n    </Popup>\n  );\n};\n\nexport default React.memo(UnitSettings);\n","/**\n *\n * @param {*} arr An array of objects that each has a .ref key\n * @param {*} selected\n */\nexport const moveUp = (arr, selected) => {\n  // given an array of refs for buttons (or any divs), and the current selected button,\n  // move to most overlapping button on previous row\n  // (basically, what you want to happen when you press 'up' in a grid of buttons)\n  const currentPos = getPosition(arr[selected].ref);\n  let correctRow = null;\n  let prevColOverlap = 0;\n  for (let i = selected - 1; i >= 0; i--) {\n    if (arr[i].ref == null || arr[i].ref.current === null) return i + 1;\n    const nextPos = getPosition(arr[i].ref);\n\n    if (correctRow === null) {\n      if (sameRow(currentPos, nextPos)) continue;\n      correctRow = nextPos; // set correct row once we reach a button on the next row\n    } else {\n      if (!sameRow(correctRow, nextPos)) return i + 1;\n    }\n\n    const colOverlap = calcColOverlap(currentPos, nextPos);\n    //if (colOverlap > 0.5) return i;\n    if (prevColOverlap > 0 && colOverlap < prevColOverlap) return i + 1;\n    if (currentPos.left > nextPos.right) return i;\n\n    prevColOverlap = colOverlap;\n  }\n\n  return 0;\n};\n\n/**\n *\n * @param {*} arr An array of objects that each has a .ref key\n * @param {*} selected\n */\nexport const moveDown = (arr, selected) => {\n  // like moveUp, but down\n  const currentPos = getPosition(arr[selected].ref);\n  let correctRow = null;\n  let prevColOverlap = 0;\n  for (let i = selected + 1; i < arr.length; i++) {\n    if (arr[i].ref == null || arr[i].ref.current === null) return i - 1;\n\n    const nextPos = getPosition(arr[i].ref);\n\n    if (correctRow === null) {\n      if (sameRow(currentPos, nextPos)) continue;\n      correctRow = nextPos; // set correct row once we reach a button on the next row\n    } else {\n      if (!sameRow(correctRow, nextPos)) return i - 1;\n    }\n\n    const colOverlap = calcColOverlap(currentPos, nextPos);\n    //if (colOverlap > 0.5) return i;\n    if (prevColOverlap > 0 && colOverlap < prevColOverlap) return i - 1;\n    if (currentPos.right < nextPos.left) return i;\n    prevColOverlap = colOverlap;\n  }\n\n  return arr.length - 1;\n};\n\nconst sameRow = (a, b) => {\n  // we can't just check if y positions are the same, because they fool around a bit\n  // so instead we look at how much buttons overlap on the y axis\n\n  const lowestTop = Math.max(a.top, b.top); // lowest top of two buttons on screen\n  const highestBottom = Math.min(a.bottom, b.bottom); // highest bottom of two buttons on screen\n\n  const overlap = highestBottom - lowestTop;\n  // if buttons overlap more than 50% of height of box a, say they overlap\n  // (really, boxes on the same row will overlap > 99%, so this is very safe)\n  return overlap > 0.5 * a.height;\n};\n\nconst calcColOverlap = (a, b) => {\n  const rightestLeft = Math.max(a.left, b.left);\n  const leftestRight = Math.min(a.right, b.right);\n\n  const pctA = (leftestRight - rightestLeft) / a.width;\n  const pctB = (leftestRight - rightestLeft) / b.width;\n  return Math.max(pctA, pctB);\n};\n\nconst getPosition = ref => {\n  if (!ref) return null;\n  return ref.current.getBoundingClientRect();\n};\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { keepInView } from \"library/scroll\";\nimport { moveUp, moveDown } from \"library/refNavigation\";\n\n// This component generates no content, but manages navigation for span level annotations\n\nconst arrowkeys = [\"ArrowRight\", \"ArrowLeft\", \"ArrowUp\", \"ArrowDown\"];\n\n/**\n * This is a hugely elaborate component for managing navigation (key, mouse and touch events)\n * It doesn't acctually render anything, but its shaped as a component because useEffect is just really convenient here\n * You probably never want to read this. And if you do, don't expect my sympathies. Rather, just blame me\n * if anything in here breaks, or ask nicely if we need more features\n */\nconst AnnotationEvents = ({\n  tokens,\n  currentToken,\n  setCurrentToken,\n  tokenSelection,\n  setTokenSelection,\n  triggerCodePopup,\n  eventsBlocked,\n}) => {\n  // !! Keep in mind that positions are based on token.arrayIndex, not token.index\n  // arrayIndex is the actual tokens array, where token.index is the position of the token in the document\n  // (these can be different if the text/context does not start at token.index 0)\n\n  const [mover, setMover] = useState(null);\n  const [HoldSpace, setHoldSpace] = useState(false);\n  const [holdArrow, setHoldArrow] = useState(null);\n\n  useEffect(() => {\n    if (eventsBlocked) {\n      setHoldArrow(false);\n      setHoldSpace(false);\n    } else {\n      setTokenSelection([]);\n    }\n  }, [setHoldArrow, setHoldSpace, eventsBlocked, setTokenSelection]);\n\n  useEffect(() => {\n    // When arrow key is held, walk through tokens with increasing speed\n    // this loops itself by updating mover (an object with position information)\n    // this is like setIntervall, but allows custom time intervalls,\n    if (!mover || !holdArrow) return;\n\n    let position = movePosition(\n      tokens,\n      holdArrow,\n      mover,\n      HoldSpace,\n      setCurrentToken,\n      setTokenSelection\n    );\n\n    let delay = Math.max(5, 100 / Math.ceil(mover.counter / 5));\n    if (mover.counter === 1) delay = 150;\n    setTimeout(() => {\n      setMover({\n        position: position,\n        startposition: mover.startposition,\n        ntokens: mover.ntokens,\n        counter: mover.counter + 1,\n      });\n    }, delay);\n  }, [tokens, mover, holdArrow, HoldSpace, setCurrentToken, setTokenSelection]);\n\n  if (!tokens) return null;\n\n  // this prevents rendering the components that manage the key and mouse events\n  if (eventsBlocked) return null;\n\n  return (\n    <>\n      <KeyEvents\n        tokenSelection={tokenSelection}\n        currentToken={currentToken}\n        tokens={tokens}\n        HoldSpace={HoldSpace}\n        setMover={setMover}\n        setHoldSpace={setHoldSpace}\n        setHoldArrow={setHoldArrow}\n        triggerCodePopup={triggerCodePopup}\n      />\n      <MouseEvents\n        tokenSelection={tokenSelection}\n        tokens={tokens}\n        setCurrentToken={setCurrentToken}\n        setTokenSelection={setTokenSelection}\n        triggerCodePopup={triggerCodePopup}\n      />\n    </>\n  );\n};\n\nconst KeyEvents = ({\n  tokenSelection,\n  currentToken,\n  tokens,\n  HoldSpace,\n  setMover,\n  setHoldSpace,\n  setHoldArrow,\n  triggerCodePopup,\n}) => {\n  // This blocks event listeners when the eventsBlocked state (in redux) is true.\n  // This lets us block the key activities in the text (selecting tokens) when\n  // the CodeSelector popup is open\n  useEffect(() => {\n    window.addEventListener(\"keydown\", onKeyDown);\n    window.addEventListener(\"keyup\", onKeyUp);\n    return () => {\n      window.removeEventListener(\"keydown\", onKeyDown);\n      window.removeEventListener(\"keyup\", onKeyUp);\n    };\n  });\n\n  // (see useEffect with 'eventsBlocked' for details on useCallback)\n  const onKeyUp = (event) => {\n    // keep track of which buttons are pressed in the state\n    if (event.keyCode === 32 && HoldSpace) {\n      setHoldSpace(false);\n      if (tokenSelection.length > 0) {\n        annotationFromSelection(tokens, tokenSelection, triggerCodePopup);\n      }\n      return;\n    }\n    if (arrowkeys.includes(event.key)) {\n      setHoldArrow(false);\n      setMover(null);\n    }\n  };\n\n  // (see useEffect with 'eventsBlocked' for details on useCallback)\n  const onKeyDown = (event) => {\n    // key presses, and key holding (see onKeyUp)\n    if (event.keyCode === 32) {\n      event.preventDefault();\n      if (event.repeat) return;\n      setHoldSpace(true);\n      return;\n    }\n    if (arrowkeys.includes(event.key)) {\n      event.preventDefault();\n      if (event.repeat) return;\n      setMover({\n        position: currentToken,\n        startposition: currentToken,\n        ntokens: tokens.length,\n        counter: 1,\n      });\n      setHoldArrow(event.key);\n    }\n\n    // if (tokenSelection.length > 0) {\n    //   if (tokenSelection[0] === tokenSelection[1]) {\n    //     // enter key\n    //     if (event.keyCode === 13) {\n    //       triggerCodePopup(tokens[tokenSelection[0]].index, null, null);\n    //     }\n    //   }\n    // }\n  };\n\n  return <></>;\n};\n\nconst MouseEvents = ({\n  tokenSelection,\n  tokens,\n  setCurrentToken,\n  setTokenSelection,\n  triggerCodePopup,\n}) => {\n  const selectionStarted = useRef(false);\n  const tapped = useRef(null);\n  const istouch = useRef(\n    \"ontouchstart\" in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0\n  ); // hack to notice if device uses touch (because single touch somehow triggers mouseup)\n\n  useEffect(() => {\n    window.addEventListener(\"mousedown\", onMouseDown);\n    window.addEventListener(\"mousemove\", onMouseMove);\n    window.addEventListener(\"mouseup\", onMouseUp);\n    window.addEventListener(\"touchstart\", onTouchDown);\n    window.addEventListener(\"contextmenu\", onContextMenu);\n    return () => {\n      window.removeEventListener(\"mousedown\", onMouseDown);\n      window.removeEventListener(\"mousemove\", onMouseMove);\n      window.removeEventListener(\"mouseup\", onMouseUp);\n      window.removeEventListener(\"touchstart\", onTouchDown);\n      window.removeEventListener(\"contextmenu\", onContextMenu);\n    };\n  });\n\n  const onTouchDown = (event) => {\n    const token = getToken(tokens, event);\n    if (token?.index === null) {\n      tapped.current = null;\n      setTokenSelection((state) => (state.length === 0 ? state : []));\n      return;\n    }\n\n    // first check if there is a tokenselection (after double tab). If so, this completes the selection\n    if (tokenSelection.length > 0 && tokenSelection[0] === tapped.current) {\n      // if a single token, and an annotation already exists, open create/edit mode\n      const currentNode = storeMouseSelection(event);\n      setTokenSelection((state) => updateSelection(state, tokens, currentNode, true));\n\n      if (token?.annotated && currentNode === tokenSelection[0]) {\n        annotationFromSelection(tokens, [currentNode, currentNode], triggerCodePopup);\n      } else {\n        annotationFromSelection(tokens, [tokenSelection[0], currentNode], triggerCodePopup);\n      }\n      tapped.current = null;\n      return;\n    }\n\n    // otherwise, handle the double tab (on the same token) for starting the selection\n    if (tapped.current !== token.index) {\n      tapped.current = token.index;\n      setTokenSelection((state) => (state.length === 0 ? state : []));\n    } else {\n      setTokenSelection((state) => updateSelection(state, tokens, token.index, true));\n    }\n  };\n\n  const onMouseDown = (event) => {\n    if (istouch.current) return; // suppress mousedown triggered by quick tap\n    // When left button pressed, start new selection\n    if (event.which === 1) {\n      selectionStarted.current = true;\n      setTokenSelection((state) => (state.length === 0 ? state : []));\n    }\n  };\n\n  const onMouseMove = (event) => {\n    if (istouch.current) return;\n    // When selection started (mousedown), select tokens hovered over\n    if (selectionStarted.current) {\n      event.preventDefault();\n      if (event.which !== 1 && event.which !== 0) return null;\n\n      window.getSelection().empty();\n      storeMouseSelection(event);\n    } else {\n      let currentNode = getToken(tokens, event);\n      if (currentNode.index !== null) {\n        setCurrentToken((state) => (state === currentNode.index ? state : currentNode.index));\n        setTokenSelection((state) => updateSelection(state, tokens, currentNode.index, false));\n      } else setCurrentToken((state) => (state === currentNode.index ? state : currentNode.index));\n    }\n  };\n\n  const onMouseUp = (event) => {\n    if (istouch.current) return;\n    // When left mouse key is released, create the annotation\n    // note that in case of a single click, the token has not been selected (this happens on move)\n    // so this way a click can still be used to open\n    if (event.which !== 1 && event.which !== 0) return null;\n    const currentNode = storeMouseSelection(event);\n    window.getSelection().empty();\n    //setHoldMouseLeft(false);\n    selectionStarted.current = false;\n\n    // this worked before, but is not possible due to touchend not registering position\n    //if (currentNode === null) return null;\n\n    // storeMouseSelection does save position to tokenSelection state, but this isn't\n    // yet updated within this scope. This results in single clicks (without mousemove)\n    // not registering. So if there is no current selection, directly use currentNode as position.\n    if (tokenSelection.length > 0 && tokenSelection[0] !== null && tokenSelection[1] !== null) {\n      annotationFromSelection(tokens, tokenSelection, triggerCodePopup);\n    } else {\n      if (currentNode !== null) {\n        annotationFromSelection(\n          tokens,\n          [currentNode, currentNode],\n\n          triggerCodePopup\n        );\n      }\n    }\n  };\n\n  const onContextMenu = (event) => {\n    if (event.button === 2) return null;\n    event.preventDefault();\n    event.stopPropagation();\n  };\n\n  const storeMouseSelection = (event) => {\n    // select tokens that the mouse/touch is currently pointing at\n    let currentNode = getToken(tokens, event);\n    //if (currentNode == null || currentNode === null) return null;\n\n    setCurrentToken((state) => (state === currentNode.index ? state : currentNode.index));\n    setTokenSelection((state) => updateSelection(state, tokens, currentNode.index, true));\n    return currentNode.index;\n  };\n\n  return <></>;\n};\n\nconst annotationFromSelection = (tokens, selection, triggerCodePopup) => {\n  let [from, to] = selection;\n  if (from > to) [from, to] = [to, from];\n\n  const annotation = {\n    index: tokens[from].index,\n    length: tokens[to].length + tokens[to].offset - tokens[from].offset,\n    span: [tokens[from].index, tokens[to].index],\n    section: tokens[from].section,\n    offset: tokens[from].offset,\n  };\n  triggerCodePopup(tokens[to].index, annotation);\n};\n\nconst movePosition = (tokens, key, mover, space, setCurrentToken, setTokenSelection) => {\n  let newPosition = mover.position;\n  if (key === \"ArrowRight\") newPosition++;\n  if (key === \"ArrowLeft\") newPosition--;\n  if (key === \"ArrowUp\") newPosition = moveSentence(tokens, mover, \"up\");\n  if (key === \"ArrowDown\") newPosition = moveSentence(tokens, mover, \"down\");\n\n  if (newPosition > mover.ntokens) newPosition = mover.ntokens;\n  if (newPosition < 0) newPosition = 0;\n\n  if (tokens[newPosition]?.ref == null) {\n    if (key === \"ArrowRight\") {\n      const firstUnit = tokens.findIndex((token) => token.codingUnit);\n      if (firstUnit < 0) return mover.position;\n      newPosition = firstUnit;\n    }\n    if (key === \"ArrowLeft\") {\n      const firstAfterUnit = tokens.lastIndexOf((token) => token.codingUnit);\n      if (firstAfterUnit < 0) return mover.position;\n      newPosition = firstAfterUnit - 1;\n    }\n  }\n\n  if (space) {\n    // limit selection to current section\n    if (tokens[mover.position].section !== tokens[newPosition].section) {\n      if (newPosition > mover.position) {\n        for (let i = newPosition; i >= mover.position; i--)\n          if (tokens[i].section === tokens[mover.position].section) {\n            newPosition = i;\n            break;\n          }\n      } else {\n        for (let i = newPosition; i <= mover.position; i++) {\n          if (tokens[i].section === tokens[mover.position].section) {\n            newPosition = i;\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  if (mover.position !== newPosition) {\n    setCurrentToken((state) => (state === newPosition ? state : newPosition));\n    setTokenSelection((state) => updateSelection(state, tokens, newPosition, space));\n    scrollTokenToMiddle(tokens[newPosition].ref.current);\n\n    // const down = key === \"ArrowRight\" || key === \"ArrowDown\";\n    // tokens[newPosition].ref.current.scrollIntoView(false, {\n    //   block: down ? \"start\" : \"end\",\n    // });\n  }\n  return newPosition;\n};\n\nconst moveSentence = (tokens, mover, direction = \"up\") => {\n  // moving sentences is a bit tricky, but we can do it via the refs to the\n  // token spans, that provide information about the x and y values\n\n  if (tokens[mover.position]?.ref == null || tokens[mover.startposition]?.ref == null) {\n    const firstUnit = tokens.findIndex((token) => token.codingUnit);\n    return firstUnit < 0 ? 0 : firstUnit;\n  }\n\n  if (direction === \"up\") {\n    return moveUp(tokens, mover.position);\n  }\n  if (direction === \"down\") {\n    return moveDown(tokens, mover.position);\n  }\n};\n\nconst getToken = (tokens, e) => {\n  const [n, annotated] = getNode(tokens, e);\n  if (n === null) return { index: null, annotated: false };\n  return { index: getTokenAttributes(tokens, n), annotated };\n};\n\nconst getNode = (tokens, e) => {\n  try {\n    // sometimes e is Restricted, and I have no clue why,\n    // nor how to check this in a condition. hence the try clause\n    let n;\n    if (e.type === \"mousemove\" || e.type === \"mouseup\") n = e.originalTarget || e.path[0];\n    if (e.type === \"touchmove\" || e.type === \"touchstart\") {\n      // stupid hack since someone decided touchmove target is always the starting target (weirdly inconsistent with mousemove)\n      // also, this still doesn't work for touchend, which is just arrrggg\n      let position = e.touches[0];\n      n = document.elementFromPoint(position.clientX, position.clientY);\n    }\n\n    if (n?.parentNode?.className === \"item\") {\n      return [null, false];\n    }\n\n    if (n) {\n      if (n.className.includes(\"token\")) {\n        return [n, false];\n      }\n      if (n.parentNode) {\n        if (n.parentNode.className.includes(\"token\")) return [n.parentNode, true];\n      }\n    }\n    return [null, false];\n  } catch (e) {\n    return [null, false];\n  }\n};\n\nconst getTokenAttributes = (tokens, tokenNode) => {\n  return parseInt(tokenNode.getAttribute(\"tokenindex\"));\n};\n\nconst scrollTokenToMiddle = (token) => {\n  // token->sentence->paragraph->paragraphFlexBox->section->textpart->box\n  // this should be stable, but it still looks terrible\n  const parentDiv = token.parentNode.parentNode.parentNode.parentNode.parentNode.parentNode;\n  keepInView(parentDiv, token);\n};\n\nconst updateSelection = (selection, tokens, index, add) => {\n  if (index === null) return selection;\n  let newSelection = [...selection];\n\n  if (!add || newSelection.length === 0) return [index, index];\n  if (index === null) return [newSelection[0], null];\n\n  if (tokens[newSelection[0]].section === tokens[index].section) {\n    newSelection = [newSelection[0], index];\n  } else {\n    if (index > newSelection[0]) {\n      for (let i = index; i >= newSelection[0]; i--) {\n        if (tokens[newSelection[0]].section === tokens[i].section)\n          newSelection = [newSelection[0], i];\n      }\n    } else {\n      for (let i = index; i <= newSelection[0]; i++) {\n        if (tokens[newSelection[0]].section === tokens[i].section)\n          newSelection = [newSelection[0], i];\n      }\n    }\n  }\n  // if it hasn't changed, return old to prevent updating the state\n  if (\n    newSelection.length > 0 &&\n    selection[0] === newSelection[0] &&\n    selection[1] === newSelection[1]\n  ) {\n    return selection;\n  }\n  return newSelection;\n};\n\nexport default AnnotationEvents;\n","// custom scrollintoview\n\nexport const scrollToMiddle = (parent, child, position) => {\n  // scroll parent to position of child\n  // position should be value between 0 and 1 for relative position between top (0) and bottom (1)\n  const parentBounding = parent.getBoundingClientRect();\n  const clientBounding = child.getBoundingClientRect();\n\n  const parentTop = parentBounding.top;\n  const parentHeight = parentBounding.height;\n  const clientTop = clientBounding.top;\n  const topToCenter = parentHeight / (1 / position); // position 1/4 down from top\n\n  parent.scrollTop = parent.scrollTop + clientTop - (topToCenter + parentTop);\n};\n\nexport const keepInView = (parent, child) => {\n  // scroll parent to position of child\n  // position should be value between 0 and 1 for relative position between top (0) and bottom (1)\n\n  const parentBounding = parent.getBoundingClientRect();\n  const clientBounding = child.getBoundingClientRect();\n\n  const parentTop = parentBounding.top;\n  const parentHeight = parentBounding.height;\n  const clientTop = clientBounding.top;\n\n  const needUp = clientTop - parentTop < 50;\n  const needDown = clientTop > parentTop + parentHeight * 0.9;\n\n  //if (needUp > 0) parent.scrollTop = parent.scrollTop + needUp;\n  if (needDown) {\n    parent.scrollTop = parent.scrollTop + clientTop - (parentHeight * 0.9 + parentTop);\n  }\n  if (needUp) {\n    parent.scrollTop = parent.scrollTop + clientTop - (parentHeight * 0.1 + parentTop);\n  }\n};\n","export const getColor = (annotationCode, codeMap) => {\n  if (codeMap[annotationCode]) {\n    const foldTo = codeMap[annotationCode].foldToParent;\n    if (foldTo && codeMap[foldTo]) return codeMap[foldTo].color + \"50\";\n    return codeMap[annotationCode].color + \"50\";\n  } else {\n    return \"#ffffff50\";\n  }\n};\n\nexport const getColorGradient = (colors) => {\n  let color = null;\n\n  if (colors.length === 1) {\n    color = colors[0];\n  } else {\n    const pct = Math.floor(100 / colors.length);\n    const gradColors = colors.reduce((a, color, i) => {\n      if (i === 0) a.push(color + ` ${pct}%`);\n      if (i === colors.length - 1) a.push(color + ` ${100 - pct}%`);\n\n      if (i > 0 && i < colors.length - 1) {\n        a.push(color + ` ${pct * i}%`);\n        a.push(color + ` ${pct * (i + 1)}%`);\n      }\n      return a;\n    }, []);\n\n    color = `linear-gradient(to bottom, ${gradColors.join(\", \")})`;\n  }\n\n  return color;\n};\n","import React, { useState, useEffect } from \"react\";\nimport AnnotationEvents from \"./AnnotationEvents\";\nimport { Popup, List } from \"semantic-ui-react\";\nimport { getColor, getColorGradient } from \"library/tokenDesign\";\n\n/**\n * The NavigationEvents component handles all eventlisteners\n * AnnotateNavigation furthermore takes the position and selection information\n * from the navigation to highlight the tokens and show popups\n */\nconst AnnotateNavigation = ({\n  tokens,\n  variableMap,\n  annotations,\n  triggerCodePopup,\n  eventsBlocked,\n  fullScreenNode,\n  disableAnnotations,\n}) => {\n  const [currentToken, setCurrentToken] = useState(0);\n  const [tokenSelection, setTokenSelection] = useState([]);\n\n  useEffect(() => {\n    if (!variableMap) return null;\n    showAnnotations(tokens, annotations, variableMap);\n  }, [tokens, annotations, variableMap]);\n\n  useEffect(() => {\n    showSelection(tokens, tokenSelection);\n  }, [tokens, tokenSelection]);\n\n  return (\n    <>\n      <AnnotationPopup\n        tokens={tokens}\n        currentToken={currentToken}\n        annotations={annotations}\n        variableMap={variableMap}\n        fullScreenNode={fullScreenNode}\n      />\n      {disableAnnotations ? null : (\n        <AnnotationEvents\n          tokens={tokens}\n          currentToken={currentToken}\n          setCurrentToken={setCurrentToken}\n          tokenSelection={tokenSelection}\n          setTokenSelection={setTokenSelection}\n          triggerCodePopup={triggerCodePopup}\n          eventsBlocked={eventsBlocked}\n        />\n      )}\n    </>\n  );\n};\n\nconst showAnnotations = (tokens, annotations, variableMap) => {\n  for (let token of tokens) {\n    if (!token.ref?.current) continue;\n\n    let tokenAnnotations = allowedAnnotations(annotations?.[token.index], variableMap);\n\n    if (!tokenAnnotations || Object.keys(tokenAnnotations).length === 0) {\n      if (token.ref.current.classList.contains(\"annotated\")) {\n        token.ref.current.classList.remove(\"annotated\");\n        setTokenColor(token, null, null, null);\n      }\n      continue;\n    }\n    annotateToken(token, tokenAnnotations, variableMap);\n  }\n};\n\nconst allowedAnnotations = (annotations, variableMap) => {\n  if (!annotations) return null;\n\n  if (annotations && variableMap) {\n    annotations = { ...annotations };\n    for (let variable of Object.keys(annotations)) {\n      if (!variableMap[variable]) {\n        delete annotations[variable];\n        continue;\n      }\n      const codeMap = variableMap[variable].codeMap;\n      const code = annotations[variable].value;\n      if (!codeMap[code] || !codeMap[code].active || !codeMap[code].activeParent)\n        delete annotations[variable];\n    }\n  }\n  return annotations;\n};\n\nconst annotateToken = (token, annotations, variableMap) => {\n  // Set specific classes for nice css to show the start/end of codes\n  let nLeft = 0;\n  let nRight = 0;\n  const colors = { pre: [], text: [], post: [] };\n  for (let variable of Object.keys(variableMap)) {\n    if (!annotations[variable]) {\n      colors.text.push(\"#ffffff50\");\n      colors.pre.push(\"#ffffff50\");\n      colors.post.push(\"#ffffff50\");\n      continue;\n    }\n    const codeMap = variableMap[variable].codeMap;\n    const code = annotations[variable];\n    const color = getColor(code.value, codeMap);\n    colors.text.push(color);\n    if (code.span[0] === code.index) {\n      nLeft++;\n    } else colors.pre.push(color);\n    if (code.span[1] === code.index) {\n      nRight++;\n    } else colors.post.push(color);\n  }\n\n  const allLeft = nLeft === Object.values(annotations).length;\n  const allRight = nRight === Object.values(annotations).length;\n  const anyLeft = nLeft > 0;\n  const anyRight = nRight > 0;\n\n  const cl = token.ref.current.classList;\n  cl.add(\"annotated\");\n  allLeft ? cl.add(\"allLeft\") : cl.remove(\"allLeft\");\n  anyLeft & !allLeft ? cl.add(\"anyLeft\") : cl.remove(\"anyLeft\");\n  allRight ? cl.add(\"allRight\") : cl.remove(\"allRight\");\n  anyRight & !allRight ? cl.add(\"anyRight\") : cl.remove(\"anyRight\");\n\n  const textColor = getColorGradient(colors.text);\n  const preColor = allLeft ? \"white\" : getColorGradient(colors.pre);\n  const postColor = allRight ? \"white\" : getColorGradient(colors.post);\n  setTokenColor(token, preColor, textColor, postColor);\n  //setTokenLabels(token, [\"test\", \"this\"]);\n};\n\n// const setTokenLabels = (token, labels) => {\n//   token.ref.current.style.lineHeight = `${labels.length * 1}em`;\n//   token.ref.current.style.marginBottom = \"-1em\";\n// };\n\nconst setTokenColor = (token, pre, text, post) => {\n  const children = token.ref.current.children;\n  children[0].style.background = pre;\n  children[1].style.background = text;\n  children[2].style.background = post;\n};\n\nconst showSelection = (tokens, selection) => {\n  for (let token of tokens) {\n    if (!token.ref?.current) continue;\n    if (selection.length === 0 || selection[0] === null || selection[1] === null) {\n      token.ref.current.classList.remove(\"selected\");\n      continue;\n    }\n\n    let [from, to] = selection;\n    //if (to === null) return false;\n    if (from > to) [to, from] = [from, to];\n    let selected = token.arrayIndex >= from && token.arrayIndex <= to;\n    const cl = token.ref.current.classList;\n    if (selected && token.codingUnit) {\n      const left = from === token.arrayIndex;\n      const right = to === token.arrayIndex;\n      cl.add(\"selected\");\n      left ? cl.add(\"start\") : cl.remove(\"start\");\n      right ? cl.add(\"end\") : cl.remove(\"end\");\n    } else cl.remove(\"selected\");\n  }\n};\n\nconst AnnotationPopup = ({ tokens, currentToken, annotations, variableMap, fullScreenNode }) => {\n  if (!tokens?.[currentToken]?.ref) return null;\n  if (!annotations?.[tokens[currentToken].index]) return null;\n  if (!variableMap) return null;\n\n  const tokenAnnotations = annotations[tokens[currentToken].index];\n  const variables = Object.keys(tokenAnnotations);\n  const codes = variables.map((variable) => tokenAnnotations[variable].value);\n\n  return (\n    <Popup\n      mountNode={fullScreenNode || undefined}\n      context={tokens?.[currentToken]?.ref}\n      basic\n      hoverable={false}\n      position=\"top left\"\n      mouseLeaveDelay={1}\n      open={true}\n      style={{ margin: \"0\", padding: \"0\", border: \"1px solid\" }}\n    >\n      <List>\n        {variables.map((variable, i) => {\n          if (!variableMap[variable]) return null;\n          return (\n            <List.Item\n              key={i}\n              style={{\n                backgroundColor: getColor(codes[i], variableMap[variable].codeMap),\n                padding: \"0.3em\",\n              }}\n            >\n              <b>{variable}</b>\n              {\": \" + codes[i]}\n            </List.Item>\n          );\n        })}\n      </List>\n    </Popup>\n  );\n};\n\nexport default AnnotateNavigation;\n","import React from \"react\";\nimport { Table } from \"semantic-ui-react\";\n\nconst Meta = ({ meta_fields }) => {\n  const cellStyle = (row) => {\n    const style = {};\n    if (row.bold) style.fontWeight = \"bold\";\n    if (row.italic) style.fontStyle = \"italic\";\n    return style;\n  };\n\n  const rows = () => {\n    return meta_fields.map((row) => {\n      return (\n        <Table.Row\n          style={{\n            fontSize: `${row.size != null ? row.size : 1}em`,\n          }}\n        >\n          <Table.Cell width={1}>\n            <b>{row.label || row.name}</b>\n          </Table.Cell>\n          <Table.Cell style={cellStyle(row)}>{formatValue(row.value)}</Table.Cell>\n        </Table.Row>\n      );\n    });\n  };\n\n  return (\n    <Table basic=\"very\" compact style={{ lineHeight: \"0.8\" }}>\n      {rows()}\n    </Table>\n  );\n};\n\nconst formatValue = (value) => {\n  //   try if value is a date, if so, format accordingly\n  //   Only remove T if time for now. Complicated due to time zones.\n  const dateInt = Date.parse(value);\n  if (dateInt) {\n    return value.replace(\"T\", \" \");\n  }\n  // if (dateInt) {\n  //   let date = new Date(dateInt);\n  //   const offset = date.getTimezoneOffset();\n  //   //date = new Date(date.getTime() - offset * 60 * 1000);\n  //   return date.toISOString().replace(\"T\", \" \").split(\".\")[0];\n  // }\n  return value;\n};\n\nexport default Meta;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Ref } from \"semantic-ui-react\";\nimport { scrollToMiddle } from \"library/scroll\";\n\nimport \"components/Document/subcomponents/spanAnnotationsStyle.css\";\nimport Meta from \"./Meta\";\n\nconst Tokens = ({ tokens, text_fields, meta_fields, centerVertical, setReady, height }) => {\n  const [text, setText] = useState({});\n  const containerRef = useRef(null);\n\n  useEffect(() => {\n    // immitates componentdidupdate to scroll to the textUnit after rendering tokens\n    const firstTextUnitToken = tokens.find((token) => token.codingUnit);\n    if (firstTextUnitToken?.ref?.current && containerRef.current) {\n      scrollToMiddle(containerRef.current, firstTextUnitToken.ref.current, 1 / 4);\n    }\n  });\n\n  useEffect(() => {\n    if (!tokens) return null;\n    setText(renderText(tokens, text_fields));\n    if (setReady) setReady((current) => current + 1); // setReady is an optional property used to let parents know the text is ready.\n  }, [tokens, text_fields, setReady]);\n\n  if (tokens === null) return null;\n\n  return (\n    <div\n      key=\"tokens\"\n      style={{\n        display: \"flex\",\n        alignItems: centerVertical ? \"center\" : null,\n        height: height,\n      }}\n    >\n      <Ref innerRef={containerRef}>\n        <div\n          className=\"TokensContainer\"\n          style={{\n            flex: \"1 97%\",\n            width: \"100%\",\n            maxHeight: height,\n            overflowY: \"auto\",\n            textAlign: \"justify\",\n          }}\n        >\n          {/* <div style={{ height: \"10em\" }} /> */}\n          <div\n            style={{\n              paddingTop: \"20px\",\n              marginLeft: \"10%\",\n              width: \"80%\",\n              textAlign: \"right\",\n            }}\n          >\n            <Meta meta_fields={meta_fields} />\n          </div>\n          <div style={{ padding: \"20px\" }}>{text[\"text\"]}</div>\n          <div style={{ height: \"25px\" }} />\n        </div>\n      </Ref>\n    </div>\n  );\n};\n\nconst renderText = (tokens, text_fields) => {\n  const text = { text: [] }; // yes, it would make sense to just make text an array, but for some reason React doesn't accept it\n  if (tokens.length === 0) return text;\n\n  let section = [];\n  let paragraph = [];\n  let sentence = [];\n  let codingUnit = tokens[0].codingUnit;\n  let section_name = tokens[0].section;\n  let paragraph_nr = tokens[0].paragraph;\n  let sentence_nr = tokens[0].sentence;\n\n  for (let i = 0; i < tokens.length; i++) {\n    tokens[i].arrayIndex = i;\n\n    if (tokens[i].sentence !== sentence_nr) {\n      if (sentence.length > 0) paragraph.push(renderSentence(i, sentence_nr, sentence));\n      sentence = [];\n    }\n    if (tokens[i].paragraph !== paragraph_nr) {\n      if (paragraph.length > 0) {\n        section.push(\n          renderParagraph(i, paragraph_nr, paragraph, tokens[i].paragraph !== paragraph_nr)\n        );\n      }\n      paragraph = [];\n    }\n\n    if (tokens[i].section !== section_name) {\n      if (section.length > 0)\n        text[\"text\"].push(\n          renderSection(text_fields, i + \"_\" + section_name, section, section_name)\n        );\n      section = [];\n    }\n\n    paragraph_nr = tokens[i].paragraph;\n    sentence_nr = tokens[i].sentence;\n    section_name = tokens[i].section;\n    codingUnit = tokens[i].codingUnit;\n\n    if (codingUnit) tokens[i].ref = React.createRef();\n    sentence.push(renderToken(tokens[i], codingUnit));\n  }\n\n  if (sentence.length > 0) paragraph.push(renderSentence(\"last\", sentence_nr, sentence));\n  if (paragraph.length > 0) section.push(renderParagraph(\"last\", paragraph_nr, paragraph, false));\n  if (section.length > 0)\n    text[\"text\"].push(renderSection(text_fields, \"last_\" + section_name, section, section_name));\n  return text;\n};\n\nconst renderSection = (text_fields, paragraph_nr, paragraphs, section) => {\n  const fontstyle = (paragraphs) => {\n    const layout = text_fields.find((tf) => tf.name === section);\n    if (layout) {\n      return (\n        <>\n          {layout.label ? (\n            <span\n              style={{\n                color: \"grey\",\n                fontWeight: \"bold\",\n                textAlign: \"center\",\n              }}\n            >\n              {layout.label}\n            </span>\n          ) : null}\n          <p\n            style={{\n              fontSize: `${layout.size != null ? layout.size : 1}em`,\n              fontWeight: layout.bold ? \"bold\" : \"normal\",\n              fontStyle: layout.italic ? \"italic\" : \"normal\",\n            }}\n            key={section + paragraph_nr}\n          >\n            {paragraphs}\n          </p>\n        </>\n      );\n    }\n    return paragraphs;\n  };\n\n  return (\n    // uses span behaving like p, because p is not allowed due to nested div (for Label)\n    <span className=\"section\" key={\"section\" + section}>\n      {fontstyle(paragraphs)}\n    </span>\n  );\n};\n\nconst renderParagraph = (position, paragraph_nr, sentences, end) => {\n  return (\n    // uses span behaving like p, because p is not allowed due to nested div (for Label)\n    <div style={{ display: \"flex\" }}>\n      {/* <div style={{ flex: \"1 2%\" }}>{paragraphAnnotateButton()}</div> */}\n      <span\n        key={\"par\" + paragraph_nr}\n        className=\"paragraph\"\n        style={{\n          flex: \"1 98%\",\n          paddingBottom: end ? \"1.5em\" : \"0em\",\n          display: \"table\",\n          paddingLeft: \"0.3em\",\n        }}\n      >\n        {sentences}\n      </span>\n    </div>\n  );\n};\n\nconst renderSentence = (position, sentence_nr, tokens) => {\n  return (\n    <span className=\"sentence\" key={\"sent\" + sentence_nr}>\n      {/* {sentenceAnnotateButton()} */}\n      {tokens}\n    </span>\n  );\n};\n\nconst renderToken = (token, codingUnit) => {\n  const style = codingUnit\n    ? { lineHeight: \"1.4em\", fontSize: \"1.5em\", position: \"relative\" }\n    : { color: \"#746363\", position: \"relative\" };\n\n  return (\n    <span\n      key={token.index}\n      ref={token.ref}\n      className={\"token\"}\n      tokenindex={token.arrayIndex}\n      style={style}\n    >\n      <span className=\"pre\">{token.pre}</span>\n      <span className=\"text\">{token.text}</span>\n      <span className=\"post\">{token.post}</span>\n      <div\n        className=\"variable\"\n        style={{ position: \"absolute\", top: \"-0.4em\", left: \"0\", fontSize: \"0.4em\" }}\n      ></div>\n    </span>\n  );\n};\n\nexport default React.memo(Tokens);\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { Button, Dropdown, Grid, Popup, Ref } from \"semantic-ui-react\";\nimport { toggleSpanAnnotation } from \"library/annotations\";\nimport { codeBookEdgesToMap } from \"library/codebook\";\nimport { getColor } from \"library/tokenDesign\";\nimport { moveDown, moveUp } from \"library/refNavigation\";\n\nconst arrowKeys = [\"ArrowRight\", \"ArrowLeft\", \"ArrowUp\", \"ArrowDown\"];\n\nconst useCodeSelector = (\n  tokens,\n  variables,\n  selectedVariable,\n  annotations,\n  setAnnotations,\n  fullScreenNode\n) => {\n  const [open, setOpen] = useState(false);\n  const [selection, setSelection] = useState(null);\n  const [overwrites, setOverwrites] = useState([]);\n  const [variable, setVariable] = useState(null);\n  const [tokenRef, setTokenRef] = useState(null);\n  const [tokenAnnotations, setTokenAnnotations] = useState({});\n\n  const [fullVariableMap, setFullVariableMap] = useState(null);\n  const [variableMap, setVariableMap] = useState(null);\n\n  const [codeHistory, setCodeHistory] = useState({});\n  const setSelectedCodeHistory = React.useCallback(\n    (value) => {\n      setCodeHistory((state) => {\n        state[selectedVariable] = value;\n        return state;\n      });\n    },\n    [selectedVariable, setCodeHistory]\n  );\n\n  useEffect(() => {\n    // creates fullVariableMap\n    if (!variables || variables.length === 0) {\n      setFullVariableMap(null);\n      return null;\n    }\n\n    const vm = {};\n    for (let variable of variables) {\n      let cm = codeBookEdgesToMap(variable.codes);\n      cm = Object.keys(cm).reduce((obj, key) => {\n        if (!cm[key].active || !cm[key].activeParent) return obj;\n        obj[key] = cm[key];\n        return obj;\n      }, {});\n      vm[variable.name] = { ...variable, codeMap: cm };\n    }\n    setFullVariableMap(vm);\n    setCodeHistory({});\n  }, [variables, setFullVariableMap, setCodeHistory]);\n\n  useEffect(() => {\n    // creates the actually used variableMap from the fullVariableMap\n    // this lets us select specific variables without recreating full map\n    if (fullVariableMap === null) {\n      setVariableMap(null);\n      return;\n    }\n    if (selectedVariable === null || selectedVariable === \"ALL\") {\n      setVariableMap(fullVariableMap);\n      setVariable(null);\n    } else {\n      setVariableMap({ [selectedVariable]: fullVariableMap[selectedVariable] });\n      setVariable(selectedVariable);\n    }\n  }, [fullVariableMap, selectedVariable, setVariable, setVariableMap]);\n\n  useEffect(() => {\n    setOpen(false);\n  }, [tokens]);\n\n  useEffect(() => {\n    if (!open) setVariable(null);\n  }, [open]);\n\n  if (!variables) return [null, null, null, true];\n\n  const triggerFunction = (index, selection) => {\n    setTokenRef(tokens[index].ref);\n    setTokenAnnotations(annotations[index] || {});\n    setSelection(selection);\n    setOpen(true);\n  };\n\n  let popup = (\n    <CodeSelectorPopup\n      variable={variable}\n      fullScreenNode={fullScreenNode}\n      open={open}\n      setOpen={setOpen}\n      tokenRef={tokenRef}\n      overwrites={overwrites}\n    >\n      <SelectVariablePage // when editing existing annotation, choose which is the 'current' code to edit\n        variable={variable}\n        setVariable={setVariable}\n        setOverwrites={setOverwrites}\n        variableMap={variableMap}\n        annotations={annotations}\n        selection={selection}\n        setOpen={setOpen}\n        canBeNew={selection !== null} // if no selection is provided, can only edit existing codes\n      />\n\n      <NewCodePage // if current is known, select what the new code should be (or delete, or ignore)\n        variable={variable}\n        variableMap={variableMap}\n        overwrites={overwrites}\n        codeMap={variableMap?.[variable]?.codeMap}\n        settings={variableMap?.[variable]}\n        codeHistory={codeHistory[selectedVariable] || []}\n        annotations={tokenAnnotations}\n        setAnnotations={setAnnotations}\n        selection={selection}\n        setOpen={setOpen}\n        setCodeHistory={setSelectedCodeHistory}\n      />\n    </CodeSelectorPopup>\n  );\n  if (!variableMap || !tokens) popup = null;\n\n  return [popup, triggerFunction, variableMap, open];\n};\n\nconst CodeSelectorPopup = ({\n  children,\n  variable,\n  fullScreenNode,\n  open,\n  setOpen,\n  tokenRef,\n  overwrites,\n}) => {\n  const [hasOpened, setHasOpened] = useState(false);\n\n  const overwriteWarning = () => {\n    if (!variable || overwrites.length === 0) return;\n    let message =\n      overwrites.length === 1 ? `existing annotation` : `${overwrites.length} existing annotations`;\n    return (\n      <div style={{ margin: \"1em\", color: \"red\" }}>Warning: overwrites or deletes {message}</div>\n    );\n  };\n\n  return (\n    <Popup\n      mountNode={fullScreenNode || undefined}\n      context={tokenRef}\n      hoverable\n      open={open}\n      mouseLeaveDelay={10000000} // just don't use mouse leave\n      onOpen={() => setHasOpened(true)}\n      onClose={() => {\n        if (hasOpened) {\n          setOpen(false);\n        }\n      }}\n      style={{ padding: \"0px\", minWidth: \"15em\" }}\n    >\n      <div\n        style={{\n          minWidth: \"12em\",\n          textAlign: \"center\",\n\n          background: \"#1B1C1D\",\n          color: \"white\",\n          border: \"1px solid\",\n        }}\n      >\n        {!variable ? (\n          <b>Select variable</b>\n        ) : (\n          <>\n            <b>{variable}</b>{\" \"}\n          </>\n        )}\n        <Button\n          compact\n          floated=\"right\"\n          icon=\"delete\"\n          size=\"mini\"\n          style={{ background: \"#80808000\", margin: \"0px\", color: \"white\" }}\n          onClick={() => {\n            setOpen(false);\n          }}\n        />\n      </div>\n      {overwriteWarning()}\n      <div style={{ margin: \"1em\", border: \"0px\" }}>{children}</div>\n    </Popup>\n  );\n};\n\nconst SelectVariablePage = ({\n  variable,\n  setVariable,\n  setOverwrites,\n  annotations,\n  selection,\n  canBeNew,\n  setOpen,\n  variableMap,\n}) => {\n  const setValue = (value) => {\n    const current = new Set();\n    for (let i = selection.span[0]; i <= selection.span[1]; i++) {\n      if (annotations?.[i]?.[value]) {\n        const annId = annotations?.[i]?.[value].span[0] + \"_\" + annotations?.[i]?.[value].value;\n        current.add(annId);\n      }\n    }\n\n    if (current.size > 0) {\n      setOverwrites(Array.from(current));\n    } else {\n      setOverwrites([]);\n    }\n    setVariable(value);\n  };\n\n  const getOptions = () => {\n    let variables = Object.keys(variableMap);\n    if (!canBeNew) variables = variables.filter((variable) => annotations[variable] != null);\n    return variables.map((variable) => ({ color: \"white\", label: variable, value: variable }));\n  };\n\n  if (variable) return null;\n\n  const options = getOptions();\n  if (options.length === 1) {\n    setValue(options[0].value);\n  }\n\n  return (\n    <div>\n      <ButtonSelection\n        key={\"currentCodePageButtons\"}\n        active={true}\n        canDelete={false}\n        settings={{ rowSize: 5 }}\n        options={options}\n        setOpen={setOpen}\n        callback={setValue}\n      />\n    </div>\n  );\n};\n\nconst NewCodePage = ({\n  variable,\n  variableMap,\n  codeHistory,\n  settings,\n  annotations,\n  setAnnotations,\n  selection,\n  overwrites,\n  setOpen,\n  setCodeHistory,\n}) => {\n  const textInputRef = useRef(null);\n  const [focusOnButtons, setFocusOnButtons] = useState(true);\n\n  const onKeydown = React.useCallback(\n    (event) => {\n      if (settings && !settings.searchBox) return null;\n      const focusOnTextInput = textInputRef?.current?.children[0] === document.activeElement;\n      if (!focusOnTextInput) setFocusOnButtons(true);\n      if (event.keyCode === 27) setOpen(false);\n      if (arrowKeys.includes(event.key)) return null;\n      if (event.keyCode <= 46 || event.keyCode >= 106) return null;\n      if (textInputRef.current) textInputRef.current.click();\n      setFocusOnButtons(false);\n    },\n    [textInputRef, setOpen, settings]\n  );\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", onKeydown);\n    return () => {\n      window.removeEventListener(\"keydown\", onKeydown);\n    };\n  });\n\n  const onButtonSelect = (value) => {\n    if (value === null) {\n      // value is null means delete, so in that case update annotations with current value (to toggle it off)\n      updateAnnotations(\n        annotations,\n        variable,\n        true,\n        value,\n        selection,\n        setAnnotations,\n        setOpen,\n        codeHistory,\n        setCodeHistory\n      );\n    } else {\n      updateAnnotations(\n        annotations,\n        variable,\n        false,\n        value,\n        selection,\n        setAnnotations,\n        setOpen,\n        codeHistory,\n        setCodeHistory\n      );\n    }\n  };\n\n  const getOptions = () => {\n    const buttonOptions = [];\n    const dropdownOptions = [];\n    const historyN = 5; // maybe make this a setting\n    const codeMap = variableMap?.[variable]?.codeMap;\n\n    for (let code of Object.keys(codeMap)) {\n      const singleSelection = selection === null || selection?.span[0] === selection?.span[1];\n      if (singleSelection && annotations[code]) continue;\n\n      if (settings && settings.buttonMode === \"all\")\n        buttonOptions.push({ key: code, label: code, value: code, color: getColor(code, codeMap) });\n\n      let tree = codeMap[code].tree.join(\" - \");\n      dropdownOptions.push({\n        key: code,\n        value: code,\n        text: code + \" \" + tree,\n        content: (\n          <>\n            {code}\n            <br />\n            <span style={{ color: \"grey\" }}>{tree}</span>\n          </>\n        ),\n      });\n    }\n\n    // use 'recent' mode if specified, or if settings are missing\n    if (!settings || settings.buttonMode === \"recent\") {\n      for (let code of codeHistory) {\n        if (buttonOptions.length > historyN) break;\n        buttonOptions.push({ key: code, label: code, value: code, color: getColor(code, codeMap) });\n      }\n    }\n    return [buttonOptions, dropdownOptions];\n  };\n\n  const buttonSelection = (options) => {\n    if (options.length === 0) return null;\n    return (\n      <ButtonSelection\n        key={\"newCodePageButtons\"}\n        active={focusOnButtons}\n        canDelete={overwrites.length > 0}\n        settings={settings}\n        options={options}\n        setOpen={setOpen}\n        callback={onButtonSelect}\n      />\n    );\n  };\n\n  const dropdownSelection = (options) => {\n    if (options.length === 0) return null;\n    const codeMap = variableMap?.[variable]?.codeMap;\n    if (!codeMap) return null;\n\n    // use searchBox if specified OR if settings are missing\n    // also, if buttonmode is 'recent', always show search box\n    if (settings && !settings.searchBox && settings.buttonMode !== \"recent\") return null;\n    return (\n      <>\n        <Grid>\n          <Grid.Column width={13} floated=\"left\">\n            <Ref innerRef={textInputRef}>\n              <Dropdown\n                fluid\n                placeholder={\"<type to search>\"}\n                style={{ minWidth: \"12em\" }}\n                options={Object.keys(codeMap).reduce((options, code) => {\n                  let tree = codeMap[code].tree.join(\" - \");\n                  //if (tree === \"\") tree = \"Root\";\n                  options.push({\n                    key: code,\n                    value: code,\n                    text: code + \" \" + tree,\n                    content: (\n                      <>\n                        {code}\n                        <br />\n                        <span style={{ color: \"grey\" }}>{tree}</span>\n                      </>\n                    ),\n                  });\n\n                  return options;\n                }, [])}\n                open={!focusOnButtons}\n                search\n                selection\n                compact\n                selectOnNavigation={false}\n                minCharacters={0}\n                autoComplete={\"on\"}\n                onClick={() => setFocusOnButtons(false)}\n                onSearchChange={(e, d) => {\n                  if (d.searchQuery === \"\") setFocusOnButtons(true);\n                }}\n                onClose={() => setFocusOnButtons(true)}\n                onChange={(e, d) => {\n                  if (codeMap[d.value])\n                    updateAnnotations(\n                      annotations,\n                      variable,\n                      false,\n                      d.value,\n                      selection,\n                      setAnnotations,\n                      setOpen,\n                      codeHistory,\n                      setCodeHistory\n                    );\n                }}\n              />\n            </Ref>\n          </Grid.Column>\n        </Grid>\n        <br />\n      </>\n    );\n  };\n\n  if (!variable) return null;\n\n  const [buttonOptions, dropdownOptions] = getOptions();\n\n  return (\n    <>\n      {dropdownSelection(dropdownOptions)}\n      {buttonSelection(buttonOptions)}\n    </>\n  );\n};\n\nconst ButtonSelection = ({ active, options, canDelete, settings, setOpen, callback }) => {\n  const [selected, setSelected] = useState(0);\n  const [allOptions, setAllOptions] = useState([]);\n\n  useEffect(() => {\n    let allOptions = [...options];\n    if (canDelete)\n      allOptions.push({ label: \"DELETE\", color: \"red\", value: null, textColor: \"white\" });\n    allOptions.push({ label: \"CANCEL\", color: \"grey\", value: \"CANCEL\", textColor: \"white\" });\n    for (let option of allOptions) option.ref = React.createRef();\n    setAllOptions(allOptions);\n  }, [options, canDelete, setAllOptions]);\n\n  const onKeydown = React.useCallback(\n    (event) => {\n      const nbuttons = allOptions.length;\n\n      // any arrowkey\n      if (arrowKeys.includes(event.key)) {\n        event.preventDefault();\n\n        if (event.key === \"ArrowRight\") {\n          if (selected < nbuttons - 1) setSelected(selected + 1);\n        }\n\n        if (event.key === \"ArrowDown\") {\n          setSelected(moveDown(allOptions, selected));\n        }\n\n        if (event.key === \"ArrowLeft\") {\n          if (selected > 0) setSelected(selected - 1);\n        }\n\n        if (event.key === \"ArrowUp\") {\n          setSelected(moveUp(allOptions, selected));\n        }\n\n        return;\n      }\n\n      // delete\n      if (event.keyCode === 46) callback(null);\n\n      // space or enter\n      if (event.keyCode === 32 || event.keyCode === 13) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        let value = allOptions[selected].value;\n        if (value === \"CANCEL\") {\n          setOpen(false);\n        } else callback(value);\n      }\n    },\n    [selected, callback, allOptions, setOpen]\n  );\n\n  useEffect(() => {\n    if (active) {\n      window.addEventListener(\"keydown\", onKeydown);\n    } else {\n      window.removeEventListener(\"keydown\", onKeydown);\n    }\n    return () => {\n      window.removeEventListener(\"keydown\", onKeydown);\n    };\n  }, [active, onKeydown]);\n\n  const mapButtons = () => {\n    return allOptions.map((option, i) => {\n      return (\n        <Ref innerRef={option.ref}>\n          <Button\n            style={{\n              flex: `1 1 auto`,\n              backgroundColor: option.color,\n              color: option.textColor || \"black\",\n              border: \"3px solid\",\n              borderColor: i === selected ? \"black\" : \"lightgrey\",\n              margin: \"0\",\n            }}\n            key={option.label}\n            value={option.value}\n            compact\n            size=\"mini\"\n            //active={i === selected}\n            onMouseOver={() => setSelected(i)}\n            onClick={(e, d) => {\n              console.log(d.value);\n              if (d.value === \"CANCEL\") {\n                setOpen(false);\n              } else callback(d.value);\n            }}\n          >\n            {\" \" + option.label}\n          </Button>\n        </Ref>\n      );\n    });\n  };\n\n  return <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>{mapButtons()}</div>;\n};\n\nconst updateAnnotations = (\n  annotations,\n  variable,\n  deleteCurrent,\n  value,\n  selection,\n  setAnnotations,\n  setOpen,\n  codeHistory,\n  setCodeHistory\n) => {\n  if (!annotations) {\n    setOpen(false);\n    return null;\n  }\n\n  let rmAnnotation = { ...selection, variable };\n  if (deleteCurrent) {\n    setAnnotations((state) => toggleSpanAnnotation({ ...state }, rmAnnotation, true));\n    setOpen(false);\n    return null;\n  }\n\n  let newAnnotation = { ...selection, variable, value };\n  setAnnotations((state) => {\n    const newstate = toggleSpanAnnotation({ ...state }, rmAnnotation, true);\n    return toggleSpanAnnotation(newstate, newAnnotation, false);\n  });\n  setCodeHistory([value, ...codeHistory.filter((v) => v !== value)].slice(0, 5));\n  setOpen(false);\n};\n\nexport default useCodeSelector;\n","import { useState, useEffect } from \"react\";\nimport { prepareDocument } from \"library/createDocuments\";\nimport hash from \"object-hash\";\n\nconst useUnit = (unit, safetyCheck, returnTokens) => {\n  const [preparedUnit, setPreparedUnit] = useState({});\n  const [annotations, setAnnotations] = useState();\n\n  useEffect(() => {\n    if (!unit?.text && !unit.text_fields && !unit.tokens) return null;\n    const document = prepareDocument(unit);\n    safetyCheck.current = {\n      tokens: document.tokens,\n      annotationsChanged: false,\n      annotations: hash(document.annotations),\n    };\n    setPreparedUnit({\n      tokens: document.tokens,\n      text_fields: document.text_fields,\n      meta_fields: document.meta_fields,\n    });\n    setAnnotations(document.annotations);\n    if (returnTokens) returnTokens(document.tokens);\n  }, [unit, returnTokens, safetyCheck]);\n\n  // if returnAnnotations is falsy (so not passed to Document), make setAnnotations\n  // falsy as well. This is used further down as a sign that annotations are disabled\n  return [preparedUnit, annotations, setAnnotations];\n};\n\nexport default useUnit;\n","import React, { useEffect } from \"react\";\nimport { Button } from \"semantic-ui-react\";\n\nconst SelectVariable = ({ variables, variable, setVariable, height }) => {\n  let variableNames = [];\n  if (variables != null && variables?.length > 0) {\n    variableNames = variables.map((v) => v.name);\n    variableNames.push(\"ALL\");\n  }\n\n  const onKeyDown = (e) => {\n    let move = 0;\n    if (e.keyCode === 9) {\n      e.preventDefault();\n      if (e.shiftKey) {\n        if (!e.repeat) {\n          move = -1;\n        }\n      } else {\n        if (!e.repeat) {\n          move = 1;\n        }\n      }\n    }\n\n    const currentIndex = variableNames.findIndex((name) => name === variable);\n    let newIndex = currentIndex + move;\n    if (newIndex > variableNames.length - 1) newIndex = 0;\n    if (newIndex < 0) newIndex = variableNames.length - 1;\n    setVariable(variableNames[newIndex]);\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", onKeyDown);\n    return () => {\n      window.removeEventListener(\"keydown\", onKeyDown);\n    };\n  });\n\n  if (!variables || variables.length <= 1) return null;\n  const mapVariables = () => {\n    return variableNames.map((name) => {\n      return (\n        <Button\n          active={name === variable}\n          style={{ padding: \"0\" }}\n          onClick={() => setVariable(name)}\n        >\n          {name}\n        </Button>\n      );\n    });\n  };\n\n  if (variable === null) setVariable(variableNames[0]);\n\n  return (\n    <Button.Group fluid style={{ height }}>\n      {mapVariables()}\n    </Button.Group>\n  );\n};\n\nexport default SelectVariable;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport AnnotateNavigation from \"./subcomponents/AnnotateNavigation\";\nimport Tokens from \"./subcomponents/Tokens\";\nimport useCodeSelector from \"./subcomponents/useCodeSelector\";\nimport { useSelector } from \"react-redux\";\nimport { exportSpanAnnotations } from \"library/annotations\";\nimport useUnit from \"./subcomponents/useUnit\";\nimport hash from \"object-hash\";\nimport SelectVariable from \"./subcomponents/SelectVariable\";\n\n/**\n * This is hopefully the only Component in this folder that you'll ever see. It should be fairly isolated\n * and easy to use, but behind the scenes it gets dark real fast.\n * @param {*} unit     A unit object, as created in JobServerClass (or standardizeUnit)\n * @param {*} variables An object with variables, where each variable is an array of codes\n * @param {*} settings An object with settings. Currently supports:\n *                     - centerVertical: true/false      whether text is centered verticall\n *                     - buttonMode: \"all\"/\"recent\"      show all or only recent selected options as button\n *                     - rowSize: number                 number of buttons per row\n * @param {*} onChangeAnnotations An optional function for saving annotations.\n *                              If not given, users cannot make annotations\n * @param {*} returnTokens   An optional function for getting access to the tokens array\n * @param {*} setReady       A function for passing a boolean to the parent to indicate that the\n *                           text is ready (which is usefull if the parent wants to transition\n *                           to new texts nicely)\n * @param {*} blockEvents    boolean. If true, disable event listeners\n * @returns\n */\nconst Document = ({\n  unit,\n  variables, //codes,\n  settings,\n  onChangeAnnotations,\n  returnTokens,\n  setReady,\n  blockEvents,\n}) => {\n  const fullScreenNode = useSelector((state) => state.fullScreenNode);\n  const safetyCheck = useRef(null); // ensures only new annotations for the current unit are passed to onChangeAnnotations\n  const [variable, setVariable] = useState(null);\n\n  const [tokensReady, setTokensReady] = useState(0);\n  const [preparedUnit, annotations, setAnnotations] = useUnit(unit, safetyCheck, returnTokens);\n  const [popup, triggerCodePopup, variableMap, codeSelectorOpen] = useCodeSelector(\n    preparedUnit.tokens,\n    variables,\n    variable,\n    annotations,\n    setAnnotations,\n    fullScreenNode\n  );\n\n  useEffect(() => {\n    if (!annotations || !onChangeAnnotations) return;\n\n    // check if same unit, to prevent annotations from spilling over due to race conditions\n    if (safetyCheck.current.tokens !== preparedUnit.tokens) return;\n    // check if annotations changed since start.\n    if (!safetyCheck.current.annotationsChanged) {\n      if (safetyCheck.current.annotations === hash(annotations)) return;\n      safetyCheck.current.annotationsChanged = true;\n    }\n\n    onChangeAnnotations(exportSpanAnnotations(annotations, preparedUnit.tokens, true));\n  }, [preparedUnit.tokens, annotations, onChangeAnnotations]);\n\n  useEffect(() => {\n    if (setReady) setReady((current) => current + 1);\n    setAnnotations((state) => ({ ...state })); //trigger DOM update after token refs have been prepared\n  }, [tokensReady, setAnnotations, setReady]);\n\n  if (!preparedUnit.tokens) return null;\n  return (\n    <>\n      <SelectVariable\n        variables={variables}\n        variable={variable}\n        setVariable={setVariable}\n        height={\"30px\"}\n      />\n\n      <Tokens\n        tokens={preparedUnit.tokens}\n        text_fields={preparedUnit.text_fields}\n        meta_fields={preparedUnit.meta_fields}\n        centerVertical={settings.centerVertical}\n        setReady={setTokensReady}\n        height={variables && variables.length > 1 ? \"calc(100% - 30px)\" : \"100%\"}\n      />\n      <AnnotateNavigation\n        tokens={preparedUnit.tokens}\n        variableMap={variableMap}\n        annotations={annotations}\n        triggerCodePopup={triggerCodePopup}\n        eventsBlocked={codeSelectorOpen || blockEvents}\n        fullScreenNode={fullScreenNode}\n        disableAnnotations={!onChangeAnnotations || !variableMap}\n      />\n\n      {popup || null}\n    </>\n  );\n};\n\nexport default React.memo(Document);\n","import seedrandom from \"seedrandom\";\n\nexport const drawRandom = (array, n, replace, seed, group) => {\n  const random = seedrandom(seed);\n\n  if (n == null || n === null) n = array.length;\n  if (!replace && n > array.length) n = array.length;\n  let index = [...Array(array.length).keys()];\n\n  let indices, ns;\n  if (group === null) {\n    indices = [index];\n    ns = [n];\n  } else {\n    indices = splitIndex(index, group);\n    ns = distributeN(indices, n);\n  }\n\n  let out = [];\n\n  for (let j = 0; j < indices.length; j++) {\n    if (replace) {\n      for (let i = 0; i < n; i++) {\n        out.push(indices[j][Math.floor(random() * indices[j].length)]);\n      }\n    } else {\n      indices[j] = getRandomSubarray(\n        indices[j],\n        ns[j] < indices[j].length ? ns[j] : indices[j].length,\n        random\n      );\n      for (let i of indices[j]) out.push(i);\n    }\n  }\n\n  out = getRandomSubarray(out, out.length, random);\n  return out.map((i) => array[i]);\n};\n\n//from: https://stackoverflow.com/questions/11935175/sampling-a-random-subset-from-an-array\nconst getRandomSubarray = (arr, size, random) => {\n  var shuffled = arr.slice(0),\n    i = arr.length,\n    min = i - size,\n    temp,\n    index;\n  while (i-- > min) {\n    index = Math.floor((i + 1) * random());\n    temp = shuffled[index];\n    shuffled[index] = shuffled[i];\n    shuffled[i] = temp;\n  }\n\n  return shuffled.slice(min);\n};\n\nconst splitIndex = (index, group) => {\n  // index and group must be of same length\n  const indices = [];\n  const groupOb = {};\n\n  for (let i = 0; i < index.length; i++) {\n    if (groupOb[group[i]] == null) {\n      groupOb[group[i]] = indices.length;\n      indices.push([]);\n    }\n    indices[groupOb[group[i]]].push(index[i]);\n  }\n  return indices;\n};\n\nconst distributeN = (indices, n) => {\n  const ns = new Array(indices.length).fill(0);\n  let full = new Array(indices.length).fill(0);\n  let remain = n;\n  let remainIndices = indices.length;\n  let i = -1;\n\n  while (remain > 0) {\n    i++;\n    let select = i % indices.length;\n    if (full[select] !== 1) {\n      ns[select]++;\n      remain--;\n      if (ns[select] === indices[select].length) {\n        full[select] = 1;\n        remainIndices--;\n      }\n    }\n    if (remainIndices === 0) break;\n  }\n  return ns;\n};\n","import db from \"apis/dexie\";\nimport { useEffect, useState } from \"react\";\nimport { drawRandom } from \"library/sample\";\n\n/**\n * Hook for getting the Units (using the current codingjob settings)\n * @param {} codingjob\n * @returns\n */\nconst useUnits = (codingjob) => {\n  const [units, setUnits] = useState(null);\n\n  // When a new codingjob is loaded, set codingjobLoaded ref to false\n  // this prevents actually loading the data until unitSettings has loaded\n  // the unitSettings stored in the codingjob\n\n  useEffect(() => {\n    if (!codingjob?.unitSettings) return null;\n    //setUnits(null);\n    getUnits(codingjob, setUnits);\n  }, [codingjob, setUnits]);\n\n  if (!codingjob) return null;\n\n  return units;\n};\n\nconst getUnits = async (codingjob, setUnits) => {\n  let [totalUnits, units] = await getUnitsFromDB(codingjob);\n  setUnits(units);\n\n  if (\n    codingjob.unitSettings.n === null ||\n    codingjob.unitSettings.n == null ||\n    codingjob.unitSettings.totalUnits !== totalUnits\n  ) {\n    await db.setCodingjobProp(codingjob, \"unitSettings\", {\n      ...codingjob.unitSettings,\n      n: totalUnits,\n      totalUnits,\n    });\n  }\n};\n\nconst getUnitsFromDB = async (codingjob) => {\n  if (!codingjob?.unitSettings) return null;\n  const textUnit = codingjob.unitSettings.textUnit;\n  const unitSettings = codingjob.unitSettings;\n\n  let totalUnits = 0;\n\n  const getGroup = (cjIndices) => {\n    if (!unitSettings.balanceDocuments && !unitSettings.balanceAnnotations) return null; // if not balanced\n\n    return cjIndices.map((item) => {\n      let group = \"\";\n      if (unitSettings.balanceDocuments) group += item.docIndex;\n      if (item.variables && unitSettings.balanceAnnotations) {\n        group += \"_\" + Object.values(item.variables)[0];\n      }\n      return group;\n    });\n  };\n\n  let cjIndices;\n  let done;\n\n  if (unitSettings.unitSelection === \"allTextUnits\") {\n    cjIndices = await allUnits(codingjob, textUnit, new Set([]), true);\n    totalUnits = cjIndices.length;\n    cjIndices = drawRandom(\n      cjIndices,\n      unitSettings.n,\n      false,\n      unitSettings.seed,\n      getGroup(cjIndices)\n    );\n  }\n\n  if (unitSettings.unitSelection === \"annotations\") {\n    [cjIndices, done] = await annotationUnits(codingjob, textUnit, false, unitSettings.validCodes);\n\n    totalUnits = cjIndices.length;\n    cjIndices = drawRandom(\n      cjIndices,\n      unitSettings.n,\n      false,\n      unitSettings.seed,\n      getGroup(cjIndices)\n    );\n\n    if (unitSettings.annotationMix && unitSettings.annotationMix > 0) {\n      // Annotationmix is now disabled, but leaving it here because it might make a comeback someday\n      const noDuplicates = false;\n\n      const all = await allUnits(codingjob, textUnit, done, noDuplicates);\n      let sampleN = Math.ceil(cjIndices.length * (unitSettings.annotationMix / 100));\n      let addSample = drawRandom(\n        all,\n        sampleN,\n        !noDuplicates,\n        unitSettings.seed,\n        getGroup(cjIndices)\n      );\n\n      let nCodes = unitSettings.validCodes.length;\n      addSample = addSample.map((item, i) => {\n        // add random annotation to mix by drawing from the annotations in the cjIndices sample.\n        // this is random, and automatically gives approximately the same distribution of codes\n        let value;\n        if (unitSettings.balanceAnnotations) {\n          value = unitSettings.validCodes[i % nCodes];\n        } else {\n          const annSample = cjIndices[i % cjIndices.length];\n          value = annSample.value;\n          //if (annSample?.variable) item.variable = annSample.variable;\n          //if (annSample?.value) item.value = annSample.value;\n        }\n        item.variables = { [unitSettings.annotation]: value };\n        return { ...item };\n      });\n      cjIndices = cjIndices.concat(addSample);\n    }\n  }\n\n  cjIndices = orderUnits(cjIndices, unitSettings);\n\n  return [totalUnits, cjIndices];\n};\n\nconst allUnits = async (codingjob, textUnit, done, noDuplicates) => {\n  let documents = await db.getDocuments(codingjob);\n\n  let minIndex = 0;\n  let maxIndex = Infinity;\n  if (codingjob.unitSettings.useIndexWindow) {\n    minIndex = codingjob.unitSettings.indexWindow[0];\n    maxIndex = codingjob.unitSettings.indexWindow[1];\n  }\n\n  const cjIndices = [];\n  let docIndex = -1;\n  await documents.each((e) => {\n    docIndex++;\n    if (textUnit === \"document\" && !done.has(e.doc_uid)) {\n      if (noDuplicates && done.has(e.doc_uid)) return;\n      cjIndices.push({\n        textUnit,\n        unitIndex: 0, // this is for consistency with paragraph and sentence\n        doc_uid: e.doc_uid,\n        document_id: e.document_id,\n        textFields: getTextFields(e),\n        metaFields: getMetaFields(e),\n        docIndex,\n      });\n    }\n\n    if (textUnit === \"paragraph\") {\n      const paragraphs = e.tokens[e.tokens.length - 1].paragraph;\n      for (let parIndex = minIndex; parIndex <= Math.min(maxIndex, paragraphs); parIndex++) {\n        if (noDuplicates && done.has(e.doc_uid + \"_\" + parIndex)) return;\n        cjIndices.push({\n          textUnit,\n          unitIndex: parIndex,\n          doc_uid: e.doc_uid,\n          document_id: e.document_id,\n          textFields: getTextFields(e),\n          metaFields: getMetaFields(e),\n          docIndex,\n          //parIndex,\n        });\n      }\n    }\n\n    if (textUnit === \"sentence\") {\n      const sentences = e.tokens[e.tokens.length - 1].sentence;\n      for (let sentIndex = minIndex; sentIndex <= Math.min(maxIndex, sentences); sentIndex++) {\n        if (noDuplicates && done.has(e.doc_uid + \"_\" + sentIndex)) return;\n        cjIndices.push({\n          textUnit,\n          unitIndex: sentIndex,\n          doc_uid: e.doc_uid,\n          document_id: e.document_id,\n          textFields: getTextFields(e),\n          metaFields: getMetaFields(e),\n          docIndex,\n          //sentIndex,\n        });\n      }\n    }\n  });\n  return cjIndices;\n};\n\nconst annotationUnits = async (codingjob, textUnit, unique, validCodes) => {\n  let documents = await db.getDocuments(codingjob);\n  const annotation = codingjob.unitSettings.annotation;\n\n  let useCode = null;\n  if (validCodes?.[annotation])\n    useCode = validCodes[annotation].reduce((obj, code) => {\n      if (!code.valid) return obj;\n      obj[code.code] = true;\n      return obj;\n    }, {});\n\n  const cjIndices = [];\n  const done = new Set([]);\n  let docIndex = -1;\n  await documents.each((e) => {\n    docIndex++;\n    if (e.annotations) {\n      for (let i of Object.keys(e.annotations)) {\n        for (let variable of Object.keys(e.annotations[i])) {\n          if (variable !== annotation) continue;\n          const span = e.annotations[i][variable];\n          if (i > span[0]) {\n            if (textUnit === \"document\") continue;\n            if (textUnit === \"span\") continue;\n            // an annotation can cover multiple units, and each unit should only be included once\n            if (textUnit === \"paragraph\" && e.tokens[i].paragraph === e.tokens[i - 1].paragraph)\n              continue;\n            if (textUnit === \"sentence\" && e.tokens[i].sentence === e.tokens[i - 1].sentence)\n              continue;\n          }\n\n          if (useCode && useCode[e.annotations[i][variable].value] == null) continue;\n\n          const item = {\n            textUnit,\n            doc_uid: e.doc_uid,\n            document_id: e.document_id,\n            docIndex,\n            textFields: getTextFields(e),\n            metaFields: getMetaFields(e),\n            span: e.annotations[i][variable].span,\n          };\n\n          if (textUnit === \"document\" || textUnit === \"span\") item.unitIndex = Number(i);\n          if (textUnit === \"paragraph\") item.unitIndex = e.tokens[Number(i)].paragraph;\n          if (textUnit === \"sentence\") item.unitIndex = e.tokens[Number(i)].sentence;\n\n          if (unique) {\n            let itemId = item.doc_uid + \"_\" + item.textUnit + \"_\" + item.unitIndex;\n            if (done.has(itemId)) continue;\n            done.add(itemId);\n          } else {\n            item.variables = { [variable]: e.annotations[i][variable].value };\n          }\n          cjIndices.push(item);\n        }\n      }\n    }\n  });\n  return [cjIndices, done];\n};\n\nconst getTextFields = (e) => {\n  if (e.text_fields) return e.text_fields.map((tf) => tf.name);\n  if (e.tokens) {\n    const fields = new Set();\n    for (let token of e.tokens) fields.add(token.section);\n    return [...fields];\n  }\n  return [];\n};\n\nconst getMetaFields = (e) => {\n  if (e.meta_fields) return e.meta_fields.map((tf) => tf.name);\n  return [];\n};\n\nconst orderUnits = (cjIndices, unitSettings) => {\n  if (!unitSettings.ordered) return cjIndices;\n  return cjIndices.sort(function (a, b) {\n    if (a.docIndex !== b.docIndex) return a.docIndex - b.docIndex;\n    if (a.unitIndex !== b.unitIndex) return a.unitIndex - b.unitIndex;\n    if (a.annotation != null && a.annotation.index !== b)\n      return a.annotation.index - b.annotation.index;\n    return 0;\n  });\n};\n\nexport default useUnits;\n","export const selectTokens = (tokens, item, contextUnit, contextWindow) => {\n  let newTokens = [];\n  if (tokens.length === 0) return newTokens;\n\n  let tokenRange = [0, tokens.length - 1];\n  let tokenContext = [0, tokens.length - 1];\n\n  if (item.textUnit === \"span\") {\n    tokenRange = item.span;\n  }\n\n  if (item.textUnit === \"paragraph\" || item.textUnit === \"sentence\") {\n    tokenRange = getTokenRange(tokens, item.textUnit, item.unitIndex, item.unitIndex);\n  }\n\n  if (contextUnit === \"paragraph\" || contextUnit === \"sentence\")\n    tokenContext = getContextRange(tokens, tokenRange, contextUnit, contextWindow);\n  if (contextUnit === \"none\") tokenContext = tokenRange;\n\n  for (let i = 0; i < tokens.length; i++) {\n    tokens[i].codingUnit = true;\n    if (tokens[i].index < tokenRange[0]) tokens[i].codingUnit = false;\n    if (tokens[i].index > tokenRange[1]) tokens[i].codingUnit = false;\n    if (tokens[i].index < tokenContext[0]) continue;\n    if (tokens[i].index > tokenContext[1]) break;\n    newTokens.push(tokens[i]);\n  }\n  return newTokens;\n};\n\nconst getTokenRange = (tokens, field, startValue, endValue) => {\n  const range = [tokens[0].index, tokens[tokens.length - 1].index];\n\n  const start = tokens.find((token) => token[field] === startValue);\n  if (start) range[0] = start.index;\n  const end = tokens.find((token) => token[field] === endValue + 1);\n  if (end) range[1] = end.index - 1;\n\n  return range;\n};\n\nconst getContextRange = (tokens, tokenRange, contextUnit, contextWindow) => {\n  const offset = -tokens[0].index;\n  let range = [\n    tokens[tokenRange[0] + offset][contextUnit],\n    tokens[tokenRange[1] + offset][contextUnit],\n  ];\n  range[0] = range[0] - contextWindow[0];\n  range[1] = range[1] + contextWindow[1];\n  return getTokenRange(tokens, contextUnit, range[0], range[1]);\n};\n","import { selectTokens } from \"./selectTokens\";\nimport hash from \"object-hash\";\nimport db from \"apis/dexie\";\nimport { exportSpanAnnotations } from \"./annotations\";\nimport { tokensRowToColumn } from \"./tokens\";\n\n// Transform an item as its created in codingjob manager into a simpler\n// standardized item format. This is used when codingjobs are deployed,\n// but also per item in the previews. This looks redundant (tokens are\n// transformed to text, only to get tokenized immediately after), but this\n// makes it much easier to understand whats happening.\n// Basically:\n//   - When documents are uploaded they are tokenized\n//   - Unit selection can split documens into coding units (and context units)\n//   - These units are transformed to simplified items\n\nexport const standardizeUnits = async (codingjob, units) => {\n  const { contextUnit, contextWindow, layout } = codingjob.unitSettings;\n\n  const docs = {};\n  const standardizedUnits = [];\n\n  const jobhash = hash(codingjob);\n\n  for (let i = 0; i < units.length; i++) {\n    const doc_uid = units[i].doc_uid;\n    if (!docs[doc_uid]) docs[doc_uid] = await db.getDocument(doc_uid);\n\n    // get the unit tokens (filter the document tokens, and add bool for whether token is codingunit (i.e. not context))\n    let tokens = selectTokens(docs[doc_uid].tokens, units[i], contextUnit, contextWindow);\n\n    // get annotations and filter for selected tokens\n    const docAnnotations = exportSpanAnnotations(docs[doc_uid].annotations, docs[doc_uid].tokens);\n    const codingUnit = tokens.map((token) => token.codingUnit);\n    const firstUnitIndex = codingUnit.indexOf(true);\n    const lastUnitIndex = codingUnit.lastIndexOf(true);\n    const fromChar = tokens[firstUnitIndex].offset;\n    const toChar = tokens[lastUnitIndex].offset + tokens[lastUnitIndex].length;\n    const annotations = docAnnotations.filter((a) => a.offset >= fromChar && a.offset < toChar);\n\n    const unit = {\n      document_id: units[i].document_id,\n      provenance: { unit: units[i].textUnit, unit_index: units[i].unitIndex },\n      meta_fields: docs[doc_uid].meta_fields,\n      annotations,\n      variables: units[i].variables,\n    };\n\n    if (docs[doc_uid].importedTokens) {\n      // if tokens were imported, don't collapse to texts, but keep the original tokens.\n      unit.tokens = tokensRowToColumn(tokens);\n      unit.text_fields = Object.keys(layout.text).reduce((tf, name) => {\n        // if texts are not collapsed, text_fields is still used for section layout settings\n        tf.push({ name, ...layout.text[name] });\n        return tf;\n      }, []);\n    } else {\n      unit.text_fields = unparseTokens(tokens);\n      unit.text_fields = unit.text_fields.map((tf) => ({ ...tf, ...layout.text[tf.name] }));\n    }\n\n    unit.meta_fields = unit.meta_fields.map((mf) => ({ ...mf, ...layout.meta[mf.name] }));\n    unit.unit_id = hash({ jobhash, unit, date: Date() });\n    standardizedUnits.push(unit);\n  }\n  return standardizedUnits;\n};\n\nconst unparseTokens = (tokens) => {\n  // Create texts from tokens in a way that preserves information about original text and textParts (context and unit)\n\n  const text_fields = [];\n  if (tokens.length === 0) return text_fields;\n\n  let unit_start = null;\n  let unit_end = null;\n  let text = \"\";\n  let section = tokens[0].section;\n\n  let offset = {};\n  if (tokens[0].offset > 0) offset.offset = tokens[0].offset;\n\n  let unit_started = false;\n  let unit_ended = false;\n\n  for (let token of tokens) {\n    if (token.section !== section) {\n      const text_field = { name: section, value: text, ...offset };\n      if (unit_start !== null) text_field.unit_start = unit_start;\n      if (unit_end !== null) text_field.unit_end = unit_end;\n\n      text_fields.push(text_field);\n\n      offset = {};\n      if (token.offset > 0) offset.offset = token.offset;\n\n      unit_start = null;\n      unit_end = null;\n      text = \"\";\n    }\n\n    if (!unit_started && token.codingUnit) {\n      unit_start = token.offset;\n      unit_started = true;\n    }\n    if (unit_started && !unit_ended && !token.codingUnit) {\n      unit_end = token.offset - 1;\n      unit_ended = true;\n    }\n\n    text = text + token.pre + token.text + token.post;\n    section = token.section;\n  }\n  if (text.length > 0) {\n    const text_field = { name: section, value: text, ...offset };\n    if (unit_start !== null) text_field.unit_start = unit_start;\n    if (unit_end !== null) text_field.unit_end = unit_end;\n    text_fields.push(text_field);\n  }\n  return text_fields;\n};\n","import React from \"react\";\n\nimport { Button, Popup } from \"semantic-ui-react\";\n\nconst Help = ({ children, header, texts, type }) => {\n  // a simple question mark popup for help texts\n  // header should be a string\n  // texts an array of strings (for different paragraphs)\n\n  const questionMark = () => {\n    return (\n      <Button\n        circular\n        icon={type === \"warn\" ? \"exclamation\" : \"question\"}\n        size=\"mini\"\n        style={{\n          position: \"absolute\",\n          marginTop: \"-0.6em\",\n          marginLeft: \"0.2em\",\n          paddingLeft: \"0.1em\",\n          paddingRight: \"0.1em\",\n          paddingTop: \"0.2em\",\n          paddingBottom: \"0.2em\",\n          background: type === \"warn\" ? \"orange\" : \"white\",\n          color: \"black\",\n          border: \"1px solid grey\",\n        }}\n      />\n    );\n  };\n\n  return (\n    <Popup wide trigger={questionMark()}>\n      {header ? <h3>{header}</h3> : null}\n      {texts ? texts.map((text, i) => <p key={i}>{text}</p>) : null}\n      {children}\n    </Popup>\n  );\n};\n\nexport default Help;\n","import React from \"react\";\nimport { useTable, useSortBy, usePagination, useGlobalFilter } from \"react-table\";\nimport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableRow,\n  TableHeaderCell,\n  TableCell,\n  Pagination,\n  Icon,\n  Checkbox,\n} from \"semantic-ui-react\";\n\n// Uses react-table with semantic ui. The columns and data arguments are lists of objects\n// The 'columns' argument specifies column names (Header) and the names of the keys to get from data.\n//\n// const columns = [\n//   { Header: \"ID\", accessor: \"id\", headerClass: \"one wide\" },\n//   { Header: \"Name\", accessor: \"text\", headerClass: \"one wide\" },\n// ]\n//\n// Note that headerClass is custom, and enables setting the header cell class,\n// which is used in semantic ui to specify the width (one wide, ten wide, etc).\n\nconst CheckboxTable = ({ columns, data, setData, width = null, defaultSize = 10 }) => {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    pageCount,\n    gotoPage,\n    preGlobalFilteredRows,\n    setGlobalFilter,\n    state: { pageIndex, globalFilter },\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState: {\n        pageIndex: 0,\n        pageSize: defaultSize,\n        globalFilter: \"\",\n      },\n      autoResetPage: false,\n    },\n\n    useGlobalFilter,\n    useSortBy,\n    usePagination\n  );\n\n  const createHeader = (headerGroup) => {\n    const checkboxHeader = <TableHeaderCell width={3}>Include</TableHeaderCell>;\n    const headers = headerGroup.headers.map((column) => {\n      return (\n        <TableHeaderCell\n          className={column.headerClass}\n          {...column.getHeaderProps(column.getSortByToggleProps())}\n        >\n          {column.render(\"Header\")}\n          <span>{column.isSorted ? (column.isSortedDesc ? \" 🔽\" : \" 🔼\") : \"\"}</span>\n        </TableHeaderCell>\n      );\n    });\n    return [checkboxHeader, ...headers];\n  };\n\n  const onCheck = (index) => {\n    data[index].valid = !data[index].valid;\n    setData(data);\n  };\n\n  const createBody = (page) => {\n    return page.map((row, i) => {\n      prepareRow(row);\n      return (\n        <TableRow onClick={() => onCheck(row.index)} {...row.getRowProps()}>\n          <TableCell style={{ padding: \"1px 5px\" }}>\n            <Checkbox toggle checked={row.original.valid} />\n          </TableCell>\n          {row.cells.map((cell) => {\n            return (\n              <TableCell title={cell.value} {...cell.getCellProps()} style={{ padding: \"1px 5px\" }}>\n                {cell.render(\"Cell\")}\n              </TableCell>\n            );\n          })}\n        </TableRow>\n      );\n    });\n  };\n\n  //if (data.length === 0) return null;\n\n  return (\n    <div style={{ width: width }}>\n      <GlobalFilter\n        preGlobalFilteredRows={preGlobalFilteredRows}\n        globalFilter={globalFilter}\n        setGlobalFilter={setGlobalFilter}\n      />\n      <Table\n        definition\n        compact\n        unstackable\n        fixed\n        singleLine\n        selectable\n        {...getTableProps()}\n        size=\"small\"\n        style={{ fontSize: \"10px\", overflowY: \"auto\" }}\n      >\n        <TableHeader>\n          {headerGroups.map((headerGroup) => (\n            <TableRow {...headerGroup.getHeaderGroupProps()}>{createHeader(headerGroup)}</TableRow>\n          ))}\n        </TableHeader>\n        <TableBody {...getTableBodyProps()}>{createBody(page)}</TableBody>\n        <Table.Footer>\n          <Table.Row>\n            <Table.HeaderCell colSpan={columns.length + 1}>\n              {data.length > defaultSize ? (\n                <Pagination\n                  floated=\"right\"\n                  style={{ border: \"0\" }}\n                  size=\"mini\"\n                  firstItem={false}\n                  lastItem={false}\n                  nextItem={false}\n                  prevItem={false}\n                  boundaryRange={1}\n                  ellipsisItem={{\n                    content: <Icon name=\"ellipsis horizontal\" />,\n                    icon: true,\n                  }}\n                  activePage={pageIndex + 1}\n                  totalPages={pageCount}\n                  onPageChange={(event, data) => {\n                    gotoPage(data.activePage - 1);\n                  }}\n                />\n              ) : null}\n            </Table.HeaderCell>\n          </Table.Row>\n        </Table.Footer>\n      </Table>\n    </div>\n  );\n};\n\nconst GlobalFilter = ({ preGlobalFilteredRows, globalFilter, setGlobalFilter }) => {\n  //const count = preGlobalFilteredRows && preGlobalFilteredRows.length;\n\n  return (\n    <span>\n      <input\n        value={globalFilter || \"\"}\n        onChange={(e) => {\n          setGlobalFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\n        }}\n        placeholder={`Enter search term`}\n        style={{\n          border: \"0\",\n        }}\n      />\n    </span>\n  );\n};\n\nexport default CheckboxTable;\n","import React, { useEffect, useState } from \"react\";\nimport { Icon, Form, Checkbox, Input } from \"semantic-ui-react\";\nimport Help from \"./Help\";\nimport db from \"apis/dexie\";\nimport CheckboxTable from \"./CheckboxTable\";\n\nconst SampleSettings = ({ codingjob, units }) => {\n  const unitSettings = codingjob?.unitSettings;\n  const setUnitSettings = (us) => {\n    db.setCodingjobProp(codingjob, \"unitSettings\", us);\n  };\n\n  if (!unitSettings) return null;\n  return (\n    <div style={{ verticalAlign: \"top\", float: \"top\", paddingLeft: \"1em\" }}>\n      <SampleForm unitSettings={unitSettings} setUnitSettings={setUnitSettings} />\n      <SelectValidCodes codingjob={codingjob} units={units} />\n    </div>\n  );\n};\n\nconst SampleForm = React.memo(({ unitSettings, setUnitSettings }) => {\n  const [delayed, setDelayed] = useState(null); // delayed unitSettings\n  const [pct, setPct] = useState(100);\n  const totalUnits = unitSettings.totalUnits || 0;\n\n  useEffect(() => {\n    setPct(Math.round((100 * unitSettings.n) / totalUnits));\n    setDelayed(unitSettings);\n  }, [totalUnits, unitSettings, setDelayed]);\n\n  useEffect(() => {\n    if (delayed === unitSettings) return null;\n    const timer = setTimeout(() => {\n      setUnitSettings(delayed);\n    }, 300);\n    return () => clearTimeout(timer);\n  }, [delayed, unitSettings, setUnitSettings]);\n\n  const setWithoutDelay = (field, value) => {\n    setUnitSettings({ ...unitSettings, [field]: value });\n  };\n\n  // const onChangeMix = (e, d) => {\n  //   setDelayed((current) => ({ ...current, annotationMix: Number(d.value) }));\n  // };\n\n  const onChangeSeed = (e, d) => {\n    setDelayed((current) => ({ ...current, seed: Number(d.value) }));\n  };\n\n  const onChangeShuffle = (e, d) => {\n    setWithoutDelay(\"ordered\", !d.checked);\n  };\n\n  const onChangeBalanceDoc = (e, d) => {\n    setWithoutDelay(\"balanceDocuments\", d.checked);\n  };\n  const onChangeBalanceAnn = (e, d) => {\n    setWithoutDelay(\"balanceAnnotations\", d.checked);\n  };\n\n  const onChangeN = (e, d) => {\n    let value = Number(d.value);\n    //value = value > n ? Math.min(totalUnits, value + 4) : Math.max(0, value - 4);\n    setPct(Math.round((100 * value) / totalUnits));\n    setDelayed((current) => ({ ...current, n: value }));\n  };\n\n  const onChangePCT = (e, d) => {\n    let value = Number(d.value);\n    //value = value > pct ? Math.min(100, value + 4) : Math.max(0, value - 4);\n    let valueN = Math.ceil((value / 100) * totalUnits);\n    if (valueN >= 0) {\n      setPct(value);\n      setDelayed((current) => ({ ...current, n: valueN }));\n    }\n  };\n\n  if (delayed === null) return null;\n\n  return (\n    <Form>\n      <Form.Group>\n        <Icon name=\"setting\" />\n        <div>\n          <label>Sample settings</label>\n          <Help\n            header={\"Sampling and shuffling\"}\n            texts={[\n              \"If % < 100, a random sample will be drawn.\",\n              \"If shuffle is enabled, the order of the units will be randomized.\",\n              \"Seed initializes the random number generator. Simply put, using the same seed gives the same 'random' results if the data is the same.\",\n            ]}\n          />\n        </div>\n\n        {/* <Help header={\"test\"} texts={[\"test\", \"this\"]} /> */}\n      </Form.Group>\n\n      <Form.Group>\n        <Form.Field\n          width={8}\n          min={1}\n          max={totalUnits}\n          label=\"N\"\n          size=\"mini\"\n          control={Input}\n          type=\"number\"\n          value={delayed.n}\n          onChange={onChangeN}\n        />\n        <Form.Field\n          width={8}\n          min={0}\n          step={5}\n          max={100}\n          label=\"%\"\n          size=\"mini\"\n          control={Input}\n          type=\"number\"\n          value={pct}\n          onChange={onChangePCT}\n        />\n      </Form.Group>\n\n      <Form.Group>\n        <Form.Field width={8}>\n          <label>Shuffle</label>\n          <Checkbox toggle size=\"mini\" checked={!unitSettings.ordered} onChange={onChangeShuffle} />\n        </Form.Field>\n\n        <Form.Field width={8}>\n          <label>Seed</label>\n          <Input size=\"mini\" type=\"number\" min={1} value={delayed.seed} onChange={onChangeSeed} />\n        </Form.Field>\n      </Form.Group>\n\n      <Form.Group grouped widths=\"equal\">\n        <Form.Field>\n          <b>Balance</b>\n          <Help\n            header={\"Balanced sampling\"}\n            texts={[\n              \"Balance sampled Units evenly over groups. Uses a simple approach where unique groups are created (documents, codes, or documentsXcodes), and samples are drawn from these groups one by one\",\n              \"For documents: get an equal number of paragraphs, sentences or annotations per document.\",\n              \"For codes: if units are annotations, get an equal number annotations for each unique code.\",\n            ]}\n          />\n        </Form.Field>\n        <Form.Field>\n          <Checkbox\n            size=\"mini\"\n            label=\"documents\"\n            checked={unitSettings.balanceDocuments}\n            onChange={onChangeBalanceDoc}\n          />\n        </Form.Field>\n        <Form.Field>\n          <Checkbox\n            disabled={unitSettings.unitSelection !== \"annotations\"}\n            size=\"mini\"\n            label=\"codes\"\n            checked={unitSettings.balanceAnnotations}\n            onChange={onChangeBalanceAnn}\n          />\n        </Form.Field>\n      </Form.Group>\n      <br />\n    </Form>\n  );\n});\n\nconst validCodesColumns = [\n  {\n    Header: \"Code\",\n    accessor: \"code\",\n    headerClass: \"ten wide\",\n  },\n  {\n    Header: \"N\",\n    accessor: \"N\",\n    headerClass: \"two wide\",\n  },\n];\n\nconst SelectValidCodes = ({ codingjob, units }) => {\n  const annotation = codingjob?.unitSettings?.annotation;\n  const validCodes = codingjob?.unitSettings?.validCodes;\n  const isAnnotation = codingjob?.unitSettings?.unitSelection === \"annotations\";\n  const [data, setData] = useState([]);\n\n  const setValidCodes = React.useCallback(\n    (newValidCodes) => {\n      const unitSettings = {\n        ...codingjob.unitSettings,\n        validCodes: { ...validCodes, [annotation]: newValidCodes },\n      };\n      db.setCodingjobProp(codingjob, \"unitSettings\", unitSettings);\n    },\n    [codingjob, validCodes, annotation]\n  );\n\n  useEffect(() => {\n    if (!units || units.length === 0 || !validCodes || !annotation || !isAnnotation) return;\n    if (!validCodes[annotation]) return;\n    if (!units[0].variables) return;\n\n    const valueMap = units.reduce((obj, unit) => {\n      const value = Object.values(unit.variables)[0];\n      if (!obj[value]) obj[value] = 0;\n      obj[value]++;\n      return obj;\n    }, {});\n    setData(validCodes[annotation].map((row) => ({ ...row, N: valueMap[row.code] })));\n  }, [validCodes, units, setData, annotation, isAnnotation]);\n\n  useEffect(() => {\n    if (!validCodes || !annotation || !isAnnotation) return null;\n    if (validCodes[annotation]) return;\n    const importedCodes = codingjob.importedCodes?.[annotation];\n    if (!importedCodes) return;\n    setValidCodes(importedCodes.map((code) => ({ code: code.code, valid: true })));\n  }, [codingjob, annotation, isAnnotation, setValidCodes, validCodes]);\n\n  if (!validCodes || !annotation || !isAnnotation) return null;\n  if (!validCodes[annotation]) return null;\n\n  return (\n    <Form>\n      <Form.Group>\n        <Icon name=\"setting\" />\n        <div>\n          <label>Select annotation codes</label>\n        </div>\n      </Form.Group>\n\n      <CheckboxTable columns={validCodesColumns} data={data} setData={setValidCodes} />\n    </Form>\n  );\n};\n\nexport default React.memo(SampleSettings);\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { Input, Loader, Pagination, Segment } from \"semantic-ui-react\";\n\nconst IndexController = ({\n  n,\n  index,\n  setIndex,\n  canGoForward = true,\n  canGoBack = true,\n  quickKeyNext = false,\n}) => {\n  const reached = useRef(0); // if canGoBack but not canGoForward, can still go forward after going back\n  const canMove = useRef(false);\n\n  const [loading, setLoading] = useState(false);\n  const [activePage, setActivePage] = useState(1);\n  const [delayedActivePage, setDelayedActivePage] = useState(1);\n\n  // const onKeyDown = (e) => {\n  //   if (e.ctrlKey && e.keyCode === 13) {\n  //     e.preventDefault();\n  //     if (!canGoForward && !quickKeyNext) return;\n  //     if (e.repeat) {\n  //       setDelayedActivePage((current) => {\n  //         if (canGoForward || current < reached.current)\n  //           return current < n + 1 ? current + 1 : current;\n  //         return current;\n  //       });\n  //     } else {\n  //       setActivePage((current) => {\n  //         if (quickKeyNext || canGoForward || current < reached.current)\n  //           return current < n + 1 ? current + 1 : current;\n  //         return current;\n  //       });\n  //     }\n  //   }\n  //   if (e.ctrlKey && e.keyCode === 8) {\n  //     e.preventDefault();\n  //     if (!canGoBack) return;\n  //     if (e.repeat) {\n  //       setDelayedActivePage((current) => (current > 1 ? current - 1 : current));\n  //     } else {\n  //       setActivePage((current) => (current > 1 ? current - 1 : current));\n  //     }\n  //   }\n  // };\n\n  useEffect(() => {\n    if (index !== null) setActivePage(Math.min(index + 1, n + 1));\n    if (index === null) setActivePage(n + 1);\n  }, [index, n, setActivePage]);\n\n  // useEffect(() => {\n  //   if (quickKeyNext || canGoForward || canGoBack) window.addEventListener(\"keydown\", onKeyDown);\n  //   return () => {\n  //     window.removeEventListener(\"keydown\", onKeyDown);\n  //   };\n  // });\n\n  useEffect(() => {\n    reached.current = 0;\n    canMove.current = false;\n  }, [n]);\n\n  useEffect(() => {\n    if (!n) return null;\n    setActivePage(1);\n    canMove.current = true;\n  }, [n, setActivePage]);\n\n  useEffect(() => {\n    if (!n) return null;\n    reached.current = Math.max(activePage, reached.current);\n    if (activePage - 1 === n) {\n      setIndex(null);\n    } else {\n      setIndex(activePage - 1);\n    }\n    setDelayedActivePage(activePage);\n  }, [n, setIndex, activePage]);\n\n  useEffect(() => {\n    if (!n) return null;\n    if (activePage === delayedActivePage) {\n      setLoading(false);\n      return null;\n    }\n    setLoading(true);\n    const timer = setTimeout(() => {\n      setActivePage(delayedActivePage);\n      setLoading(false);\n    }, 500);\n    return () => clearTimeout(timer);\n  }, [activePage, delayedActivePage, n, setLoading]);\n\n  if (!n) return null;\n\n  return (\n    <Segment\n      style={{\n        border: \"none\",\n        boxShadow: \"none\",\n        padding: \"0\",\n        leftMargin: \"0px\",\n        width: \"100%\",\n        maxHeight: \"35px\",\n        borderRadius: \"0\",\n      }}\n    >\n      <Loader active={loading} content=\"\" />\n\n      <Input\n        style={{ padding: \"0 !important\", margin: \"0\", width: \"100%\" }}\n        min={1}\n        max={n + 1}\n        onChange={(e, d) => {\n          if (\n            (canGoForward || Number(d.value) < reached.current) &&\n            Number(d.value) > delayedActivePage\n          )\n            setDelayedActivePage(Number(d.value));\n          if (canGoBack && Number(d.value) < delayedActivePage)\n            setDelayedActivePage(Number(d.value));\n        }}\n        type=\"range\"\n        labelPosition=\"left\"\n        label={\n          <Pagination\n            secondary\n            activePage={delayedActivePage}\n            pageItem={delayedActivePage <= n ? `${delayedActivePage} / ${n}` : `done / ${n}`}\n            size={\"mini\"}\n            firstItem={null}\n            lastItem={null}\n            prevItem={canGoBack ? \"back\" : \"   \"}\n            nextItem={canGoForward || activePage < reached.current ? \"next\" : \"   \"}\n            siblingRange={0}\n            boundaryRange={0}\n            ellipsisItem={null}\n            totalPages={n + 1}\n            onClick={(e, d) => e.stopPropagation()}\n            onPageChange={(e, d) => {\n              if (\n                (canGoForward || activePage < reached.current) &&\n                Number(d.activePage) > activePage\n              )\n                setActivePage(Number(d.activePage));\n              if (canGoBack && Number(d.activePage) < activePage)\n                setActivePage(Number(d.activePage));\n            }}\n            style={{ fontSize: \"9px\", border: \"none\", boxShadow: \"none\", padding: 0, margin: 0 }}\n          ></Pagination>\n        }\n        value={delayedActivePage}\n      />\n    </Segment>\n  );\n};\n\nexport default IndexController;\n","import React, { useEffect, useState } from \"react\";\nimport { Table, Input, Checkbox, Icon } from \"semantic-ui-react\";\nimport db from \"apis/dexie\";\n\nconst UnitLayoutSettings = ({ codingjob, units }) => {\n  const [fields, setFields] = useState({ text: [], meta: [] });\n  const unitSettings = codingjob?.unitSettings;\n  const setUnitSettings = (us) => {\n    db.setCodingjobProp(codingjob, \"unitSettings\", us);\n  };\n\n  useEffect(() => {\n    if (!unitSettings?.layout) return;\n    if (!units) return;\n    const f = unitSettings.layout;\n    for (let unit of units) {\n      if (unit.textFields) {\n        for (let textField of unit.textFields) {\n          if (!f.text[textField]) f.text[textField] = defaultLayout(textField);\n        }\n      }\n      if (unit.metaFields) {\n        for (let metaField of unit.metaFields) {\n          if (!f.meta[metaField]) f.meta[metaField] = defaultLayout(metaField);\n        }\n      }\n    }\n    setFields(f);\n  }, [units, unitSettings]);\n  if (!unitSettings) return null;\n\n  return (\n    <LayoutFields\n      codingjob={codingjob}\n      unitSettings={unitSettings}\n      setUnitSettings={setUnitSettings}\n      fields={fields}\n    />\n  );\n};\n\nconst defaultLayout = (field) => {\n  const l = {\n    label: field.toUpperCase().replaceAll(\"_\", \" \"),\n    bold: false,\n    italic: false,\n    size: 1,\n  };\n  if ([\"title\", \"headline\"].includes(field)) {\n    l.size = 1;\n    l.bold = true;\n  }\n  return l;\n};\n\nconst LayoutFields = ({ codingjob, unitSettings, setUnitSettings, fields }) => {\n  return (\n    <FieldSettings fields={fields} unitSettings={unitSettings} setUnitSettings={setUnitSettings} />\n  );\n};\n\nconst FieldSettings = ({ fields, unitSettings, setUnitSettings }) => {\n  const update = (which, field, key, value) => {\n    const newLayout = { ...unitSettings.layout };\n    // console.log(which, field, key, value);\n    newLayout[which][field][key] = value;\n    setUnitSettings({ ...unitSettings, layout: newLayout });\n  };\n\n  const labelField = (which, fields, field) => {\n    return (\n      <Input\n        value={fields[field].label}\n        style={{ width: \"100%\", padding: \"0\" }}\n        onChange={(e, d) => update(which, field, \"label\", d.value)}\n      />\n    );\n  };\n\n  const boldField = (which, fields, field) => {\n    return (\n      <Checkbox\n        checked={fields[field].bold}\n        onChange={() => update(which, field, \"bold\", !fields[field].bold)}\n      />\n    );\n  };\n\n  const italicField = (which, fields, field) => {\n    return (\n      <Checkbox\n        checked={fields[field].italic}\n        onChange={() => update(which, field, \"italic\", !fields[field].italic)}\n      />\n    );\n  };\n\n  const sizeField = (which, fields, field) => {\n    return (\n      <Input\n        value={fields[field].size}\n        type=\"number\"\n        min={0}\n        max={5}\n        step={0.1}\n        style={{ width: \"100%\", padding: \"0\", border: \"none\" }}\n        onChange={(e, d) => {\n          const nr = Number(d.value);\n          if (isNaN(nr)) return;\n          update(which, field, \"size\", nr);\n        }}\n      />\n    );\n  };\n\n  const rows = (which, fields) => {\n    const n = Object.keys(fields).length;\n    return Object.keys(fields).map((field, i) => {\n      return (\n        <Table.Row>\n          {i === 0 ? (\n            <Table.Cell rowSpan={n}>\n              <b>{which}</b>\n            </Table.Cell>\n          ) : null}\n          <Table.Cell>{field}</Table.Cell>\n          <Table.Cell style={{ padding: \"2px\" }}>{labelField(which, fields, field)}</Table.Cell>\n          <Table.Cell style={{ padding: \"2px\" }}>{sizeField(which, fields, field)}</Table.Cell>\n          <Table.Cell style={{ textAlign: \"center\" }}>{boldField(which, fields, field)}</Table.Cell>\n          <Table.Cell style={{ textAlign: \"center\" }}>\n            {italicField(which, fields, field)}\n          </Table.Cell>\n        </Table.Row>\n      );\n    });\n  };\n\n  return (\n    <Table celled structured compact unstackable singleLine>\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell width={2}></Table.HeaderCell>\n          <Table.HeaderCell width={4}>field</Table.HeaderCell>\n          <Table.HeaderCell width={3}>label</Table.HeaderCell>\n          <Table.HeaderCell width={3}>text size</Table.HeaderCell>\n          <Table.HeaderCell width={1}>\n            <Icon name=\"bold\" />\n          </Table.HeaderCell>\n          <Table.HeaderCell width={1}>\n            <Icon name=\"italic\" />\n          </Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n      <Table.Body>\n        {rows(\"meta\", fields.meta)}\n        {rows(\"text\", fields.text)}\n      </Table.Body>\n    </Table>\n  );\n};\n\nexport default UnitLayoutSettings;\n","import React, { useEffect, useState } from \"react\";\nimport { Grid, Header, Dimmer, Loader } from \"semantic-ui-react\";\n\nimport UnitSettings from \"./subcomponents/UnitSettings\";\nimport Document from \"components/Document/Document\";\nimport useUnits from \"components/CodingjobManager/subcomponents/useUnits\";\nimport { standardizeUnits } from \"library/standardizeUnits\";\nimport SampleSettings from \"./subcomponents/SampleSettings\";\nimport IndexController from \"components/Annotator/subcomponents/IndexController\";\nimport UnitLayoutSettings from \"./subcomponents/UnitLayoutSettings\";\n\nconst ManageCodingUnits = ({ codingjob }) => {\n  const units = useUnits(codingjob);\n\n  if (!codingjob) return null;\n\n  return (\n    <div>\n      <Grid stackable celled=\"internally\" columns={3}>\n        <Grid.Column verticalAlign=\"top\" stretched width={6}>\n          <Header textAlign=\"center\" style={{ background: \"#1B1C1D\", color: \"white\" }}>\n            Define Coding Units\n          </Header>\n          <UnitSettings codingjob={codingjob} />\n          <br />\n          <Header textAlign=\"center\" style={{ background: \"#1B1C1D\", color: \"white\" }}>\n            Coding Unit Layout\n          </Header>\n          <UnitLayoutSettings codingjob={codingjob} units={units} />\n        </Grid.Column>\n\n        <Grid.Column width={4}>\n          <Header textAlign=\"center\" style={{ background: \"#1B1C1D\", color: \"white\" }}>\n            Select Units\n          </Header>\n          <SampleSettings codingjob={codingjob} units={units} />\n        </Grid.Column>\n        <Grid.Column width={6}>\n          <Header textAlign=\"center\" style={{ background: \"#1B1C1D\", color: \"white\" }}>\n            Unit preview\n          </Header>\n          <PreviewDocument units={units} codingjob={codingjob} codebook={{}} />\n        </Grid.Column>\n      </Grid>\n    </div>\n  );\n};\n\nconst PreviewDocument = ({ units, codingjob, codebook }) => {\n  const [unitIndex, setUnitIndex] = useState(null);\n  const [standardizedUnit, setStandardizedUnit] = useState(null);\n\n  useEffect(() => {\n    if (!units?.[unitIndex]) return null;\n    standardizeUnits(codingjob, [units[unitIndex]]).then((singleItemArray) => {\n      const previewItem = singleItemArray[0];\n      previewItem.post = (annotations) => console.log(annotations); // don't store annotations\n      setStandardizedUnit(previewItem);\n    });\n  }, [units, unitIndex, setStandardizedUnit, codingjob]);\n\n  const renderDocument = () => {\n    if (!standardizedUnit) return null;\n    return (\n      <>\n        <Dimmer inverted active={standardizedUnit === null}>\n          <Loader />\n        </Dimmer>\n        <Document unit={standardizedUnit} codes={codebook?.codes} settings={{}} />\n      </>\n    );\n  };\n\n  if (!units?.length > 0) return null;\n\n  return (\n    <Grid.Column width={6}>\n      <IndexController n={units?.length} index={unitIndex} setIndex={setUnitIndex} />\n\n      {renderDocument()}\n    </Grid.Column>\n  );\n};\n\nexport default React.memo(ManageCodingUnits);\n","export const blockEvents = (block) => {\n  return {\n    type: \"BLOCK_EVENTS\",\n    block,\n  };\n};\n\nexport const setFullScreenNode = (node) => {\n  return {\n    type: \"SET_FULL_SCREEN_NODE\",\n    node,\n  };\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { blockEvents } from \"actions\";\nimport { textToCodes } from \"library/codebook\";\nimport { Button, ButtonGroup, Dropdown, Form, Input, Popup, TextArea } from \"semantic-ui-react\";\n\nconst EditCodePopup = ({\n  codeMap,\n  code,\n  codes,\n  setCodes,\n  toggleActiveCode,\n  setChangeColor,\n  canAdd,\n}) => {\n  const dispatch = useDispatch();\n  const [open, setOpen] = useState(false);\n  const [popupContent, setPopupContent] = useState(null);\n\n  useEffect(() => {\n    dispatch(blockEvents(open));\n    return () => {\n      dispatch(blockEvents(false));\n    };\n  }, [dispatch, open]);\n\n  const buttonStyle = {\n    padding: \"0\",\n    margin: \"0\",\n    width: \"15px\",\n    borderRadius: \"0\",\n    minHeight: \"10px\",\n  };\n\n  const buttonContent = () => {\n    if (code === \"\") {\n      if (!canAdd) return null;\n      return (\n        <ButtonGroup fluid color=\"black\">\n          <Button content=\"Add codes\" onClick={() => addCodePopup(true)} style={buttonStyle} />;\n        </ButtonGroup>\n      );\n    }\n    return (\n      <ButtonGroup color=\"black\" attached fluid size=\"mini\" style={{ padding: \"0\", margin: \"0\" }}>\n        <Button\n          size=\"mini\"\n          icon={code.active && code.activeParent ? \"toggle on\" : \"toggle off\"}\n          onClick={() => toggleActiveCode(codes, code.code, !code.active, setCodes)}\n          style={{ ...buttonStyle, color: code.active && code.activeParent ? \"green\" : \"red\" }}\n        />\n        <Button\n          icon=\"arrow up\"\n          compact\n          size=\"mini\"\n          onClick={() => changePosition(\"up\")}\n          style={buttonStyle}\n        />\n        <Button\n          icon=\"arrow down\"\n          compact\n          size=\"mini\"\n          onClick={() => changePosition(\"down\")}\n          style={buttonStyle}\n        />\n\n        <Button\n          disabled={!canAdd}\n          icon=\"plus\"\n          compact\n          size=\"mini\"\n          onClick={() => addCodePopup(false)}\n          style={buttonStyle}\n        />\n\n        <Button\n          disabled={code.frozen}\n          icon=\"minus\"\n          compact\n          size=\"mini\"\n          onClick={rmCodePopup}\n          style={buttonStyle}\n        />\n        <Button icon=\"edit\" compact size=\"mini\" onClick={moveCodePopup} style={buttonStyle} />\n        {changeColorPopup()}\n      </ButtonGroup>\n    );\n  };\n\n  const changeColorPopup = () => {\n    if (!code.code && code.active == null) return null;\n\n    return (\n      <Button\n        size=\"mini\"\n        as={\"Input\"}\n        style={{\n          ...buttonStyle,\n          padding: \"10px 0px\",\n          background: code.color || \"white\",\n        }}\n        onInput={(e) => setChangeColor({ code: code.code, color: e.target.value })}\n        type=\"color\"\n        value={code.color || \"white\"}\n      />\n    );\n  };\n\n  const addCodePopup = (root) => {\n    setPopupContent(\n      <AddCodePopup\n        codeMap={codeMap}\n        code={root ? \"\" : code.code}\n        codes={codes}\n        setCodes={setCodes}\n        setOpen={setOpen}\n      />\n    );\n    setOpen(true);\n  };\n\n  const rmCodePopup = () => {\n    setPopupContent(\n      <RmCodePopup\n        codeMap={codeMap}\n        code={code.code}\n        codes={codes}\n        setCodes={setCodes}\n        setOpen={setOpen}\n      />\n    );\n    setOpen(true);\n  };\n\n  const moveCodePopup = () => {\n    setPopupContent(\n      <MoveCodePopup\n        codeMap={codeMap}\n        code={code.code}\n        codes={codes}\n        setCodes={setCodes}\n        setOpen={setOpen}\n        frozen={code.frozen}\n      />\n    );\n    setOpen(true);\n  };\n\n  const changePosition = (direction) => {\n    movePosition(codes, code, direction, setCodes);\n    setOpen(false);\n  };\n\n  return (\n    <Popup\n      inverted\n      size=\"mini\"\n      flowing\n      hoverable\n      mouseLeaveDelay={99999999}\n      open={open}\n      onClose={() => setOpen(false)}\n      trigger={buttonContent()}\n      style={{ padding: \"0\", margin: \"0\" }}\n    >\n      {popupContent}\n    </Popup>\n  );\n};\n\nconst movePosition = (codes, code, direction, setCodes) => {\n  const a = codes.findIndex((c) => c.code === code.code); // position of selected code\n  let b = null; // position of switchSibling\n\n  const codeParent = codes[a].parent;\n  for (let i = 0; i < codes.length; i++) {\n    if (i === a) continue;\n    if (codes[i].parent !== codeParent) continue;\n\n    if (direction === \"down\") {\n      if (i > a && (b === null || b > i)) b = i;\n    }\n    if (direction === \"up\") {\n      if (i < a && (b === null || b < i)) b = i;\n    }\n  }\n  if (b === null) return null;\n\n  const newCodes = [...codes];\n  const temp = newCodes[a];\n  newCodes[a] = newCodes[b];\n  newCodes[b] = temp;\n\n  setCodes(newCodes);\n};\n\nconst AddCodePopup = ({ codeMap, code, codes, setCodes, setOpen }) => {\n  const [alreadyExists, setAlreadyExists] = useState([]);\n  const [textInput, setTextInput] = useState(\"\");\n\n  const addCode = (text) => {\n    if (text === \"\") return null;\n    const [updatedCodes, duplicates] = textToCodes(\n      text,\n      code,\n      codes,\n      codes.filter((c) => c.frozen)\n    );\n    if (duplicates.length > 0) {\n      setAlreadyExists(duplicates);\n      return null;\n    }\n    setCodes(updatedCodes);\n    setOpen(false);\n  };\n\n  return (\n    <div style={{ margin: \"1em\", height: \"200px\" }}>\n      <p>\n        {code === \"\" ? (\n          \"Create new codes\"\n        ) : (\n          <>\n            Add codes under <b>{code}</b>\n          </>\n        )}\n        <Button floated=\"right\" compact size=\"mini\" icon=\"delete\" onClick={() => setOpen(false)} />\n      </p>\n      <Form onSubmit={() => addCode(textInput)}>\n        <Popup\n          open={alreadyExists.length > 0}\n          trigger={\n            <TextArea\n              autoFocus\n              onChange={(e, d) => {\n                setTextInput(d.value);\n                setAlreadyExists([]);\n              }}\n              value={textInput}\n              style={{ height: \"130px\" }}\n              placeholder=\"Every line becomes a new code\"\n            />\n          }\n        >\n          Duplicate labels: <br />\n          <b>{alreadyExists.join(\", \")}</b>\n        </Popup>\n        <Button fluid content=\"Create\" onClick={() => addCode(textInput)} />\n      </Form>\n    </div>\n  );\n};\n\nconst RmCodePopup = ({ codeMap, code, codes, setCodes, setOpen }) => {\n  const rmCode = (keepChildren) => {\n    let updatedCodes = codes.filter((ucode) => ucode.code !== code);\n\n    const children = [];\n    if (!keepChildren) {\n      getAllChildren(codeMap, code, children);\n      updatedCodes = updatedCodes.filter((ucode) => !children.includes(ucode.code));\n    } else {\n      updatedCodes = updatedCodes.map((ucode) => {\n        if (codeMap[code].children.includes(ucode.code)) ucode.parent = codeMap[code].parent;\n        return ucode;\n      });\n    }\n\n    //const removeCodes = [code, ...children];\n\n    setCodes(updatedCodes);\n    setOpen(false);\n  };\n\n  return (\n    <div style={{ margin: \"1em\" }}>\n      <p>\n        Delete <b>{code}</b>?\n      </p>\n      <ButtonGroup fluid>\n        {codeMap[code].children.length > 0 ? (\n          <>\n            <Button color=\"red\" onClick={() => rmCode(false)}>\n              Yes\n            </Button>\n            <Button color=\"red\" onClick={() => rmCode(true)}>\n              Yes, but keep children\n            </Button>\n          </>\n        ) : (\n          <Button color=\"red\" onClick={() => rmCode(true)}>\n            Yes\n          </Button>\n        )}\n        <Button onClick={() => setOpen(false)}>Cancel</Button>\n      </ButtonGroup>\n    </div>\n  );\n};\n\nconst MoveCodePopup = ({ codeMap, code, codes, setCodes, setOpen, frozen }) => {\n  const [newParent, setNewParent] = useState(codeMap[code].parent);\n  const [textInput, setTextInput] = useState(code);\n\n  const parentOptions = [\"ROOT\", ...getAllParentOptions(codeMap, code)]; // fills parents array\n\n  const mvCode = (newCode, newParent) => {\n    if (newCode !== code) {\n      if (newCode === \"\") return null;\n      if (codeMap[newCode]) return null;\n    }\n    let codeIsNew = true; // if code was only a parent, it isn't yet in the edgelist\n    let updatedCodes = codes.map((ucode) => {\n      if (ucode.code === code) {\n        ucode.code = newCode;\n        ucode.parent = newParent;\n        codeIsNew = false;\n      }\n      if (ucode.parent === code) {\n        ucode.parent = newCode;\n      }\n      return ucode;\n    });\n    if (codeIsNew) codes.push({ code: newCode, parent: newParent, active: true });\n    codes = codes.filter((code) => code.parent !== \"ROOT\");\n\n    setCodes(updatedCodes);\n    setOpen(false);\n  };\n\n  return (\n    <div style={{ margin: \"1em\" }}>\n      <p>\n        {frozen ? \"Change parent\" : \"Change parent and/or label\"}\n        <Button floated=\"right\" compact size=\"mini\" icon=\"delete\" onClick={() => setOpen(false)} />\n      </p>\n\n      <Form onSubmit={() => mvCode(textInput, newParent)}>\n        <Form.Field inline>\n          <label style={{ color: \"white\" }}>Parent:</label>\n          <Dropdown\n            value={newParent}\n            style={{ minWidth: \"10em\" }}\n            options={parentOptions.map((parent, i) => {\n              return {\n                key: parent,\n                value: parent,\n                text: parent,\n              };\n            })}\n            search\n            selectOnNavigation={false}\n            minCharacters={0}\n            autoComplete={\"on\"}\n            onChange={(e, d) => {\n              setNewParent(d.value);\n            }}\n          />\n        </Form.Field>\n        {frozen ? null : (\n          <Form.Field inline>\n            <label style={{ color: \"white\" }}>Code:</label>\n            <Input\n              autoFocus\n              onChange={(e, d) => {\n                setTextInput(d.value);\n              }}\n              value={textInput}\n              placeholder=\"new code\"\n            />\n          </Form.Field>\n        )}\n        <Button fluid onClick={() => mvCode(textInput, newParent)}>\n          Change\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nconst getAllChildren = (codeMap, code, children) => {\n  for (const child of codeMap[code].children) {\n    children.push(child);\n    getAllChildren(codeMap, child, children);\n  }\n};\n\nconst getAllParentOptions = (codeMap, code) => {\n  const children = [];\n  getAllChildren(codeMap, code, children);\n  return Object.keys(codeMap).filter((parent) => !children.includes(parent) && parent !== code);\n};\n\nexport default EditCodePopup;\n","import React, { useEffect, useState } from \"react\";\nimport { Button, Icon, Table, Popup, Modal, TextArea, Dropdown, Label } from \"semantic-ui-react\";\nimport { codeBookEdgesToMap, getCodeTreeArray } from \"library/codebook\";\nimport EditCodePopup from \"./EditCodePopup\";\nimport { textToCodes, ctaToText } from \"library/codebook\";\nimport { blockEvents } from \"actions\";\nimport Help from \"./Help\";\nimport { useDispatch } from \"react-redux\";\n\n// NOTE TO SELF: make toggle on/off and edit optional. Toggle on/off makes sense for\n// imported annotations. Edit for making a codebook\n// problem: how to deal with renaming existing codes. (maybe just freeze used codes from editing)\n\n/**\n * Display an editable codebook\n * @param {Array} codes an array of strings, or an array of objects with at least the key 'code'\n * @param {Function} setCodes the callback for setting codes state\n * @param {Array} questions Optional, an array with questions. This enables the 'makes irrelevant' column\n */\nconst CodesEditor = ({ codes, setCodes, questions, question, canAdd = true, height = \"100%\" }) => {\n  const [codeMap, setCodeMap] = useState({});\n  const [codeTreeArray, setCodeTreeArray] = useState([]);\n  const [changeColor, setChangeColor] = useState(null);\n\n  const showColors = true;\n\n  useEffect(() => {\n    if (!codes || codes.length === 0) {\n      setCodeTreeArray([]);\n      return;\n    }\n    const cm = codeBookEdgesToMap(codes);\n    setCodeMap(cm);\n    setCodeTreeArray(getCodeTreeArray(cm, showColors));\n  }, [codes, setCodeTreeArray, setCodeMap, showColors]);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (changeColor) {\n        changeCodeColor(changeColor.code, changeColor.color, codes, setCodes);\n      }\n      setChangeColor(null);\n    }, 500);\n    return () => clearTimeout(timer);\n  }, [codes, setCodes, changeColor, setChangeColor]);\n\n  const formatCode = (code) => {\n    const color = code.active == null || code.active ? \"black\" : \"grey\";\n    if (code.level === 0) return { fontWeight: \"bold\", fontSize: \"15px\", color };\n    if (code.level === 1) return { fontSize: \"12px\", color };\n    if (code.level === 2) return { fontSize: \"12px\", color };\n    return { fontSize: \"10px\", color };\n  };\n\n  const onChangeBranching = (code, values) => {\n    const newCodes = [...codes];\n    const makes_irrelevant = [];\n    const required_for = [];\n\n    for (let v of values) {\n      const [type, value] = v.split(/_(.+)/);\n      if (type === \"Skip\") makes_irrelevant.push(value);\n      if (type === \"Required for\") required_for.push(value);\n    }\n\n    const updateCode = newCodes.find((nc) => nc.code === code);\n    updateCode.makes_irrelevant = makes_irrelevant;\n    updateCode.required_for = required_for.filter((rf) => !makes_irrelevant.includes(rf));\n    setCodes(newCodes);\n  };\n\n  return (\n    <div>\n      <Table\n        columns={3}\n        unstackable\n        textAlign=\"left\"\n        style={{ border: \"0\", boxShadow: \"0\", width: \"100%\" }}\n      >\n        <Table.Header className=\"codes-thead\"></Table.Header>\n        <Table.Body\n          style={{ height: height, margin: \"0\", overflow: \"visible\" }}\n          className=\"codes-tbody\"\n        >\n          <Table.Row className=\"codes-tr\">\n            <Table.HeaderCell textAlign=\"center\">\n              <Icon name=\"settings\" />\n            </Table.HeaderCell>\n            <Table.HeaderCell style={{ position: \"relative\", paddingLeft: \"0.5em\" }}>\n              Codebook\n            </Table.HeaderCell>\n            <Table.HeaderCell style={{ textAlign: \"right\" }}>\n              {/* {makesIrrelevantHeader(questions)} */}\n              <div style={{ marginRight: \"18px\" }}>\n                Branching\n                <Help\n                  header=\"Make other questions conditional on this answer\"\n                  texts={[\n                    `Certain answers can make other questions irrelevant.\n           For example, you might first ask if a text is relevant (for your study).\n           If it isn't, you don't need your coder to waste time answering the remaining questions.\n           In this case, you can set branching to \"Skip all\".`,\n                    `You can also let an answer \"Skip a specific questions\", so that certain follow-up questions\n           are only asked if certain conditions are met.`,\n                    `Alternatively, you can specify that an answer is \"Required for a specific question\" (which is just shorthand for Skip for all other answers)`,\n                    `It is recommended to implement branching as a final step, and to use the preview to test whether it works as intended`,\n                  ]}\n                />\n              </div>\n            </Table.HeaderCell>\n          </Table.Row>\n          {[...codeTreeArray].map((code, i) => {\n            if (code.foldToParent) return null;\n\n            return (\n              <Table.Row className=\"codes-tr\" key={i} style={{}}>\n                <Table.Cell\n                  className=\"codes-td\"\n                  width={1}\n                  style={{\n                    border: \"1px solid black\",\n                    padding: \"0\",\n                    margin: \"0\",\n                    background: \"#1B1C1D\",\n\n                    borderRight: code.active == null ? null : \"1px solid black\",\n                  }}\n                >\n                  <EditCodePopup\n                    codeMap={codeMap}\n                    code={code}\n                    codes={codes}\n                    setCodes={setCodes}\n                    toggleActiveCode={toggleActiveCode}\n                    setChangeColor={setChangeColor}\n                    canAdd={canAdd}\n                  />\n                </Table.Cell>\n\n                <Table.Cell\n                  className=\"codes-td\"\n                  style={{\n                    paddingLeft: \"0.5em\",\n                    borderTop: code.level === 0 ? \"1px solid black\" : null,\n                    //borderBottom: code.level === 0 ? \"1px solid black\" : null,\n                  }}\n                >\n                  <span style={{ ...formatCode(code), marginLeft: `${1 * code.level}em` }}>\n                    {code.code}\n                    {code.totalChildren === 0 || code.active == null ? null : (\n                      <>\n                        <Icon\n                          style={{\n                            padding: \"0\",\n                            margin: \"0\",\n                            marginLeft: \"1em\",\n                            cursor: \"pointer\",\n                          }}\n                          onClick={() =>\n                            toggleFoldCode(\n                              codes,\n                              code.code,\n                              code.folded != null && code.folded,\n                              setCodes\n                            )\n                          }\n                          name={code.folded ? \"caret right\" : \"dropdown\"}\n                        />\n                        {!code.folded ? null : (\n                          <span\n                            style={{ color: \"grey\" }}\n                          >{`${code.totalActiveChildren}/${code.totalChildren}`}</span>\n                        )}\n                      </>\n                    )}\n                  </span>\n                </Table.Cell>\n                <Table.Cell\n                  className=\"codes-td\"\n                  style={{\n                    textAlign: \"right\",\n                    paddingLeft: \"0.5em\",\n\n                    borderTop: code.level === 0 ? \"1px solid black\" : null,\n                    //borderBottom: code.level === 0 ? \"1px solid black\" : null,\n                  }}\n                >\n                  {branchingDropdown(question, questions, code, onChangeBranching)}\n                </Table.Cell>\n              </Table.Row>\n            );\n          })}\n          <EditCodePopup\n            codeMap={codeMap}\n            code={\"\"}\n            codes={codes}\n            setCodes={setCodes}\n            setChangeColor={setChangeColor}\n            canAdd={canAdd}\n          >\n            <Icon name=\"cog\" style={{ marginLeft: \"0.7em\", cursor: \"pointer\" }} />\n          </EditCodePopup>\n          <PlainTextEditor codes={codes} codeTreeArray={codeTreeArray} setCodes={setCodes} />\n        </Table.Body>\n      </Table>\n    </div>\n  );\n};\n\n// const makesIrrelevantHeader = (questions) => {\n//   if (!questions) return null;\n\n//   return (\n//     <>\n//       Makes irrelevant\n//       <Help\n//         header=\"Make other questions conditional on this answer\"\n//         texts={[\n//           `Certain answers can make other questions irrelevant.\n//            For example, you might first ask if a text is relevant (for your study).\n//            If it isn't, you don't need your coder to waste time answering the remaining questions.\n//            In this case, you can set \"makes irrelevant\" to \"remaining\". All remaning questions in the current\n//            unit will then be annotated with the value IRRELEVANT`,\n//           `You can also let an answer make specific other questions irrelevant.\n//            This way you can implement simple branching patterns, where certain follow-up questions\n//            are only asked if certain conditions are met.`,\n//           `It is recommended to setup branching after the name and order of questions is finalized.\n//            Branching does changes automatically when name/order changes, but always double check.`,\n//         ]}\n//       />\n//     </>\n//   );\n// };\n\nconst branchingDropdown = (question, questions, code, onChangeBranching) => {\n  if (!questions) return null;\n\n  const options = makesIrrelevantOptions(question, questions, code);\n  const makes_irrelevant_values = code.makes_irrelevant.map((mi) => \"Skip_\" + mi);\n  const required_for_values = code.required_for.map((rf) => \"Required for_\" + rf);\n  const values = [...makes_irrelevant_values, ...required_for_values];\n\n  const validValues = values.filter((v) => options.some((o) => o.value === v));\n  if (validValues.length < values.length) onChangeBranching(code.code, validValues);\n\n  return (\n    <Dropdown\n      multiple\n      header=\"Determine how this answer affects remaining questions\"\n      direction=\"left\"\n      options={options}\n      value={validValues}\n      renderLabel={renderMakesIrrelevantLabel}\n      onChange={(e, d) => {\n        let values = d.value;\n        onChangeBranching(code.code, values);\n      }}\n      style={{ paddingRight: \"0\", textAlign: \"right\" }}\n    />\n  );\n};\n\nconst makesIrrelevantOptions = (question, questions, code) => {\n  const options = [];\n\n  if (!code.required_for.includes(\"REMAINING\"))\n    options.push({\n      key: \"skipremaining\",\n      content: (\n        <>\n          <Label color=\"red\">Skips</Label>\n          All remaining questions\n        </>\n      ),\n      value: \"Skip_REMAINING\",\n      color: \"red\",\n    });\n\n  // if 'all' is selected, don't show the other options\n  //if (code.makes_irrelevant.includes(\"remaining\")) return options;\n  const n = questions.length || 0;\n  for (let i = 0; i < n; i++) {\n    if (questions[i].name === question.name) continue;\n    if (!code.required_for.includes(questions[i].name)) {\n      options.push({\n        key: \"skip\" + i,\n        content: (\n          <>\n            <Label color=\"red\">Skips</Label>\n            {questions[i].name}\n          </>\n        ),\n        color: \"red\",\n        value: \"Skip_\" + questions[i].name,\n      });\n    }\n  }\n\n  if (!code.makes_irrelevant.includes(\"REMAINING\"))\n    options.push({\n      key: \"requiredremaining\",\n      content: (\n        <>\n          <Label color=\"green\">Required for</Label>\n          All remaining questions\n        </>\n      ),\n      value: \"Required for_REMAINING\",\n      color: \"green\",\n    });\n\n  for (let i = 0; i < n; i++) {\n    if (questions[i].name === question.name) continue;\n    if (!code.makes_irrelevant.includes(questions[i].name)) {\n      options.push({\n        key: \"required\" + i,\n        content: (\n          <>\n            <Label color=\"green\">Required for</Label>\n            {questions[i].name}\n          </>\n        ),\n        color: \"green\",\n        value: \"Required for_\" + questions[i].name,\n      });\n    }\n  }\n\n  return options;\n};\n\nconst renderMakesIrrelevantLabel = (label) => ({\n  content: label.value.replace(\"Skip_\", \"\").replace(\"Required for_\", \"\"),\n  style: {\n    fontSize: \"12px\",\n    padding: \"0\",\n    color: label.color,\n    background: \"white\",\n    border: \"0\",\n    boxShadow: \"none\",\n  },\n});\n\nconst PlainTextEditor = ({ codes, codeTreeArray, setCodes }) => {\n  const dispatch = useDispatch();\n  const [open, setOpen] = useState(false);\n  const [textInput, setTextInput] = useState(\"\");\n  const [alreadyExists, setAlreadyExists] = useState([]);\n\n  useEffect(() => {\n    dispatch(blockEvents(open));\n    return () => {\n      dispatch(blockEvents(false));\n    };\n  }, [dispatch, open]);\n\n  useEffect(() => {\n    setTextInput(ctaToText(codeTreeArray, 2, 40));\n  }, [codeTreeArray]);\n\n  const onSave = () => {\n    const [updatedCodes, duplicates] = textToCodes(\n      textInput,\n      \"\",\n      [],\n      codes.filter((c) => c.frozen)\n    );\n    if (duplicates.length > 0) {\n      setAlreadyExists(duplicates);\n      return null;\n    }\n    setCodes(updatedCodes);\n    setOpen(false);\n  };\n\n  return (\n    <Modal\n      on=\"click\"\n      open={open}\n      style={{ width: \"700px\", maxWidth: \"100%\", overflowX: \"auto\", padding: \"0.3em\" }}\n      trigger={\n        <Button\n          fluid\n          onClick={() => setOpen(true)}\n          style={{ padding: \"0.3em 1em\", borderRadius: \"0\" }}\n        >\n          Plain text editor\n        </Button>\n      }\n    >\n      <Popup\n        open={alreadyExists.length > 0}\n        trigger={\n          <TextArea\n            autoFocus\n            rows={20}\n            onChange={(e, d) => {\n              setTextInput(d.value);\n            }}\n            value={textInput}\n            style={{ fontFamily: \"monospace\", height: \"100%\", width: \"100%\" }}\n            placeholder=\"Every line is a code\\n\\nindent codes to make a tree, like\\nparent\\n  child\\n    grandchild\\n\\nAdd colors with:\\ncode   #color(red)\"\n          />\n        }\n      >\n        Duplicate labels: <br />\n        <b>{alreadyExists.join(\", \")}</b>\n      </Popup>\n\n      <Modal.Actions>\n        <Button color=\"black\" onClick={() => setOpen(false)}>\n          Cancel\n        </Button>\n        <Button content=\"Save changes\" onClick={onSave} positive />\n      </Modal.Actions>\n    </Modal>\n  );\n};\n\nconst changeCodeColor = (code, color, codes, setCodes) => {\n  let updatedCodes = codes.map((ucode) => {\n    if (ucode.code === code) ucode.color = color;\n    return ucode;\n  });\n  setCodes(updatedCodes);\n};\n\nconst toggleActiveCode = (codes, code, active, setCodes) => {\n  let updatedCodes = [...codes];\n\n  const selectedCode = updatedCodes.find((ucode) => ucode.code === code);\n\n  // there is a possibility that code.code does not exist, if it only existed as a parent\n  // this is ideally resolved upstream (when creating the codebook), but as a plan B it can be added here\n  if (selectedCode) {\n    selectedCode.active = active;\n  } else updatedCodes.push({ code: code, parent: \"\", active: true });\n\n  setCodes(updatedCodes);\n};\n\nconst toggleFoldCode = (codes, code, folded, setCodes) => {\n  let updatedCodes = [...codes];\n\n  const selectedCode = updatedCodes.find((ucode) => ucode.code === code);\n\n  // there is a possibility that code.code does not exist, if it only existed as a parent\n  // this is ideally resolved upstream (when creating the codebook), but as a plan B it can be added here\n  if (selectedCode) {\n    selectedCode.folded = !folded;\n  } else updatedCodes.push({ code: code, parent: \"\", active: true, folded: !folded });\n\n  setCodes(updatedCodes);\n};\n\nexport default CodesEditor;\n","import { blockEvents } from \"actions\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { Menu, Segment, Button, Popup, Form, Input, Checkbox } from \"semantic-ui-react\";\n\nconst VariableMenu = ({\n  children,\n  variables,\n  setVariables,\n  index,\n  setIndex,\n  newVariableDefaults,\n}) => {\n  const onAdd = () => {\n    const newVariables = {\n      ...newVariableDefaults,\n      name: uniqueName(newVariableDefaults.name, variables, null),\n    };\n    variables.push(newVariables);\n    setVariables(variables);\n  };\n\n  return (\n    <div>\n      <Menu attached=\"top\" style={{ width: \"100%\", overflowX: \"auto\" }}>\n        {Array(variables.length)\n          .fill(0)\n          .map((v, i) => {\n            return (\n              <Menu.Item\n                onClick={(e, d) => setIndex(i)}\n                active={index === i}\n                style={{ padding: \"0 0\", position: \"relative\" }}\n              >\n                <div>\n                  <div\n                    style={{\n                      padding: \"0 0.5em\",\n                      height: \"100%\",\n                      cursor: \"pointer\",\n                    }}\n                  >\n                    {variables[i].enabled != null ? (\n                      <Checkbox\n                        checked={variables[i].enabled}\n                        onChange={() => {\n                          variables[i].enabled = !variables[i].enabled;\n                          setVariables(variables);\n                        }}\n                        label={variables[i].name}\n                        style={{ margin: \"5px 5px 20px -5px\" }}\n                      />\n                    ) : (\n                      <div style={{ margin: \"5px 5px 20px 0px\" }}>{variables[i].name}</div>\n                    )}\n                    <div style={{ position: \"absolute\", bottom: \"0\" }}>\n                      <MoveButtons\n                        i={i}\n                        variables={variables}\n                        setVariables={setVariables}\n                        index={index}\n                        setIndex={setIndex}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </Menu.Item>\n            );\n          })}\n        <Menu.Item\n          icon=\"plus\"\n          attached=\"right\"\n          position=\"right\"\n          style={{ background: \"lightblue\" }}\n          onClick={onAdd}\n        />\n      </Menu>\n      <Segment attached=\"bottom\" style={{ padding: \"1em\" }}>\n        <DeleteButton\n          variables={variables}\n          setVariables={setVariables}\n          index={index}\n          setIndex={setIndex}\n        />\n        <ChangeName variables={variables} setVariables={setVariables} index={index} />\n        {children}\n      </Segment>\n    </div>\n  );\n};\n\nconst setNewName = (name, variables, index, setVariables) => {\n  if (variables[index].name === name) return;\n  const oldname = variables[index].name;\n  variables[index].name = uniqueName(name, variables, index);\n  processNameChange(variables, oldname, variables[index].name);\n  setVariables(variables);\n};\n\nconst ChangeName = ({ variables, setVariables, index }) => {\n  const [delayedName, setDelayedName] = useState(\"\");\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (variables.length === 0) return;\n    if (!delayedName || delayedName === variables[index].name) return;\n    if (variables[index].name === delayedName) return;\n    const timer = setTimeout(() => {\n      setNewName(delayedName.trim(), variables, index, setVariables);\n    }, 500);\n    return () => clearTimeout(timer);\n  }, [delayedName, variables, index, setVariables]);\n\n  useEffect(() => {\n    if (variables.length === 0) return;\n    setDelayedName(variables[index].name);\n  }, [variables, index, setDelayedName]);\n\n  if (variables.length === 0) return null;\n\n  return (\n    <Form style={{ width: \"50%\" }}>\n      <Form.Group grouped>\n        <label>Name</label> <span style={{ fontSize: \"10px\" }}>(keep it short)</span>\n        <Form.Field>\n          <Input\n            value={delayedName}\n            style={{ width: \"150px\" }}\n            onFocus={() => dispatch(blockEvents(true))}\n            onBlur={() => dispatch(blockEvents(false))}\n            onChange={(e, d) => setDelayedName(d.value)}\n          />\n        </Form.Field>{\" \"}\n      </Form.Group>\n    </Form>\n  );\n};\n\nconst DeleteButton = ({ variables, setVariables, index, setIndex }) => {\n  const [deleteOpen, setDeleteOpen] = useState(false);\n\n  const onDelete = () => {\n    const newVariables = [];\n    for (let i = 0; i < variables.length; i++) {\n      if (i !== index) newVariables.push(variables[i]);\n    }\n\n    setVariables(newVariables);\n    setDeleteOpen(false);\n    setIndex(Math.max(0, index - 1));\n  };\n\n  if (variables.length <= 1) return null;\n  if (variables[index].enabled != null) return null;\n\n  return (\n    <Popup\n      hoverable\n      open={deleteOpen}\n      onClose={() => setDeleteOpen(false)}\n      trigger={\n        <Button\n          icon=\"delete\"\n          floated=\"right\"\n          style={{ background: \"red\", zIndex: 100 }}\n          onClick={() => setDeleteOpen(!deleteOpen)}\n        />\n      }\n    >\n      <p>\n        Delete <b>{variables[index].name}</b>?\n      </p>\n\n      <Button style={{ background: \"red\" }} onClick={onDelete}>\n        yes please\n      </Button>\n    </Popup>\n  );\n};\n\nconst MoveButtons = ({ i, variables, setVariables, index, setIndex }) => {\n  const onMove = (direction, i) => {\n    const j = direction === \"left\" ? Math.max(0, i - 1) : Math.min(variables.length - 1, i + 1);\n    const temp = variables[i];\n\n    variables[i] = variables[j];\n    variables[j] = temp;\n\n    setVariables(variables);\n    setIndex(j);\n  };\n\n  if (index !== i) return null;\n  return (\n    <Button.Group>\n      {i > 0 ? (\n        <Button\n          icon=\"arrow left\"\n          onClick={(e) => {\n            e.stopPropagation();\n            onMove(\"left\", i);\n          }}\n          style={{\n            borderRadius: \"0\",\n            padding: \"0em\",\n            background: \"rgba(0,0,0,0)\",\n          }}\n        />\n      ) : null}\n      {i < variables.length - 1 ? (\n        <Button\n          icon=\"arrow right\"\n          onClick={(e) => {\n            e.stopPropagation();\n            onMove(\"right\", i);\n          }}\n          style={{\n            borderRadius: \"0\",\n            padding: \"0em\",\n            background: \"rgba(0,0,0,0)\",\n          }}\n        />\n      ) : null}\n    </Button.Group>\n  );\n};\n\nconst uniqueName = (newName, variables, index) => {\n  let uniqueNewName = newName;\n  let i = 2;\n\n  const existingNames = [\"REMAINING\"];\n  for (let i = 0; i < variables.length; i++) {\n    if (index !== null && i === index) continue;\n    existingNames.push(variables[i].name);\n  }\n\n  while (existingNames.includes(uniqueNewName)) {\n    uniqueNewName = newName + ` ${i}`;\n    i++;\n  }\n  return uniqueNewName;\n};\n\nconst processNameChange = (variables, oldname, newname) => {\n  for (let v of variables) {\n    v.codes = v.codes.map((c) => {\n      if (c.makes_irrelevant)\n        c.makes_irrelevant = c.makes_irrelevant.map((mi) => (mi === oldname ? newname : mi));\n      if (c.required_for)\n        c.required_for = c.required_for.map((rf) => (rf === oldname ? newname : rf));\n      return c;\n    });\n  }\n};\n\nexport default VariableMenu;\n","import React, { useEffect, useState } from \"react\";\n\nimport { Form, Radio, TextArea, Grid, Dropdown } from \"semantic-ui-react\";\n\nimport Help from \"./Help\";\nimport CodesEditor from \"./CodesEditor\";\nimport { standardizeCodes } from \"library/codebook\";\nimport VariableMenu from \"./VariableMenu\";\n\nconst questionDefaultSettings = {\n  type: \"select code\",\n  name: \"Question name\",\n  question: \"The question itself\",\n  codes: [\"No\", \"Skip\", \"Yes\"],\n};\n\nconst QuestionTaskSettings = ({ taskSettings, setTaskSettings, unitSettings }) => {\n  const [questionIndex, setQuestionIndex] = useState(0);\n\n  const setQuestions = (variables) => {\n    setTaskSettings({\n      ...taskSettings,\n      questions: { settings: taskSettings.questions.settings, questions: variables },\n    });\n  };\n\n  return (\n    <VariableMenu\n      variables={taskSettings.questions.questions}\n      setVariables={setQuestions}\n      index={questionIndex}\n      setIndex={setQuestionIndex}\n      newVariableDefaults={questionDefaultSettings}\n    >\n      <QuestionForm\n        taskSettings={taskSettings}\n        setTaskSettings={setTaskSettings}\n        unitSettings={unitSettings}\n        questionIndex={questionIndex}\n      />{\" \"}\n    </VariableMenu>\n  );\n};\n\nconst QuestionForm = ({ taskSettings, setTaskSettings, unitSettings, questionIndex }) => {\n  const questions = taskSettings.questions.questions;\n\n  const setQuestionForm = (value) => {\n    const newTaskSettings = { ...taskSettings };\n    const newValue = { ...value };\n\n    newTaskSettings.questions.questions[questionIndex] = newValue;\n    setTaskSettings(newTaskSettings);\n  };\n\n  return (\n    <QuestionFormSettings\n      questionForm={questions[questionIndex]}\n      setQuestionForm={setQuestionForm}\n      setTaskSettings={setTaskSettings}\n      questions={questions}\n      questionIndex={questionIndex}\n      unitSettings={unitSettings}\n    />\n  );\n};\n\nconst QuestionFormSettings = ({ questionForm, setQuestionForm, questions, unitSettings }) => {\n  const [delayed, setDelayed] = useState(\"\");\n  const [warn, setWarn] = useState([]);\n\n  useEffect(() => {\n    if (!delayed) return;\n    if (questionForm.question === delayed.question) return;\n    const timer = setTimeout(() => {\n      // if (questionForm.name !== delayed.name)\n      //   updateRelevanceBranching(questionForm.name, delayed.name, setTaskSettings);\n      setQuestionForm({ ...questionForm, name: delayed.name, question: delayed.question });\n    }, 500);\n    return () => clearTimeout(timer);\n  }, [delayed, questionForm, setQuestionForm]);\n\n  useEffect(() => {\n    if (!questionForm) return;\n    let newWarn = [];\n\n    const hasCodeRef = questionForm.question.search(\"\\\\[code\\\\]\") >= 0;\n\n    if (hasCodeRef && unitSettings?.unitSelection === \"allTextUnits\")\n      newWarn.push(\n        \"Referring to a specific code with [code] is only possible if coding units are annotations\"\n      );\n\n    setWarn(newWarn);\n    setDelayed({ name: questionForm.name, question: questionForm.question });\n  }, [setDelayed, questionForm, setWarn, unitSettings]);\n\n  const codesEditor = () => {\n    //if (questionForm.type !== \"search code\" && questionForm.type !== \"select code\") return null;\n    return (\n      <CodesEditor\n        codes={standardizeCodes(questionForm.codes)}\n        setCodes={(newCodes) => setQuestionForm({ ...questionForm, codes: newCodes })}\n        questions={questions}\n        question={questionForm}\n      />\n    );\n  };\n\n  if (!questionForm) return null;\n  return (\n    <Form>\n      <Form.Group grouped>\n        <br />\n        <label>\n          Question\n          <Help\n            header={\"Referring to annotation codes in a question\"}\n            texts={[\n              \"If unit selection is based on span annotations, you can also use the tag [code]. This will be replaced by the code label of the annotation\",\n            ]}\n          />\n        </label>\n        {warn.length > 0 ? <Help type=\"warn\" header=\"\" texts={warn} /> : null}\n        <Form.Field>\n          <TextArea\n            value={delayed.question}\n            onChange={(e, d) => setDelayed({ ...delayed, question: d.value })}\n          />\n        </Form.Field>\n      </Form.Group>\n\n      <Form.Group grouped>\n        <label>Type of answer</label>\n        <Form.Field>\n          <Radio\n            value=\"search code\"\n            label=\"Select code from search box\"\n            checked={questionForm.type === \"search code\"}\n            onChange={() => setQuestionForm({ ...questionForm, type: \"search code\" })}\n          />\n        </Form.Field>\n        <Form.Field>\n          <Radio\n            value=\"select code\"\n            label=\"Select code from buttons\"\n            checked={questionForm.type === \"select code\"}\n            onChange={() => setQuestionForm({ ...questionForm, type: \"select code\" })}\n          />\n        </Form.Field>\n\n        <Form.Field>\n          <Radio\n            value=\"annotinder\"\n            label=\"Annotinder (swipe left/right/up)\"\n            checked={questionForm.type === \"annotinder\"}\n            onChange={() => setQuestionForm({ ...questionForm, type: \"annotinder\" })}\n          />\n        </Form.Field>\n      </Form.Group>\n      <br />\n      {/* <Form.Group grouped>\n        <label>Type of answer</label>\n        <Form.Field>\n          <Dropdown\n            options={questionForm.codes.map((code) => ({ key: code, text: code, value: code }))}\n            placeholder=\"answers that should \"\n            fluid\n            multiple\n            selection\n          />\n        </Form.Field>\n      </Form.Group> */}\n      <br />\n      <AnnotinderEditor questionForm={questionForm} setQuestionForm={setQuestionForm} />\n      <div style={{ margin: \"-1em\" }}>{codesEditor()}</div>\n    </Form>\n  );\n};\n\nconst AnnotinderEditor = ({ questionForm, setQuestionForm }) => {\n  const [swipes, setSwipes] = useState({ left: null, up: null, right: null });\n\n  useEffect(() => {\n    // if there are not yet any .swipe keys, read first 3 codes as defaults\n    if (questionForm.type !== \"annotinder\") return null;\n    const newCodes = [...questionForm.codes];\n    let firstTime = true;\n    for (let code of newCodes) if (code?.swipe) firstTime = false;\n    if (!firstTime) return null;\n    const directions = [\"left\", \"up\", \"right\"];\n    for (let i = 0; i < 3; i++) {\n      if (newCodes.length > i) {\n        if (typeof newCodes[i] === \"object\") {\n          newCodes[i] = { ...newCodes[i], swipe: directions[i] };\n        } else newCodes[i] = { code: newCodes[i], swipe: directions[i] };\n      }\n    }\n    setQuestionForm({ ...questionForm, codes: newCodes });\n  }, [questionForm, setQuestionForm]);\n\n  useEffect(() => {\n    const getSwipeCode = (direction) => {\n      return questionForm.codes.find((code) => {\n        if (typeof code !== \"object\") return false;\n        return code.swipe && code.swipe === direction;\n      });\n    };\n    const left = getSwipeCode(\"left\") || null;\n    const up = getSwipeCode(\"up\") || null;\n    const right = getSwipeCode(\"right\") || null;\n    setSwipes({ left, up, right });\n  }, [questionForm, setSwipes]);\n\n  const onSelect = (direction, selected) => {\n    const newCodes = questionForm.codes.map((code) => {\n      const newcode = typeof code !== \"object\" ? { code } : { ...code };\n      if (newcode.code === selected) {\n        return { ...newcode, swipe: direction };\n      } else {\n        if (newcode.swipe && newcode.swipe === direction) return { ...newcode, swipe: null };\n      }\n      if (!newcode.swipe) newcode.swipe = null;\n      return newcode;\n    });\n    setQuestionForm({ ...questionForm, codes: newCodes });\n  };\n\n  if (questionForm.type !== \"annotinder\") return null;\n\n  const options = questionForm.codes.map((code, i) => {\n    return { key: i, text: code.code || code, value: code.code || code };\n  });\n\n  return (\n    <Form>\n      <Grid textAlign=\"center\" verticalAlign=\"middle\">\n        <Grid.Row style={{ paddingBottom: \"0\" }}>\n          <Grid.Column width={6}>\n            <Form.Group grouped>\n              <b>swipe</b> or <b>arrow up</b>\n              <br />\n              <Dropdown\n                placeholder=\"not used\"\n                clearable\n                value={swipes.up?.code || null}\n                options={options}\n                selection\n                style={{ minWidth: \"10em\", maxWidth: \"10em\" }}\n                onChange={(e, d) => onSelect(\"up\", d.value)}\n              />\n            </Form.Group>\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column width={8}>\n            <b>swipe</b> or <b>arrow left</b>\n            <br />\n            <Dropdown\n              placeholder=\"not used\"\n              clearable\n              value={swipes.left?.code || null}\n              options={options}\n              selection\n              style={{ minWidth: \"10em\", maxWidth: \"10em\" }}\n              onChange={(e, d) => onSelect(\"left\", d.value)}\n            />\n          </Grid.Column>\n          <Grid.Column width={8}>\n            <b>swipe</b> or <b>arrow right</b>\n            <br />\n            <Dropdown\n              placeholder=\"not used\"\n              clearable\n              value={swipes.right?.code || null}\n              options={options}\n              selection\n              style={{ minWidth: \"10em\", maxWidth: \"10em\" }}\n              onChange={(e, d) => onSelect(\"right\", d.value)}\n            />\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n      <br />\n      <br />\n    </Form>\n  );\n};\n\nexport default QuestionTaskSettings;\n","import React, { useState } from \"react\";\n\nimport { Form, Radio, Icon, Checkbox } from \"semantic-ui-react\";\n\nimport CodesEditor from \"./CodesEditor\";\nimport { standardizeCodes } from \"library/codebook\";\nimport VariableMenu from \"./VariableMenu\";\n\nimport Help from \"components/CodingjobManager/subcomponents/Help\";\n\nconst variableDefaultSettings = {\n  name: \"Variable name\",\n  buttonMode: \"all\",\n  searchBox: false,\n  codes: [\"No\", \"Skip\", \"Yes\"],\n};\n\nconst AnnotateTaskSettings = ({ taskSettings, setTaskSettings }) => {\n  const [variableIndex, setVariableIndex] = useState(0);\n\n  const setVariables = (variables) => {\n    setTaskSettings({\n      ...taskSettings,\n      annotate: { settings: taskSettings.annotate.settings, variables: variables },\n    });\n  };\n\n  return (\n    <VariableMenu\n      variables={taskSettings.annotate.variables}\n      setVariables={setVariables}\n      index={variableIndex}\n      setIndex={setVariableIndex}\n      newVariableDefaults={variableDefaultSettings}\n    >\n      <br />\n      <AnnotateForm\n        taskSettings={taskSettings}\n        setTaskSettings={setTaskSettings}\n        variableIndex={variableIndex}\n      />{\" \"}\n    </VariableMenu>\n  );\n};\n\nconst AnnotateForm = ({ taskSettings, setTaskSettings, variableIndex }) => {\n  const annotateForm = taskSettings.annotate.variables[variableIndex];\n  const setAnnotateForm = (value) => {\n    const newTaskSettings = { ...taskSettings };\n    const newValue = { ...value };\n\n    newTaskSettings.annotate.variables[variableIndex] = newValue;\n    setTaskSettings(newTaskSettings);\n  };\n\n  const codesEditor = () => {\n    return (\n      <CodesEditor\n        codes={standardizeCodes(annotateForm.codes)}\n        setCodes={(newCodes) => setAnnotateForm({ ...annotateForm, codes: newCodes })}\n      />\n    );\n  };\n\n  if (!taskSettings?.annotate?.variables?.[variableIndex]) return null;\n\n  return (\n    <Form>\n      <Form.Group>\n        <Icon name=\"setting\" />\n        <label>Code Selector settings</label>\n      </Form.Group>\n\n      <Form.Group>\n        <Form.Field>\n          <Checkbox\n            label=\"Search box\"\n            disabled={annotateForm.buttonMode === \"recent\"}\n            checked={annotateForm.searchBox || annotateForm.buttonMode === \"recent\"}\n            onChange={(e, d) => setAnnotateForm({ ...annotateForm, searchBox: d.checked })}\n          />\n        </Form.Field>\n      </Form.Group>\n      <Form.Group grouped>\n        <label>Code buttons</label>\n\n        <Form.Field>\n          <Radio\n            value=\"all\"\n            label=\"Show all codes\"\n            checked={annotateForm.buttonMode === \"all\"}\n            onChange={() => setAnnotateForm({ ...annotateForm, buttonMode: \"all\" })}\n          />\n          <Help\n            header={\"Show all active codes\"}\n            texts={[\n              \"Only codes that are 'active' will be shown\",\n              \"You can toggle which codes are active in the codebook (top-right in menu bar)\",\n            ]}\n          />\n        </Form.Field>\n        <Form.Field>\n          <Radio\n            value=\"recent\"\n            label=\"Show recently used\"\n            checked={annotateForm.buttonMode === \"recent\"}\n            onChange={() => setAnnotateForm({ ...annotateForm, buttonMode: \"recent\" })}\n          />\n          <Help\n            header={\"Show recently used codes\"}\n            texts={[\n              \"Show only (active) codes that the coder used recently\",\n              \"The Search box is always enabled with this option, and the buttons only serve as quick keys. This is especially usefull for very large codebooks, for instance for tagging specific named entities\",\n            ]}\n          />\n        </Form.Field>\n      </Form.Group>\n\n      <br />\n      <div style={{ overflow: \"auto\", margin: \"-1em\" }}>{codesEditor()}</div>\n    </Form>\n  );\n};\n\nexport default AnnotateTaskSettings;\n","import React, { useEffect } from \"react\";\n\nimport { Icon, Form, Radio, Divider } from \"semantic-ui-react\";\n\nimport QuestionTaskSettings from \"./QuestionTaskSettings\";\nimport AnnotateTaskSettings from \"./AnnotateTaskSettings\";\nimport db from \"apis/dexie\";\n\nconst defaultTaskSettings = {\n  // contains the type of task (annotate, question) and settings for this task\n  // note that each type corresponds to a key. So if for instance type = 'questions',\n  // the questions settings will be used.\n  type: null,\n\n  // annotate type settings\n  annotate: {\n    settings: {},\n    variables: [\n      {\n        name: \"Variable name\",\n        buttonMode: \"all\",\n        searchBox: false,\n        codes: [\"Some\", \"example\", \"options\"],\n      },\n    ],\n  },\n\n  // question type settings\n  questions: {\n    settings: {},\n    questions: [\n      {\n        name: \"Question name\",\n        type: \"select code\",\n        question: \"[The question itself]\",\n        codes: [\"No\", \"Skip\", \"Yes\"],\n      },\n    ],\n  },\n};\n\nconst TaskSettings = ({ codingjob }) => {\n  const unitSettings = codingjob?.unitSettings;\n  const taskSettings = codingjob?.taskSettings || defaultTaskSettings;\n  const setTaskSettings = (ts) => {\n    db.setCodingjobProp(codingjob, \"taskSettings\", ts);\n  };\n\n  useEffect(() => {\n    if (!codingjob?.taskSettings) return;\n    if (!codingjob.importedCodes) return;\n    for (let variable of Object.keys(codingjob.importedCodes)) {\n      const codes = codingjob.importedCodes[variable];\n      const ts = codingjob.taskSettings;\n      if (!ts.annotate.variables.some((v) => v.name === variable)) {\n        ts.annotate.variables.push({\n          name: variable,\n          buttonMode: codes.length > 10 ? \"recent\" : \"all\",\n          searchBox: codes.length > 10,\n          codes,\n          enabled: false,\n        });\n        db.setCodingjobProp(codingjob, \"taskSettings\", ts);\n      }\n    }\n  }, [codingjob]);\n\n  if (!taskSettings || !unitSettings) return null;\n\n  return (\n    <div style={{ verticalAlign: \"top\", float: \"top\", paddingLeft: \"1em\" }}>\n      <TypeForm taskSettings={taskSettings} setTaskSettings={setTaskSettings} />\n      <Divider />\n      {taskSettings.type === \"questions\" ? (\n        <QuestionTaskSettings\n          taskSettings={taskSettings}\n          setTaskSettings={setTaskSettings}\n          unitSettings={unitSettings}\n        />\n      ) : null}\n      {taskSettings.type === \"annotate\" ? (\n        <AnnotateTaskSettings\n          taskSettings={taskSettings}\n          setTaskSettings={setTaskSettings}\n          unitSettings={unitSettings}\n        />\n      ) : null}\n    </div>\n  );\n};\n\nconst TypeForm = ({ taskSettings, setTaskSettings }) => {\n  useEffect(() => {\n    if (!taskSettings?.type)\n      setTaskSettings({\n        ...taskSettings,\n        type: \"annotate\",\n      });\n  }, [taskSettings, setTaskSettings]);\n\n  const radioButton = (value, label) => {\n    return (\n      <Form.Field>\n        <Radio\n          value={value}\n          label={label}\n          checked={taskSettings.type === value}\n          onChange={(e, d) =>\n            setTaskSettings({\n              ...taskSettings,\n              type: value,\n            })\n          }\n        />\n      </Form.Field>\n    );\n  };\n\n  return (\n    <Form>\n      <Form.Group>\n        <Icon name=\"setting\" />\n        <label>Set task type</label>\n      </Form.Group>\n      <Form.Group grouped widths=\"equal\">\n        {radioButton(\"annotate\", \"Annotate\")}\n        {radioButton(\"questions\", \"Question\")}\n      </Form.Group>\n    </Form>\n  );\n};\n\nexport default React.memo(TaskSettings);\n","import React from \"react\";\nimport { Table } from \"semantic-ui-react\";\nimport { getColor } from \"library/tokenDesign\";\nimport \"components/Document/subcomponents/spanAnnotationsStyle.css\";\n\nconst COLWIDTHS = [4, 4, 2, 2]; // for offset and text\n\nconst AnnotateTable = ({ variableMap, annotations }) => {\n  if (!variableMap || Object.keys(variableMap).length === 0) return null;\n\n  return (\n    <Table\n      style={{ fontSize: \"10px\" }}\n      fixed\n      role=\"grid\"\n      arioa-labelledby=\"header\"\n      unstackable\n      singleLine\n      compact=\"very\"\n      size=\"small\"\n    >\n      <Table.Header className=\"annotations-thead\">\n        <Table.Row>\n          <Table.HeaderCell width={COLWIDTHS[0]}>Variable</Table.HeaderCell>\n          <Table.HeaderCell width={COLWIDTHS[1]}>Value</Table.HeaderCell>\n          <Table.HeaderCell width={COLWIDTHS[2]}>Section</Table.HeaderCell>\n          <Table.HeaderCell width={COLWIDTHS[3]}>Tokens</Table.HeaderCell>\n          <Table.HeaderCell>Text</Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n      <Table.Body className=\"annotations-tbody\">\n        {annotationRows(variableMap, annotations)}\n      </Table.Body>\n    </Table>\n  );\n};\n\nconst annotationRows = (variableMap, annotations) => {\n  const rows = [];\n  let i = 0;\n  for (const annotation of annotations) {\n    const text = annotation.text || \"\";\n\n    const row = (\n      <AnnotationRow\n        key={i}\n        variable={annotation.variable}\n        variableMap={variableMap}\n        annotation={annotation}\n        text={text}\n      />\n    );\n    rows.push(row);\n    i++;\n  }\n  return rows;\n};\n\nconst AnnotationRow = ({ variable, variableMap, annotation, text }) => {\n  console.log(variable);\n  if (!variableMap) return null;\n  const codeMap = variableMap[variable].codeMap;\n  const color = getColor(annotation.value, codeMap);\n  const label = codeMap[annotation.value]?.foldToParent\n    ? `${codeMap[annotation.value].foldToParent} - ${annotation.value}`\n    : annotation.value;\n\n  return (\n    <Table.Row className=\"annotations-tr\">\n      <Table.Cell width={COLWIDTHS[0]}>\n        <span title={variable}>{variable}</span>\n      </Table.Cell>\n\n      <Table.Cell width={COLWIDTHS[1]} style={color ? { background: color } : null}>\n        <span title={label}>{label}</span>\n      </Table.Cell>\n      <Table.Cell width={COLWIDTHS[2]}>{annotation.section}</Table.Cell>\n      <Table.Cell width={COLWIDTHS[3]}>{`${annotation.offset}-${\n        annotation.offset + annotation.length\n      }`}</Table.Cell>\n      <Table.Cell>\n        <span title={text}>{text}</span>\n      </Table.Cell>\n    </Table.Row>\n  );\n};\n\nexport default AnnotateTable;\n","import React, { useState, useEffect } from \"react\";\nimport { Container, Grid, Header, List, ListItem, Table, Popup, Button } from \"semantic-ui-react\";\nimport AnnotateTable from \"./subcomponents/AnnotateTable\";\nimport Document from \"components/Document/Document\";\nimport { codeBookEdgesToMap } from \"library/codebook\";\n\nconst AnnotateTask = ({ unit, codebook, setUnitIndex, blockEvents }) => {\n  const [annotations, setAnnotations] = useState([]);\n  const [variableMap, setVariableMap] = useState(null);\n\n  useEffect(() => {\n    // settings is an array with the settings for each question\n    // This needs a little preprocessing, so we only update it when codebook changes (not per unit)\n    const vm = {};\n    for (let variable of codebook.variables) {\n      if (!variable?.codes) return null;\n      const codeMap = codeBookEdgesToMap([...variable.codes]);\n      vm[variable.name] = { ...variable, codeMap };\n    }\n    setVariableMap(vm);\n  }, [codebook, setVariableMap]);\n\n  if (!unit || codebook?.variables === null) return null;\n\n  return (\n    <Grid\n      centered\n      style={{ height: \"100%\", width: \"100%\", paddingTop: \"0\" }}\n      verticalAlign={\"top\"}\n      columns={2}\n    >\n      <Grid.Column width={10} style={{ paddingRight: \"0em\", height: \"100%\" }}>\n        <Document\n          unit={unit}\n          variables={codebook?.variables}\n          settings={codebook?.settings}\n          onChangeAnnotations={setAnnotations}\n          blockEvents={blockEvents}\n        />\n      </Grid.Column>\n      <Grid.Column\n        width={6}\n        style={{\n          paddingRight: \"0em\",\n          height: \"100%\",\n          overflow: \"auto\",\n        }}\n      >\n        <Button.Group fluid style={{ padding: \"0\" }}>\n          <NextUnitButton setUnitIndex={setUnitIndex} />\n          <Instructions codebook={codebook} />\n        </Button.Group>\n        <AnnotateTable variableMap={variableMap} annotations={annotations} />\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nconst NextUnitButton = ({ setUnitIndex }) => {\n  const [tempDisable, setTempDisable] = useState(false);\n\n  const onNext = () => {\n    if (tempDisable) return;\n    setTempDisable(true);\n    setUnitIndex((state) => state + 1);\n    setTimeout(() => {\n      setTempDisable(false);\n    }, 1000);\n  };\n\n  const onKeyDown = (e) => {\n    if (e.ctrlKey && e.keyCode === 13) {\n      e.preventDefault();\n      onNext();\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", onKeyDown);\n    return () => {\n      window.removeEventListener(\"keydown\", onKeyDown);\n    };\n  });\n\n  return (\n    <Button disabled={tempDisable} loading={tempDisable} primary size=\"tiny\" onClick={onNext}>\n      Next Unit\n      <br />\n      (ctrl + Enter)\n    </Button>\n  );\n};\n\nconst Instructions = () => {\n  const [open, setOpen] = useState(false);\n  return (\n    <Popup\n      flowing\n      open={open}\n      position=\"bottom right\"\n      trigger={\n        <Button secondary size=\"tiny\" onClick={() => setOpen(!open)}>\n          Instructions\n        </Button>\n      }\n    >\n      <Container style={{ paddingTop: \"2em\", width: \"700px\" }}>\n        <Header as=\"h4\" align=\"center\">\n          Edit span annotations\n        </Header>\n        <p align=\"center\">Assign codes to words or phrases. A word can have multiple codes.</p>\n        <Table unstackable>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell width={3}></Table.HeaderCell>\n              <Table.HeaderCell>Keyboard</Table.HeaderCell>\n              <Table.HeaderCell>Mouse</Table.HeaderCell>\n              <Table.HeaderCell>Touchpad</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell>\n                <strong>Navigate</strong>\n              </Table.Cell>\n              <Table.Cell>\n                <i>Arrow keys</i>\n              </Table.Cell>\n              <Table.Cell></Table.Cell>\n              <Table.Cell></Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <strong>Select words</strong>\n              </Table.Cell>\n              <Table.Cell>\n                <i>spacebar</i>\n                <br />\n                Hold to select mutiple\n              </Table.Cell>\n              <Table.Cell>\n                <i>Left-click</i>\n                <br />\n                Hold to select multiple\n              </Table.Cell>\n              <Table.Cell>\n                <i>tab</i> first word 2 times, then last word 1 time\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <strong>Edit code</strong>\n              </Table.Cell>\n              <Table.Cell>\n                Press <i>spacebar</i> (don't hold) on an annotation\n              </Table.Cell>\n              <Table.Cell>\n                <i>Left-click</i> (don't hold) on an annotation\n              </Table.Cell>\n              <Table.Cell>\n                <i>tab</i> an annotation 3 times\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <strong>\n                  Select variable\n                  <br />\n                  (if multiple)\n                </strong>\n              </Table.Cell>\n              <Table.Cell>\n                Next with <i>tab</i>, previous with <i>shift+tab</i>\n              </Table.Cell>\n              <Table.Cell>Use buttons</Table.Cell>\n              <Table.Cell>Use buttons</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <strong>Next unit</strong>\n              </Table.Cell>\n              <Table.Cell>\n                <i>ctrl+Enter</i>\n              </Table.Cell>\n              <Table.Cell>Next Unit button</Table.Cell>\n              <Table.Cell>Next Unit button</Table.Cell>\n            </Table.Row>\n            {/* <Table.Row>\n              <Table.Cell>\n                <strong>\n                  Browse units\n                  <br />\n                  (if allowed)\n                </strong>\n              </Table.Cell>\n              <Table.Cell>\n                Press or hold <i>ctrl+Enter</i> (forward) or <i>ctrl+backspace</i> (backward)\n              </Table.Cell>\n              <Table.Cell>back and next buttons (top-left)</Table.Cell>\n              <Table.Cell>back and next buttons (top-left)</Table.Cell>\n            </Table.Row> */}\n          </Table.Body>\n          <Table.Footer>\n            <Table.Row>\n              <Table.HeaderCell>\n                <strong>Quick keys</strong> <br />\n                in popup\n              </Table.HeaderCell>\n              <Table.HeaderCell colSpan=\"3\">\n                <List as=\"ul\">\n                  <ListItem as=\"li\">\n                    <i>text input</i> automatically opens dropdown{\" \"}\n                  </ListItem>\n                  <ListItem as=\"li\">\n                    navigate buttons with <i>arrow keys</i>, select with <i>spacebar</i>\n                  </ListItem>\n                  <ListItem as=\"li\">\n                    use <i>escape</i> to close popup and <i>delete</i> to remove code\n                  </ListItem>\n                </List>\n              </Table.HeaderCell>\n            </Table.Row>\n          </Table.Footer>\n        </Table>\n      </Container>\n    </Popup>\n  );\n};\n\nexport default React.memo(AnnotateTask);\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { Button, Dropdown, Ref, Icon } from \"semantic-ui-react\";\nimport { moveUp, moveDown } from \"library/refNavigation\";\n\nconst arrowKeys = [\"ArrowRight\", \"ArrowLeft\", \"ArrowUp\", \"ArrowDown\"];\n\nexport const SearchBoxDropdown = React.memo(({ options, callback, blockEvents }) => {\n  const ref = useRef();\n\n  return (\n    <Ref innerRef={ref}>\n      <Dropdown\n        fluid\n        scrolling\n        upward={false}\n        placeholder={\"<type to search>\"}\n        searchInput={{ autoFocus: !blockEvents }}\n        style={{ minWidth: \"12em\" }}\n        options={options.map((option) => {\n          return {\n            key: option.code,\n            value: option,\n            text: option.code + (option.tree ? \" (\" + option.tree + \")\" : \"\"),\n            content: (\n              <>\n                {option.code}\n                <br />\n                <span style={{ color: \"grey\" }}>{option.tree}</span>\n              </>\n            ),\n          };\n        })}\n        search\n        selection\n        compact\n        selectOnNavigation={false}\n        minCharacters={0}\n        autoComplete={\"on\"}\n        onChange={(e, d) => {\n          callback(d.value);\n        }}\n      />\n    </Ref>\n  );\n});\n\nexport const ButtonSelection = React.memo(({ options, callback, blockEvents }) => {\n  // render buttons for options (an array of objects with keys 'label' and 'color')\n  // On selection perform callback function with the button label as input\n  // if canDelete is TRUE, also contains a delete button, which passes null to callback\n  const [selected, setSelected] = useState(0);\n\n  const onKeydown = React.useCallback(\n    (event) => {\n      const nbuttons = options.length;\n\n      // any arrowkey\n      if (arrowKeys.includes(event.key)) {\n        event.preventDefault();\n\n        if (event.key === \"ArrowRight\") {\n          if (selected < nbuttons - 1) setSelected(selected + 1);\n        }\n\n        if (event.key === \"ArrowDown\") {\n          setSelected(moveDown(options, selected));\n        }\n\n        if (event.key === \"ArrowLeft\") {\n          if (selected > 0) setSelected(selected - 1);\n        }\n\n        if (event.key === \"ArrowUp\") {\n          setSelected(moveUp(options, selected));\n        }\n\n        return;\n      }\n\n      // delete\n      if (event.keyCode === 46) {\n        callback(null);\n        setSelected(0);\n      }\n\n      // space or enter\n      if (event.keyCode === 32 || event.keyCode === 13) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (selected === options.length) {\n          callback(null); // this means delete button was selected\n        } else {\n          callback(options[selected]);\n        }\n        setSelected(0);\n      }\n    },\n    [selected, callback, options]\n  );\n\n  useEffect(() => {\n    if (!blockEvents) {\n      window.addEventListener(\"keydown\", onKeydown);\n    } else window.removeEventListener(\"keydown\", onKeydown);\n\n    return () => {\n      window.removeEventListener(\"keydown\", onKeydown);\n    };\n  }, [onKeydown, blockEvents]);\n\n  const mapButtons = () => {\n    return options.map((option, i) => {\n      return (\n        <>\n          <Ref innerRef={option.ref}>\n            <Button\n              style={{\n                backgroundColor: option.color,\n                padding: \"1em\",\n                margin: \"0.2em\",\n                flex: \"0.5 1 0\",\n                flexBasis: \"0\",\n                fontWeight: \"bold\",\n                fontSize: \"1em\",\n                border: i === selected ? \"3px solid black\" : \"3px solid #ece9e9\",\n              }}\n              key={option.code}\n              value={option}\n              compact\n              onMouseOver={() => setSelected(i)}\n              onClick={(e, d) => {\n                callback(d.value);\n                setSelected(0);\n              }}\n            >\n              {option.code}\n            </Button>\n          </Ref>\n        </>\n      );\n    });\n  };\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"row\",\n        //alignItems: \"stretch\",\n        alignItems: \"space-eventy\",\n        maxWidth: \"100%\",\n        height: \"100%\",\n        flexWrap: \"wrap\",\n        justifyContent: \"space-around\",\n      }}\n    >\n      {mapButtons()}\n    </div>\n  );\n});\n\nexport const Annotinder = React.memo(({ swipeOptions, callback, swipe, blockEvents }) => {\n  // const left = options.find(option => option.swipe === \"left\");\n  // const up = options.find(option => option.swipe === \"up\");\n  // const right = options.find(option => option.swipe === \"right\");\n\n  useEffect(() => {\n    if (swipe) {\n      console.log(swipe);\n      if (swipe === \"right\") callback(swipeOptions.right);\n      if (swipe === \"up\") callback(swipeOptions.up);\n      if (swipe === \"left\") callback(swipeOptions.left);\n    }\n  }, [swipe, callback, swipeOptions]);\n\n  const onKeydown = React.useCallback(\n    (event) => {\n      // any arrowkey\n      if (arrowKeys.includes(event.key)) {\n        event.preventDefault();\n\n        if (event.key === \"ArrowRight\") callback(swipeOptions.right);\n        if (event.key === \"ArrowUp\") callback(swipeOptions.up);\n        if (event.key === \"ArrowLeft\") callback(swipeOptions.left);\n      }\n    },\n\n    [callback, swipeOptions]\n  );\n\n  useEffect(() => {\n    if (!blockEvents) {\n      window.addEventListener(\"keydown\", onKeydown);\n    } else window.removeEventListener(\"keydown\", onKeydown);\n\n    return () => {\n      window.removeEventListener(\"keydown\", onKeydown);\n    };\n  }, [onKeydown, blockEvents]);\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        alignContent: \"stretch\",\n\n        height: \"100%\",\n      }}\n    >\n      {swipeOptions.up == null ? null : (\n        <Button\n          fluid\n          disabled={swipeOptions.up == null}\n          onClick={(e, d) => callback(swipeOptions.up)}\n          style={{\n            margin: \"0\",\n            padding: \"0\",\n            flex: \"1 1 auto\",\n            borderRadius: \"0\",\n            border: \"1px solid\",\n            background: swipeOptions.up?.color || \"white\",\n          }}\n        >\n          <div style={{ color: \"black\", fontWeight: \"bold\", fontSize: \"1em\" }}>\n            <Icon name={swipeOptions.up?.code ? \"arrow up\" : null} />\n            <span>{swipeOptions.up?.code || \"\"}</span>\n          </div>\n        </Button>\n      )}\n      <div style={{ flex: \"1 1 auto\" }}>\n        <div\n          style={{\n            padding: \"0\",\n            margin: \"0\",\n            display: \"flex\",\n            height: \"100%\",\n            flexWrap: \"wrap\",\n            alignContent: \"stretch\",\n          }}\n        >\n          <Button\n            disabled={swipeOptions.left == null}\n            onClick={(e, d) => callback(swipeOptions.left)}\n            style={{\n              margin: \"0\",\n              padding: \"0\",\n              flex: \"1 1 auto\",\n              width: \"45%\",\n              borderRadius: \"0\",\n              border: \"1px solid\",\n              background: swipeOptions.left?.color || \"white\",\n            }}\n          >\n            <div style={{ color: \"black\", fontWeight: \"bold\", fontSize: \"1em\" }}>\n              <Icon name={swipeOptions.left?.code ? \"arrow left\" : null} />\n              <span>{swipeOptions.left?.code || \"\"}</span>\n            </div>\n          </Button>\n          <Button\n            disabled={swipeOptions.right == null}\n            onClick={(e, d) => callback(swipeOptions.right)}\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              flex: \"1 1 auto\",\n              width: \"45%\",\n              borderRadius: \"0\",\n              border: \"1px solid\",\n              background: swipeOptions.right?.color || \"white\",\n            }}\n          >\n            <div style={{ color: \"black\", fontWeight: \"bold\", fontSize: \"1em\" }}>\n              <span>{swipeOptions.right?.code || \"\"}</span>\n              <Icon name={swipeOptions.right?.code ? \"arrow right\" : null} />\n            </div>\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n});\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { Header, Button, Segment } from \"semantic-ui-react\";\nimport { SearchBoxDropdown, ButtonSelection, Annotinder } from \"./AnswerForms\";\n\nconst DONE_COLOR = \"lightgreen\";\nconst IRRELEVANT_COLOR = \"red\";\n\nconst QuestionForm = ({\n  unit,\n  tokens,\n  questions,\n  questionIndex,\n  setQuestionIndex,\n  setUnitIndex,\n  swipe,\n  blockEvents,\n}) => {\n  const [answerTransition, setAnswerTransition] = useState();\n  const answered = useRef(false); // to prevent answering double (e.g. with swipe events)\n  const [annotations, setAnnotations] = useState(null);\n\n  useEffect(() => {\n    if (!questions) return;\n    prepareAnnotations(unit, tokens, questions, setAnnotations, setQuestionIndex);\n    answered.current = false;\n  }, [unit, tokens, setAnnotations, questions, setQuestionIndex]);\n\n  if (!questions || !unit || !annotations) return null;\n  if (!questions?.[questionIndex]) {\n    setQuestionIndex(0);\n    return null;\n  }\n\n  const question = prepareQuestion(unit, questions[questionIndex]);\n\n  const onSelect = (answer) => {\n    // write result to IDB/server and skip to next question or next unit\n    if (answered.current) return null;\n    answered.current = true;\n\n    annotations[questionIndex].value = answer.code;\n    annotations[questionIndex].makes_irrelevant = answer.makes_irrelevant;\n    unit.annotations = updateAnnotations(annotations[questionIndex], unit.annotations);\n    processIrrelevantBranching(unit, questions, annotations, questionIndex);\n    unit.jobServer.postAnnotations(unit.unitId, unit.annotations);\n\n    setAnswerTransition(answer); // show given answer\n    setTimeout(() => {\n      // wait a little bit, so coder can see their answer and breathe\n      setAnswerTransition(null);\n\n      // check if there is a non irrelevant question remaining\n      let newQuestionIndex = null;\n      for (let i = questionIndex + 1; i < questions.length; i++) {\n        if (annotations[i].value === \"IRRELEVANT\") continue;\n        newQuestionIndex = i;\n        break;\n      }\n\n      // if none remain, go to next unit\n      if (newQuestionIndex === null) {\n        setUnitIndex((state) => state + 1);\n        setQuestionIndex(0);\n      } else {\n        setQuestionIndex(newQuestionIndex);\n      }\n\n      answered.current = false;\n    }, 250);\n  };\n\n  return (\n    <div style={{ height: \"100%\", width: \"100%\" }}>\n      <QuestionIndexStep\n        questions={questions}\n        questionIndex={questionIndex}\n        annotations={annotations}\n        setQuestionIndex={setQuestionIndex}\n      />\n\n      <div\n        style={{\n          display: \"flex\",\n          position: \"relative\",\n          flexFlow: \"column\",\n          height: \"calc(100% - 30px)\",\n          width: \"100%\",\n          maxHeight: \"100%\",\n          padding: \"10px\",\n          color: \"white\",\n          backgroundColor: \"#1B1C1D\",\n        }}\n      >\n        <div style={{ width: \"100%\", flex: \"1 1 auto\", paddingBottom: \"10px\" }}>\n          <Header as=\"h3\" style={{ color: \"white\" }}>\n            {question}\n          </Header>\n        </div>\n        <AnswerSegment\n          answerTransition={answerTransition}\n          currentAnswer={annotations?.[questionIndex]?.value}\n          questions={questions}\n          questionIndex={questionIndex}\n          onSelect={onSelect}\n          swipe={swipe}\n          blockEvents={blockEvents}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst processIrrelevantBranching = (unit, questions, annotations, questionIndex) => {\n  // checks all the branching in the given answers\n  const which = new Set();\n  for (let a in Object.keys(unit.annotations)) {\n    const makesIrrelevant = unit.annotations[a].makes_irrelevant;\n    if (makesIrrelevant == null || makesIrrelevant === null) continue;\n    for (let value of makesIrrelevant) {\n      if (value === \"REMAINING\") {\n        for (let i = questionIndex + 1; i < annotations.length; i++) which.add(i);\n      }\n      const i = questions.findIndex((q) => q.name === value);\n      if (i >= 0) which.add(i);\n    }\n  }\n\n  for (let i = 0; i < annotations.length; i++) {\n    if (which.has(i)) {\n      // gives the value \"IRRELEVANT\" to targeted questions\n      annotations[i].value = \"IRRELEVANT\";\n      unit.annotations = updateAnnotations(annotations[i], unit.annotations);\n    } else {\n      // this happens if a coders goes back and changes all answers that marked a question as \"IRRELEVANT\"\n      if (annotations[i].value === \"IRRELEVANT\") {\n        delete annotations[i].value;\n        unit.annotations = updateAnnotations(annotations[i], unit.annotations);\n      }\n    }\n  }\n};\n\nconst prepareAnnotations = (unit, tokens, questions, setAnnotations, setQuestionIndex) => {\n  // create a list with annotations for each question, and see if they have been answered yet\n  if (tokens.length === 0) return null;\n  const annotations = [];\n  if (!unit.annotations) unit.annotations = [];\n  let questionIndex = 0;\n  for (let i = 0; i < questions.length; i++) {\n    const annotation = createAnnotationObject(tokens, questions[i], i);\n    annotation.value = getCurrentAnswer(unit.annotations, annotation);\n    if (annotation.value !== null) questionIndex = i;\n    annotations.push(annotation);\n  }\n  setAnnotations(annotations);\n  setQuestionIndex(questionIndex);\n};\n\nconst QuestionIndexStep = ({ questions, questionIndex, annotations, setQuestionIndex }) => {\n  //if (questions.length === 1) return null;\n  const [canSelect, setCanSelect] = useState();\n\n  useEffect(() => {\n    const cs = Array(annotations.length).fill(false);\n    cs[0] = true;\n    setCanSelect(cs);\n  }, [annotations, setCanSelect]);\n\n  useEffect(() => {\n    setCanSelect((state) => {\n      const newState = [...state];\n      newState[questionIndex] = true;\n      return newState;\n    });\n  }, [questionIndex, setCanSelect]);\n\n  const setColor = (i) => {\n    if (!annotations[i]) return [\"black\", IRRELEVANT_COLOR];\n    if (annotations[i].value === \"IRRELEVANT\") return [\"black\", IRRELEVANT_COLOR];\n    if (canSelect && i > questionIndex && !canSelect[i]) return [\"white\", \"grey\"];\n    if (annotations[i].value) return [\"black\", DONE_COLOR];\n    if (i === 0) return [DONE_COLOR, \"#1B1C1D\"];\n    if (canSelect && canSelect[i]) return [DONE_COLOR, \"#1B1C1D\"];\n    return [DONE_COLOR, \"grey\"];\n  };\n\n  return (\n    <div>\n      <Button.Group\n        fluid\n        style={{\n          border: \"1px solid\",\n          height: \"30px\",\n        }}\n      >\n        {questions.map((q, i) => {\n          const [color, background] = setColor(i);\n          return (\n            <Button\n              active={i === questionIndex}\n              style={{\n                padding: \"0em 0.2em 0.2em 0.2em\",\n\n                minWidth: \"2em\",\n                height: \"30px\",\n                borderRadius: \"0\",\n                fontSize: \"12px\",\n                border: \"1px solid darkgrey\",\n                background: background,\n                textOverflow: \"clip\",\n                overflow: \"hidden\",\n                color: color,\n              }}\n              onClick={() => {\n                if (canSelect[i]) {\n                  setQuestionIndex(i);\n                }\n              }}\n            >\n              {/* {i + 1} */}\n              <span title={questions[i].name}>{questions[i].name}</span>\n            </Button>\n          );\n        })}\n      </Button.Group>\n    </div>\n  );\n};\n\nconst AnswerSegment = ({\n  answerTransition,\n  currentAnswer,\n  questions,\n  questionIndex,\n  onSelect,\n  swipe,\n  blockEvents,\n}) => {\n  if (answerTransition)\n    return (\n      <Segment\n        style={{\n          display: \"flex\",\n          flex: \"1 1 auto\",\n          padding: \"0\",\n          overflowY: \"auto\",\n          height: \"100%\",\n          width: \"100%\",\n          margin: \"0\",\n          background: answerTransition.color,\n\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <Header as=\"h1\">{answerTransition.code}</Header>\n      </Segment>\n    );\n  return (\n    <>\n      {showCurrent(currentAnswer || answerTransition)}\n      <Segment\n        style={{\n          flex: \"1 1 auto\",\n          padding: \"0\",\n          overflowY: \"auto\",\n          height: \"100%\",\n          width: \"100%\",\n          margin: \"0\",\n        }}\n      >\n        {questions[questionIndex].type === \"search code\" ? (\n          <SearchBoxDropdown\n            options={questions[questionIndex].options}\n            callback={onSelect}\n            blockEvents={blockEvents}\n          />\n        ) : null}\n        {questions[questionIndex].type === \"select code\" ? (\n          <ButtonSelection\n            options={questions[questionIndex].options}\n            callback={onSelect}\n            blockEvents={blockEvents}\n          />\n        ) : null}\n        {questions[questionIndex].type === \"annotinder\" ? (\n          <Annotinder\n            swipeOptions={questions[questionIndex].swipeOptions}\n            currentAnswer={currentAnswer}\n            callback={onSelect}\n            swipe={swipe}\n            blockEvents={blockEvents}\n          />\n        ) : null}\n      </Segment>\n    </>\n  );\n};\n\nconst createAnnotationObject = (tokens, question, questionIndex) => {\n  // creates an object with all information about the annotation except for the\n  // value. This lets us check whether the annotations already exists, and add\n  // or change the value.\n  if (tokens.length === 0) return null;\n\n  const sections = {};\n  const lastToken = tokens[tokens.length - 1];\n\n  const charspan = [0, lastToken.offset + lastToken.length];\n  const indexspan = [0, tokens.length - 1];\n  let [unitStarted, unitEnded] = [false, false];\n\n  let i = 0;\n  for (let token of tokens) {\n    if (token.codingUnit && !sections[token.section]) sections[token.section] = 1;\n    if (!unitStarted && token.codingUnit) {\n      unitStarted = true;\n      charspan[0] = token.offset;\n      indexspan[0] = i;\n    }\n    if (!unitEnded && !token.codingUnit && unitStarted) {\n      unitEnded = true;\n      charspan[1] = tokens[i - 1].offset + tokens[i - 1].length;\n      indexspan[1] = i - 1;\n    }\n    i++;\n  }\n\n  // make these optional? Because they're not tokenizer agnostic\n  const meta = {\n    length_tokens: 1 + indexspan[1] - indexspan[0],\n    length_paragraphs: 1 + tokens[indexspan[1]].paragraph - tokens[indexspan[0]].paragraph,\n    length_sentences: 1 + tokens[indexspan[1]].sentence - tokens[indexspan[0]].sentence,\n  };\n\n  return {\n    variable: `Q${questionIndex + 1}_${question.name.replace(\" \", \"_\")}`,\n    value: null,\n    section: Object.keys(sections).join(\" + \"),\n    offset: charspan[0],\n    length: charspan[1] - charspan[0],\n    meta,\n  };\n};\n\nconst sameQuestion = (x, y) => {\n  return (\n    x.variable === y.variable &&\n    x.section === y.section &&\n    x.offset === y.offset &&\n    x.length === y.length\n  );\n};\n\nconst getCurrentAnswer = (annotations, annotationObject) => {\n  if (!annotations) return null;\n  for (let annotation of annotations) {\n    if (sameQuestion(annotation, annotationObject)) return annotation.value;\n  }\n  return null;\n};\n\nconst updateAnnotations = (newAnnotation, annotations) => {\n  if (!annotations) annotations = [];\n  for (let i = 0; i < annotations.length; i++) {\n    if (sameQuestion(annotations[i], newAnnotation)) {\n      annotations[i] = newAnnotation;\n      return annotations;\n    }\n  }\n  annotations.push(newAnnotation);\n  return annotations;\n};\n\nconst showCurrent = (currentAnswer) => {\n  if (currentAnswer == null) return null;\n  return (\n    <div style={{ backgroundColor: \"white\", color: \"black\" }}>\n      <Segment\n        style={{\n          padding: \"0 0 0.5em 0\",\n          margin: \"0\",\n          borderRadius: \"0\",\n          background: \"#1B1C1D\",\n          color: DONE_COLOR,\n          textAlign: \"center\",\n        }}\n      >\n        <div style={{ marginTop: \"0.3em\" }}>\n          you answered:{\"  \"}\n          <b style={{ fontSize: \"1.5em\" }}>{`${currentAnswer}`}</b>\n        </div>\n      </Segment>\n    </div>\n  );\n};\n\nconst prepareQuestion = (unit, question) => {\n  let preparedQuestion = question.question;\n  if (!unit.variables) return;\n\n  for (let variable of Object.keys(unit.variables)) {\n    if (preparedQuestion.search(`\\\\[${variable}\\\\]`) >= 0) {\n      let code = unit.variables[variable];\n      const codeTag = `{{lightyellow###${code}}}`; // add optional color from itemquestions\n      preparedQuestion = preparedQuestion.replace(`[${variable}]`, codeTag);\n    }\n  }\n\n  return markedString(preparedQuestion);\n};\n\nconst markedString = (text) => {\n  const regex = new RegExp(/{{(.*?)}}/); // Match text inside two square brackets\n\n  text = text.replace(/(\\r\\n|\\n|\\r)/gm, \"\");\n  return (\n    <div>\n      {text.split(regex).reduce((prev, current, i) => {\n        if (i % 2 === 0) {\n          prev.push(current);\n        } else {\n          const [color, string] = current.split(\"###\");\n          prev.push(\n            <mark key={i + current} style={{ backgroundColor: color }}>\n              {string}\n            </mark>\n          );\n        }\n        return prev;\n      }, [])}\n    </div>\n  );\n};\n\nexport default React.memo(QuestionForm);\n","import React, { useState, useEffect, useRef } from \"react\";\nimport QuestionForm from \"./subcomponents/QuestionForm\";\nimport Document from \"components/Document/Document\";\nimport { useSwipeable } from \"react-swipeable\";\nimport { codeBookEdgesToMap, getCodeTreeArray } from \"library/codebook\";\nimport { Form, Icon, Input, Popup } from \"semantic-ui-react\";\nimport { useCookies } from \"react-cookie\";\nimport { useSelector } from \"react-redux\";\n\nconst documentSettings = {\n  centerVertical: true,\n};\n\nconst QuestionTask = ({ unit, codebook, setUnitIndex, blockEvents }) => {\n  const [tokens, setTokens] = useState([]);\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [questions, setQuestions] = useState(null);\n  const refs = { text: useRef(), box: useRef(), code: useRef() };\n  const [textReady, setTextReady] = useState(0);\n  const [cookies, setCookie] = useCookies([\"questionTaskSettings\"]);\n  const [settings, setSettings] = useState(\n    cookies.questionTaskSettings || { splitHeight: 60, textSize: 1 }\n  );\n  const divref = useRef(null);\n\n  useEffect(() => {\n    setCookie(\"questionTaskSettings\", JSON.stringify(settings), { path: \"/\" });\n  }, [settings, setCookie]);\n\n  useEffect(() => {\n    if (!codebook?.questions) return;\n    setQuestions(prepareQuestions(codebook));\n  }, [codebook]);\n\n  useEffect(() => {\n    if (!refs?.text.current) return null;\n    refs.box.current.style.backgroundColor = \"white\";\n    refs.text.current.style.transition = ``;\n    refs.box.current.style.transition = ``;\n    refs.box.current.style.opacity = 0;\n    refs.text.current.style.transform = \"translateX(0%) translateY(0%)\";\n  }, [refs.text, refs.box, unit, questionIndex]);\n\n  useEffect(() => {\n    if (!refs?.text.current) return null;\n    refs.box.current.style.transition = `opacity 200ms ease-out`;\n    refs.box.current.style.opacity = 1;\n  }, [textReady, refs.text, refs.box, questionIndex]);\n\n  // swipe controlls need to be up here due to working on the div wrapping the while question screen\n  // use separate swipe for text (document) and menu rows, to disable swiping up\n  // in text (which conflicts with scrolling)\n  const [swipe, setSwipe] = useState(null);\n  const textSwipe = useSwipeable(swipeControl(questions?.[questionIndex], refs, setSwipe, false));\n  const menuSwipe = useSwipeable(swipeControl(questions?.[questionIndex], refs, setSwipe, true));\n\n  if (!unit) return null;\n\n  return (\n    <div ref={divref} style={{ height: \"100%\" }}>\n      <div\n        {...textSwipe}\n        style={{\n          position: \"relative\",\n          border: \"1px solid\",\n          height: `${settings.splitHeight}%`,\n        }}\n      >\n        <div\n          ref={refs.box}\n          style={{\n            height: \"100%\",\n            width: \"100%\",\n            overflow: \"hidden\",\n            position: \"absolute\",\n          }}\n        >\n          {/* This div moves around behind the div containing the document to show the swipe code  */}\n          <div\n            ref={refs.code}\n            style={{ padding: \"0.6em 0.3em\", width: \"100%\", fontSize: \"3em\", position: \"absolute\" }}\n          />\n          <div\n            ref={refs.text}\n            style={{\n              border: \"1px solid\",\n              height: \"100%\",\n              width: \"100%\",\n              position: \"absolute\",\n              top: \"0\",\n              backgroundColor: \"white\",\n              overflow: \"hidden\",\n              fontSize: `${settings.textSize}em`,\n            }}\n          >\n            <Document\n              unit={unit}\n              settings={documentSettings}\n              setReady={setTextReady}\n              returnTokens={setTokens}\n            />\n          </div>\n        </div>\n        <SettingsPopup settings={settings} setSettings={setSettings} />\n      </div>\n      <div {...menuSwipe} style={{ height: `${100 - settings.splitHeight}%` }}>\n        <QuestionForm\n          unit={unit}\n          tokens={tokens}\n          questions={questions}\n          questionIndex={questionIndex}\n          setQuestionIndex={setQuestionIndex}\n          setUnitIndex={setUnitIndex}\n          swipe={swipe}\n          blockEvents={blockEvents}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst SettingsPopup = ({ settings, setSettings }) => {\n  const fullScreenNode = useSelector((state) => state.fullScreenNode);\n  return (\n    <Popup\n      on=\"click\"\n      mountNode={fullScreenNode || undefined}\n      trigger={\n        <Icon\n          name=\"setting\"\n          style={{\n            position: \"absolute\",\n            cursor: \"pointer\",\n            top: \"0px\",\n            left: \"0px\",\n            color: \"grey\",\n            padding: \"5px 3px\",\n            height: \"30px\",\n          }}\n        />\n      }\n    >\n      <Form>\n        <Form.Group grouped>\n          <Form.Field>\n            <label>\n              text window size <font style={{ color: \"blue\" }}>{`${settings.splitHeight}%`}</font>\n            </label>\n            <Input\n              size=\"mini\"\n              step={2}\n              min={20}\n              max={80}\n              type=\"range\"\n              value={settings.splitHeight}\n              onChange={(e, d) => setSettings((state) => ({ ...state, splitHeight: d.value }))}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>\n              text size scaling <font style={{ color: \"blue\" }}>{`${settings.textSize}`}</font>\n            </label>\n            <Input\n              size=\"mini\"\n              step={0.025}\n              min={0.4}\n              max={1.6}\n              type=\"range\"\n              value={settings.textSize}\n              onChange={(e, d) => setSettings((state) => ({ ...state, textSize: d.value }))}\n            />\n          </Form.Field>\n        </Form.Group>\n      </Form>\n    </Popup>\n  );\n};\n\nconst prepareQuestions = (codebook) => {\n  const questions = codebook.questions;\n  return questions.map((question) => {\n    const codeMap = codeBookEdgesToMap(question.codes);\n    let cta = getCodeTreeArray(codeMap);\n    cta = addRequiredFor([...cta]);\n    const [options, swipeOptions] = getOptions(cta);\n    return { ...question, options, swipeOptions }; // note that it's important that this deep copies question\n  });\n};\n\nconst addRequiredFor = (cta) => {\n  // if codebook has a required_for question, check if this code has it. If not, it's the same as this code having\n  // a makes_irrelevant for this question. This way we only need to process the makes_irrelevant logic (which is easier)\n  const haveRequired = cta.reduce((s, code) => {\n    if (!code.required_for) return s;\n    if (typeof code.required_for !== \"object\") {\n      s.add(code.required_for);\n    } else {\n      for (let rf of code.required_for) s.add(rf);\n    }\n    return s;\n  }, new Set());\n\n  for (let code of cta) {\n    for (let hasReq of haveRequired) {\n      if (\n        !code.required_for ||\n        (code.required_for !== hasReq && !code.required_for.includes(hasReq))\n      ) {\n        if (!code.makes_irrelevant.includes(hasReq))\n          code.makes_irrelevant = [...code.makes_irrelevant, hasReq];\n      }\n    }\n  }\n  return cta;\n};\n\nconst getOptions = (cta) => {\n  const options = [];\n  const swipeOptions = {}; // object, for fast lookup in swipeControl\n\n  for (let code of cta) {\n    if (!code.active) continue;\n    if (!code.activeParent) continue;\n    let tree = code.tree.join(\" - \");\n    const option = {\n      code: code.code,\n      tree: tree,\n      makes_irrelevant: code.makes_irrelevant,\n      color: code.color,\n    };\n    if (code.swipe) swipeOptions[code.swipe] = option;\n    options.push(option);\n  }\n  return [options, swipeOptions];\n};\n\nconst swipeControl = (question, refs, setSwipe, alwaysDoVertical, triggerdist = 150) => {\n  if (!question) return {};\n  if (question.type !== \"annotinder\") return {};\n  const transitionTime = 200;\n  // const blockSwipe = useRef()\n\n  const swipeConfig = {\n    delta: 10, // min distance(px) before a swipe starts. *See Notes*\n    preventDefaultTouchmoveEvent: false, // call e.preventDefault *See Details*\n    trackTouch: true, // track touch input\n    trackMouse: false, // track mouse input\n    rotationAngle: 0, // set a rotation angle\n  };\n\n  const getDeltas = (d) => {\n    let deltaX = d.deltaX;\n    let deltaY = d.deltaY;\n    if (Math.abs(deltaX) > Math.abs(deltaY) + 10) deltaY = 0;\n    if (Math.abs(deltaX) < Math.abs(deltaY) + 10) deltaX = 0;\n    if (!alwaysDoVertical) {\n      // the bottom menu always allows vertical upward swipe, but for the\n      // text div we only allow swiping up if scrolled all the way to bottom\n\n      // get the tokensContainer\n      const el = refs.text.current.getElementsByClassName(\"TokensContainer\")[0];\n      const bottom = el.scrollHeight - Math.ceil(el.scrollTop) === el.clientHeight;\n      if (!bottom) deltaY = 0;\n    }\n    return [deltaX, deltaY];\n  };\n\n  return {\n    onSwiping: (d) => {\n      const [deltaX, deltaY] = getDeltas(d);\n      if (deltaX > 0 && !question.swipeOptions.right) return;\n      if (deltaX < 0 && !question.swipeOptions.left) return;\n      if (deltaY < 0 && !question.swipeOptions.up) return;\n      if (deltaY !== 0 && deltaY > 0) return;\n\n      refs.text.current.style.transition = ``;\n      refs.text.current.style.transform = `translateX(${deltaX}px) translateY(${deltaY}px)`;\n\n      let bgc = question.swipeOptions.up?.color;\n      let code = question.swipeOptions.up?.code;\n      let [bottom, talign] = [\"0%\", \"center\"];\n      if (deltaX > 0) {\n        bgc = question.swipeOptions.right?.color;\n        code = question.swipeOptions.right?.code;\n        [bottom, talign] = [\"40%\", \"left\"];\n      }\n      if (deltaX < 0) {\n        bgc = question.swipeOptions.left?.color;\n        code = question.swipeOptions.left?.code;\n        [bottom, talign] = [\"40%\", \"right\"];\n      }\n\n      refs.box.current.style.backgroundColor = bgc;\n      refs.code.current.innerText = code;\n      refs.code.current.style.bottom = bottom;\n      refs.code.current.style.textAlign = talign;\n    },\n    onSwiped: (d) => {\n      const [deltaX, deltaY] = getDeltas(d);\n      if (deltaX > 0 && !question.swipeOptions.right) return;\n      if (deltaX < 0 && !question.swipeOptions.left) return;\n      if (deltaY < 0 && !question.swipeOptions.up) return;\n      if (deltaY !== 0 && deltaY > 0) return;\n\n      refs.text.current.style.transition = `transform ${transitionTime}ms ease-out, opacity ${transitionTime}ms ease-out`;\n\n      if (Math.abs(deltaX) < triggerdist && Math.abs(deltaY) < triggerdist) {\n        refs.text.current.style.transform = `translateX(0%) translateY(0%)`;\n        //refs.box.current.style.backgroundColor = \"white\";\n      } else {\n        refs.text.current.style.transform = `translateX(${\n          deltaX > 0 ? 100 : deltaX < 0 ? -100 : 0\n        }%) translateY(${deltaY > 0 ? 100 : -100}%)`;\n        refs.box.current.style.transition = `opacity ${transitionTime}ms ease-out`;\n        refs.box.current.style.opacity = 0;\n\n        let dir = \"up\";\n        dir = deltaX > 0 ? \"right\" : \"left\";\n        setSwipe(dir);\n        setSwipe(null);\n      }\n    },\n    ...swipeConfig,\n  };\n};\n\nexport default React.memo(QuestionTask);\n","import React, { useState, useEffect } from \"react\";\nimport TaskSettings from \"./subcomponents/TaskSettings\";\nimport { Grid, Header } from \"semantic-ui-react\";\nimport useUnits from \"components/CodingjobManager/subcomponents/useUnits\";\nimport { standardizeUnits } from \"library/standardizeUnits\";\nimport { getCodebook } from \"library/codebook\";\nimport { useSelector } from \"react-redux\";\n\n// imported from annotator\nimport IndexController from \"components/Annotator/subcomponents/IndexController\";\nimport AnnotateTask from \"components/Annotator/AnnotateTask\";\nimport QuestionTask from \"components/Annotator/QuestionTask\";\n\nconst ManageTask = ({ codingjob }) => {\n  // When a new codingjob is loaded, set codingjobLoaded ref to false\n  // this prevents actually loading the data until unitSettings has loaded\n  // the unitSettings stored in the codingjob\n  const units = useUnits(codingjob);\n\n  if (!codingjob) return null;\n  let cwidths = [8, 8];\n  if (codingjob.taskSettings?.type) {\n    if (codingjob.taskSettings.type === \"annotate\") cwidths = [6, 10];\n    if (codingjob.taskSettings.type === \"questions\") cwidths = [8, 8];\n  }\n\n  return (\n    <div>\n      <Grid stackable columns={2}>\n        <Grid.Column verticalAlign=\"top\" stretched width={cwidths[0]}>\n          <Header textAlign=\"center\" style={{ background: \"#1B1C1D\", color: \"white\" }}>\n            Settings\n          </Header>\n          <TaskSettings codingjob={codingjob} />\n        </Grid.Column>\n        <Grid.Column width={cwidths[1]}>\n          <PreviewTask codingjob={codingjob} units={units} />\n        </Grid.Column>\n      </Grid>\n    </div>\n  );\n};\n\nconst PreviewTask = React.memo(({ codingjob, units }) => {\n  const [index, setIndex] = useState(null);\n  const [standardizedUnit, setStandardizedUnit] = useState(null);\n  const [codebook, setCodebook] = useState(null);\n\n  useEffect(() => {\n    if (!codingjob?.taskSettings) return;\n    setCodebook(getCodebook(codingjob.taskSettings));\n  }, [codingjob.taskSettings]);\n\n  useEffect(() => {\n    if (!units || index === null) {\n      setStandardizedUnit(null);\n      return null;\n    }\n    if (index >= units.length) return null;\n    standardizeUnits(codingjob, [units[index]]).then((singleUnitArray) => {\n      const previewUnit = singleUnitArray[0];\n      previewUnit.jobServer = { postAnnotations: (annotations) => console.log(annotations) }; // don't store annotations\n      previewUnit.rules = { canGoBack: true, canGoForward: true };\n      setStandardizedUnit(previewUnit);\n    });\n  }, [index, units, setStandardizedUnit, codingjob]);\n\n  if (!units) return null;\n\n  const renderTaskPreview = (type) => {\n    switch (type) {\n      case \"questions\":\n        return (\n          <PreviewQuestionTask\n            codebook={codebook}\n            standardizedUnit={standardizedUnit}\n            setUnitIndex={setIndex}\n          >\n            <IndexController n={units?.length} index={index} setIndex={setIndex} />\n          </PreviewQuestionTask>\n        );\n      case \"annotate\":\n        return (\n          <PreviewAnnotateTask\n            codebook={codebook}\n            standardizedUnit={standardizedUnit}\n            setUnitIndex={setIndex}\n          >\n            <IndexController\n              n={units?.length}\n              index={index}\n              setIndex={setIndex}\n              canGoBack={false}\n              canGoForward={false}\n              quickKeyNext={true}\n            />\n          </PreviewAnnotateTask>\n        );\n      default:\n        return null;\n    }\n  };\n\n  if (!codingjob?.taskSettings?.type) return null;\n  return renderTaskPreview(codingjob.taskSettings.type);\n});\n\nconst PreviewQuestionTask = React.memo(({ children, codebook, standardizedUnit, setUnitIndex }) => {\n  if (!codebook) return null;\n  if (!codebook?.type === \"questions\") return null;\n\n  return (\n    <>\n      <Header textAlign=\"center\" style={{ background: \"#1B1C1D\", color: \"white\" }}>\n        Preview\n        {children}\n      </Header>\n\n      <div\n        style={{\n          padding: \"0\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          height: \"calc(100vh - 250px)\",\n          minHeight: \"500px\",\n          maxHeight: \"800px\",\n        }}\n      >\n        <div\n          style={{\n            padding: \"0em\",\n            width: \"70%\",\n            paddingTop: \"1em\",\n            height: \"100%\",\n          }}\n        >\n          <QuestionTask\n            unit={standardizedUnit}\n            codebook={codebook}\n            setUnitIndex={setUnitIndex}\n            blockEvents={true}\n          />\n        </div>\n      </div>\n    </>\n  );\n});\n\nconst PreviewAnnotateTask = ({ children, codebook, standardizedUnit, setUnitIndex }) => {\n  const blockEvents = useSelector((state) => state.eventsBlocked);\n  if (!codebook) return null;\n  if (codebook.type !== \"annotate\") return null;\n\n  return (\n    <>\n      <Header textAlign=\"center\" style={{ background: \"#1B1C1D\", color: \"white\" }}>\n        Preview\n      </Header>\n      {children}\n\n      <div\n        style={{\n          padding: \"0\",\n          width: \"100%\",\n          height: \"calc(100vh - 250px)\",\n          minHeight: \"500px\",\n        }}\n      >\n        <div style={{ padding: \"0\", height: \"100%\" }}>\n          <AnnotateTask\n            unit={standardizedUnit}\n            codebook={codebook}\n            setUnitIndex={setUnitIndex}\n            blockEvents={blockEvents}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default React.memo(ManageTask);\n","import React, { useState, useEffect } from \"react\";\n\nimport { Icon, Form, Radio, Input } from \"semantic-ui-react\";\n\nimport db from \"apis/dexie\";\n\nconst defaultDeploySettings = {\n  medium: null,\n  nCoders: 1,\n  pctOverlap: 10,\n  //coders: [{ pctUnits: 100, pctOverlap: 10 }],\n};\n\nconst DeploySettings = ({ codingjob }) => {\n  const deploySettings = codingjob?.deploySettings || defaultDeploySettings;\n  const setDeploySettings = (us) => {\n    db.setCodingjobProp(codingjob, \"deploySettings\", us);\n  };\n\n  if (!deploySettings) return null;\n\n  return (\n    <div style={{ verticalAlign: \"top\", float: \"top\", paddingLeft: \"1em\" }}>\n      <DeployForm\n        codingjob={codingjob}\n        deploySettings={deploySettings}\n        setDeploySettings={setDeploySettings}\n      />\n    </div>\n  );\n};\n\nconst DeployForm = ({ codingjob, deploySettings, setDeploySettings }) => {\n  const [delayed, setDelayed] = useState(null); // delayed unitSettings\n  const totalUnits = codingjob?.unitSettings?.totalUnits || 0;\n\n  useEffect(() => {\n    setDelayed(deploySettings);\n  }, [deploySettings, setDelayed]);\n\n  useEffect(() => {\n    if (delayed === deploySettings) return null;\n    const timer = setTimeout(() => {\n      //const newDelayed = computeCoderShare(delayed);\n      setDeploySettings(delayed);\n    }, 300);\n    return () => clearTimeout(timer);\n  }, [delayed, deploySettings, setDeploySettings]);\n\n  const radioButton = (value, label) => {\n    return (\n      <Form.Field>\n        <Radio\n          value={value}\n          label={label}\n          checked={deploySettings.medium === value}\n          onChange={(e, d) =>\n            setDeploySettings({\n              ...deploySettings,\n              medium: value,\n            })\n          }\n        />\n      </Form.Field>\n    );\n  };\n\n  const amcatSettings = () => {\n    return <div></div>;\n  };\n  const fileSettings = () => {\n    if (deploySettings.medium !== \"file\") return null;\n    return (\n      <>\n        <br />\n        <Form.Group>\n          <Icon name=\"setting\" />\n          <label>Divide jobs</label>\n        </Form.Group>\n        <Form.Group>\n          <Form.Field width={5}>\n            <label>Coders</label>\n            <Input\n              size=\"mini\"\n              type=\"number\"\n              min={1}\n              value={delayed.nCoders}\n              onChange={(e, d) => setDelayed((state) => ({ ...state, nCoders: d.value }))}\n            />\n          </Form.Field>\n\n          <Form.Field width={7}>\n            <label>Overlap</label>\n            <Input\n              size=\"mini\"\n              type=\"number\"\n              step={1}\n              min={0}\n              max={100}\n              label=\"%\"\n              labelPosition=\"right\"\n              value={delayed.pctOverlap}\n              onChange={(e, d) => setDelayed((state) => ({ ...state, pctOverlap: d.value }))}\n            />\n          </Form.Field>\n\n          {/* <Form.Field width={5}>\n            <label>Off total units</label>\n            <Input\n              size=\"mini\"\n              type=\"number\"\n              step={1}\n              min={1}\n              max={100}\n              label=\"%\"\n              labelPosition=\"right\"\n              value={delayed.pctOfUnits}\n              onChange={(e, d) => setDelayed((state) => ({ ...state, pctOfUnits: d.value }))}\n            />\n          </Form.Field> */}\n          <CoderDistribution totalUnits={totalUnits} settings={delayed} />\n        </Form.Group>\n      </>\n    );\n  };\n\n  if (delayed === null) return null;\n\n  return (\n    <Form>\n      <Form.Group>\n        <Icon name=\"setting\" />\n        <label>Deploy medium</label>\n      </Form.Group>\n      <Form.Group grouped widths=\"equal\">\n        {radioButton(\"file\", \"File\")}\n        {radioButton(\"amcat\", \"AmCAT\")}\n      </Form.Group>\n      {amcatSettings()}\n      {fileSettings()}\n    </Form>\n  );\n};\n\n// const computeCoderShare = (settings) => {\n//   let coders = settings.coders.slice(0, settings.nCoders);\n//   const prevCoders = coders.length;\n//   const needCoders = settings.nCoders - prevCoders;\n\n//   for (let i = 0; i < needCoders; i++)\n//     coders.push({ pctUnits: 100 / prevCoders, pctOverlap: settings.pctOverlap });\n\n//   const totalPctUnits = coders.reduce((total, coder) => {\n//     return (total += coder.pctUnits);\n//   }, 0);\n\n//   coders = coders.map((coder) => ({\n//     ...coder,\n//     pctUnits: (coder.pctUnits = (100 * coder.pctUnits) / totalPctUnits),\n//   }));\n\n//   return { ...settings, coders };\n// };\n\nconst CoderDistribution = ({ totalUnits, settings }) => {\n  if (!settings) return null;\n\n  const overlapSet = Math.round((totalUnits * settings.pctOverlap) / 100);\n  const unitSet = totalUnits - overlapSet;\n\n  const avgPerCoder = overlapSet + unitSet / settings.nCoders;\n\n  return (\n    <p style={{ textAlign: \"center\", color: \"blue\" }}>\n      Avg. units per coder:{\" \"}\n      <b style={{ fontSize: \"1.3em\" }}>{Math.round(avgPerCoder * 100) / 100}</b>\n    </p>\n  );\n};\n\n// const CoderTable = ({ totalUnits, settings }) => {\n//   console.log(settings);\n//   if (!settings.coders) return null;\n\n//   const rows = () => {\n//     return settings.coders.map((coder, i) => {\n//       return (\n//         <Table.Row>\n//           <Table.Cell>{i + 1}</Table.Cell>\n//           <Table.Cell>{Math.round(coder.pctUnits * 100) / 100}</Table.Cell>\n//           <Table.Cell>{Math.ceil((coder.pctUnits / 100) * totalUnits)}</Table.Cell>\n//         </Table.Row>\n//       );\n//     });\n//   };\n\n//   return (\n//     <Table>\n//       <Table.Header>\n//         <Table.Row>\n//           <Table.HeaderCell>Coder</Table.HeaderCell>\n//           <Table.HeaderCell>% units</Table.HeaderCell>\n//           <Table.HeaderCell># units</Table.HeaderCell>\n//         </Table.Row>\n//       </Table.Header>\n//       <Table.Body>{rows()}</Table.Body>\n//     </Table>\n//   );\n// };\n\n// Also make an option for the type of deployment\n// unitlist: users receive single codingjob json with all units\n// unitchain: each unit contains a reference to the next unit\n\n// /**\n//  * A custom medium allows any backend to be used that can host codingjob jsons, and\n//  * has an address to POST annotations. The form lets the user define where to send the codingjob,\n//  * and where to\n//  * @returns\n//  */\n// const CustomMedium = () => {\n//   return <div></div>;\n// };\n\nexport default DeploySettings;\n","import db from \"apis/dexie\";\nimport SelectionTable from \"./SelectionTable\";\nimport { useLiveQuery } from \"dexie-react-hooks\";\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { Button, Grid, Header, Popup, TextArea } from \"semantic-ui-react\";\nimport QRCode from \"react-qr-code\";\nimport { useCookies } from \"react-cookie\";\nimport newAmcatSession from \"apis/amcat\";\n\nconst DeployedJobs = () => {\n  const history = useHistory();\n  const [jobKey, setJobKey] = useState(null);\n\n  const setJobUrlQuery = async () => {\n    // set task.url as url query to open job in annotator\n    history.push(\"/annotator?url=\" + jobKey.url);\n  };\n\n  const linkAndQr = () => {\n    if (jobKey == null) return <div style={{ height: \"6em\" }} />;\n    const url = \"https://ccs-amsterdam.github.io/CCS_annotator/#/annotator?url=\" + jobKey?.url;\n    const qrUrl =\n      \"https://ccs-amsterdam.github.io/CCS_annotator/#/annotator?url=\" +\n      jobKey?.url.replace(\":\", \"%colon%\");\n    return (\n      <div style={{ height: \"6em\" }}>\n        <TextArea value={url} style={{ width: \"100%\", height: \"4em\", fontSize: \"10px\" }} />\n        <Popup hoverable trigger={<Button>Show QR code</Button>}>\n          <QRCode value={encodeURI(qrUrl)} size={256} />\n        </Popup>\n      </div>\n    );\n  };\n\n  return (\n    <Grid centered container>\n      <Grid.Row>\n        <Grid.Column width={8}>\n          <DeployedTable jobKey={jobKey} setJobKey={setJobKey} />\n        </Grid.Column>\n        <Grid.Column width={8}>\n          <Button primary disabled={!jobKey} onClick={setJobUrlQuery}>\n            Open selected codingjob\n          </Button>\n          <br />\n          <br />\n          {linkAndQr()}\n          <Header>Current annotations</Header>\n          <ResultsTable jobKey={jobKey} />\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n};\n\nconst deployedTableColumns = [\n  {\n    Header: \"Title\",\n    accessor: \"title\",\n    headerClass: \"two wide\",\n  },\n  {\n    Header: \"URL\",\n    accessor: \"url\",\n    headerClass: \"four wide\",\n  },\n  {\n    Header: \"Created\",\n    accessor: \"created\",\n    headerClass: \"four wide\",\n  },\n];\n\nconst DeployedTable = ({ jobKey, setJobKey }) => {\n  const jobs = useLiveQuery(async () => {\n    let arr = await db.idb.deployedJobs.toArray();\n    arr.sort((a, b) => {\n      return b.created - a.created;\n    });\n\n    console.log(arr);\n    return arr.map((row) => ({ ...row, created: row.created.toDateString() }));\n  });\n\n  useEffect(() => {\n    if (!jobKey && jobs) {\n      setJobKey(jobs.length > 0 ? { ...jobs[0], ROW_ID: \"0\" } : null);\n    }\n  }, [jobKey, jobs, setJobKey]);\n\n  return (\n    <SelectionTable\n      columns={deployedTableColumns}\n      data={jobs ? jobs : []}\n      selectedRow={jobKey}\n      setSelectedRow={setJobKey}\n      defaultSize={15}\n    />\n  );\n};\n\nconst resultsTableColumns = [\n  {\n    Header: \"document_id\",\n    accessor: \"document_id\",\n    headerClass: \"three wide\",\n  },\n  {\n    Header: \"unit_id\",\n    accessor: \"unit_id\",\n    headerClass: \"two wide\",\n  },\n  {\n    Header: \"Coder\",\n    accessor: \"coder\",\n    headerClass: \"three wide\",\n  },\n  {\n    Header: \"Variable\",\n    accessor: \"variable\",\n    headerClass: \"three wide\",\n  },\n  {\n    Header: \"Value\",\n    accessor: \"value\",\n    headerClass: \"three wide\",\n  },\n];\n\nconst ResultsTable = ({ jobKey }) => {\n  const [annotations, setAnnotations] = useState([]);\n  const [cookies] = useCookies([\"amcat\"]);\n\n  useEffect(() => {\n    if (!jobKey) return null;\n    if (!cookies.amcat) return null;\n    const amcat = newAmcatSession(cookies.amcat.host, cookies.amcat.email, cookies.amcat.token);\n    setAnnotations([]);\n    getResultUrl(jobKey, amcat, setAnnotations);\n  }, [jobKey, cookies, setAnnotations]);\n\n  return <SelectionTable columns={resultsTableColumns} data={annotations} />;\n};\n\nconst getResultUrl = async (jobKey, amcat, setAnnotations) => {\n  let job = await db.idb.deployedJobs.get({ url: jobKey.url });\n\n  if (!job) return;\n\n  if (!amcat) return;\n  try {\n    const res = await amcat.api.get(jobKey.url);\n    const annotations = res.data.units.reduce((arr, unit, i) => {\n      if (unit.annotations) {\n        for (let coder of Object.keys(unit.annotations)) {\n          for (let ann of unit.annotations[coder]) {\n            const a = {\n              document_id: unit.document_id,\n              unit_id: i,\n              coder,\n              ...unit.provenance,\n              ...ann,\n            };\n\n            if (unit.meta) {\n              for (let key of Object.keys(unit.meta)) {\n                a[\"meta_\" + key] = unit.meta[key];\n              }\n            }\n\n            arr.push(a);\n          }\n        }\n      }\n      return arr;\n    }, []);\n    console.log(annotations);\n    setAnnotations(annotations);\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport default DeployedJobs;\n","import React, { useState, useEffect } from \"react\";\nimport DeploySettings from \"./subcomponents/DeploySettings\";\nimport useUnits from \"components/CodingjobManager/subcomponents/useUnits\";\nimport { Grid, Header, Button, Form } from \"semantic-ui-react\";\nimport { saveAs } from \"file-saver\";\nimport JSZip from \"jszip\";\n\nimport db from \"apis/dexie\";\nimport { drawRandom } from \"library/sample\";\nimport { standardizeUnits } from \"library/standardizeUnits\";\nimport { getCodebook } from \"library/codebook\";\nimport DeployedJobs from \"./subcomponents/DeployedJobs\";\nimport { useCookies } from \"react-cookie\";\nimport newAmcatSession from \"apis/amcat\";\n\nconst DeployCodingjob = ({ codingjob }) => {\n  const [codingjobPackage, setCodingjobPackage] = useState(null);\n  const units = useUnits(codingjob);\n\n  useEffect(() => {\n    if (!units || units.length === 0) return;\n    if (!codingjob?.unitSettings || !codingjob?.taskSettings || !codingjob?.deploySettings) return;\n\n    const includeDocuments = codingjob.deploySettings.medium === \"file\";\n    createCodingjobPackage(codingjob, units, setCodingjobPackage, includeDocuments);\n  }, [codingjob, units, setCodingjobPackage]);\n\n  const deployButton = (medium) => {\n    if (!medium) return null;\n    switch (codingjob.deploySettings.medium) {\n      case \"file\":\n        return <DownloadButton codingjobPackage={codingjobPackage} />;\n      case \"amcat\":\n        return <AmcatDeploy codingjobPackage={codingjobPackage} />;\n      default:\n        return null;\n    }\n  };\n\n  const viewDeployed = () => {\n    if (!codingjob?.deploySettings?.medium) return null;\n    if (codingjob.deploySettings.medium !== \"amcat\") return null;\n    return (\n      <Grid.Column width={11}>\n        <Header textAlign=\"center\" style={{ background: \"#1B1C1D\", color: \"white\" }}>\n          Previously deployed jobs\n        </Header>\n        <DeployedJobs />\n      </Grid.Column>\n    );\n  };\n\n  if (!codingjob) return null;\n\n  return (\n    <div>\n      <Grid centered stackable columns={2}>\n        <Grid.Column width={5}>\n          <Header textAlign=\"center\" style={{ background: \"#1B1C1D\", color: \"white\" }}>\n            Deploy Codingjob\n          </Header>\n          <DeploySettings codingjob={codingjob} />\n          <br />\n          {deployButton(codingjob?.deploySettings?.medium)}\n        </Grid.Column>\n        {viewDeployed()}\n      </Grid>\n    </div>\n  );\n};\n\nconst DownloadButton = ({ codingjobPackage }) => {\n  const [title, setTitle] = useState(\"\");\n\n  useEffect(() => {\n    if (codingjobPackage?.title) setTitle(codingjobPackage.title);\n  }, [codingjobPackage]);\n\n  const onDownload = async () => {\n    const cjSets = createCoderSets(codingjobPackage);\n\n    const zip = new JSZip();\n    zip.file(`AmCAT_annotator_${codingjobPackage.title}.json`, JSON.stringify(codingjobPackage));\n    for (let i = 0; i < cjSets.length; i++) {\n      const fname = `set_${cjSets[i].set}_units_${cjSets[i].units.length}_${codingjobPackage.title}.json`;\n      zip.file(fname, JSON.stringify(cjSets[i]));\n    }\n\n    const content = await zip.generateAsync({ type: \"blob\" });\n    saveAs(content, `AmCAT_annotator_${codingjobPackage.title}.zip`);\n\n    // codingjobPackage.title = title;\n    // const json = [JSON.stringify(codingjobPackage)];\n    // const blob = new Blob(json, { type: \"text/plain;charset=utf-8\" });\n\n    // try {\n    //   fileDownload(blob, `AmCAT_annotator_${codingjobPackage.title}.json`);\n    //   //const url = objectHash(codingjobPackage);\n    //   //db.uploadTask(codingjobPackage, url, \"local\");\n    // } catch (error) {\n    //   console.error(\"\" + error);\n    // }\n  };\n\n  return (\n    <div>\n      <Form onSubmit={() => onDownload()}>\n        <Form.Input\n          placeholder=\"username\"\n          value={title}\n          maxLength={30}\n          onChange={(e, d) => setTitle(d.value)}\n          autoFocus\n          style={{ width: \"100%\" }}\n        />\n      </Form>\n      <br />\n\n      <Button\n        primary\n        fluid\n        loading={codingjobPackage === null}\n        disabled={title.length < 5}\n        onClick={onDownload}\n      >\n        {title.length < 5 ? \"please use 5 characters or more\" : \"Download codingjob files\"}{\" \"}\n      </Button>\n    </div>\n  );\n};\n\nconst AmcatDeploy = ({ codingjobPackage }) => {\n  const [title, setTitle] = useState(\"\");\n  const [cookies, , removeCookie] = useCookies([\"amcat\"]);\n\n  useEffect(() => {\n    if (codingjobPackage?.title) setTitle(codingjobPackage.title);\n  }, [codingjobPackage]);\n\n  const deploy = async () => {\n    const amcat = newAmcatSession(cookies.amcat.host, cookies.amcat.email, cookies.amcat.token);\n    try {\n      const id = await amcat.postCodingjob(codingjobPackage, title);\n      const url = `${amcat.host}/codingjob/${id.data.id}`;\n      db.createDeployedJob(title, url);\n    } catch (e) {\n      console.log(e);\n      removeCookie(\"amcat\");\n    }\n  };\n\n  if (!cookies.amcat) return <p>You need to log in to AmCAT first. (see top-right in the menu)</p>;\n\n  return (\n    <div>\n      <Form onSubmit={() => deploy()}>\n        <Form.Input\n          placeholder=\"username\"\n          value={title}\n          maxLength={30}\n          onChange={(e, d) => setTitle(d.value)}\n          autoFocus\n          style={{ width: \"100%\" }}\n        />\n      </Form>\n      <br />\n\n      <Button fluid primary disabled={title.length < 5} onClick={() => deploy()}>\n        {title.length < 5 ? \"please use 5 characters or more\" : \"Upload to AmCAT\"}\n      </Button>\n    </div>\n  );\n};\n\nconst createCoderSets = (codingjobPackage) => {\n  const unitSettings = codingjobPackage.provenance.unitSettings;\n  const deploySettings = codingjobPackage.provenance.deploySettings;\n  const units = codingjobPackage.units;\n\n  const nOverlap = Math.round((unitSettings.totalUnits * deploySettings.pctOverlap) / 100);\n  //const n = totalSet - overlapSet\n\n  const overlapSet = units.slice(0, nOverlap);\n  const unitSet = units.slice(nOverlap);\n\n  let unitSets = Array(Number(deploySettings.nCoders))\n    .fill([])\n    .map((set) => [...overlapSet]);\n  for (let i = 0; i < unitSet.length; i++) {\n    unitSets[i % unitSets.length].push(unitSet[i]);\n  }\n\n  return unitSets.map((us, i) => ({\n    set: i + 1,\n    title: codingjobPackage.title,\n    codebook: codingjobPackage.codebook,\n    units: drawRandom(us, us.length, false, 42, null),\n  }));\n};\n\nconst createCodingjobPackage = async (\n  codingjob,\n  units,\n  setCodingjobPackage,\n  includeDocuments = false\n) => {\n  const cjpackage = {\n    title: codingjob.name,\n    provenance: { unitSettings: codingjob.unitSettings, deploySettings: codingjob.deploySettings },\n    codebook: getCodebook(codingjob.taskSettings),\n    units: await standardizeUnits(codingjob, units),\n    rules: { authentication: \"user\" },\n    annotations: [],\n  };\n  if (includeDocuments)\n    cjpackage.provenance.documents = await db.idb.documents\n      .where(\"job_id\")\n      .equals(codingjob.job_id)\n      .toArray();\n\n  setCodingjobPackage(cjpackage);\n};\n\nexport default DeployCodingjob;\n","import React, { useState } from \"react\";\n\nimport { Segment, Step } from \"semantic-ui-react\";\n\nimport db from \"apis/dexie\";\nimport { useLiveQuery } from \"dexie-react-hooks\";\n\nimport CodingjobSelector from \"./1_CodingjobSelector\";\nimport ManageDocuments from \"./2_ManageDocuments\";\nimport ManageCodingUnits from \"./3_ManageCodingUnits\";\nimport ManageTask from \"./4_ManageTask\";\nimport DeployCodingjob from \"./5_DeployCodingjob\";\n\nconst CodingjobManager = () => {\n  const [menuItem, setMenuItem] = useState(\"codingjobs\");\n  const [selectedCodingjob, setSelectedCodingjob] = useState(null);\n\n  const codingjob = useLiveQuery(() => {\n    // retrieve codingjob from Dexie whenever selectedCodingjob changes OR dexie is updated\n    if (selectedCodingjob) {\n      return db.idb.codingjobs\n        .get(selectedCodingjob.job_id)\n        .then((cj) => {\n          return { ...cj, ROW_ID: selectedCodingjob.ROW_ID };\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    } else return null;\n  }, [selectedCodingjob]);\n\n  const nDocuments = useLiveQuery(() => {\n    if (!codingjob?.job_id) return 0;\n    return db.idb.documents.where(\"job_id\").equals(codingjob.job_id).count();\n  }, [codingjob]);\n\n  const renderSwitch = (menuItem) => {\n    switch (menuItem) {\n      case \"codingjobs\":\n        return (\n          <CodingjobSelector codingjob={codingjob} setSelectedCodingjob={setSelectedCodingjob} />\n        );\n      case \"documents\":\n        return <ManageDocuments codingjob={codingjob} />;\n      case \"units\":\n        return <ManageCodingUnits codingjob={codingjob} />;\n      case \"task\":\n        return <ManageTask codingjob={codingjob} />;\n      case \"deploy\":\n        return <DeployCodingjob codingjob={codingjob} />;\n      default:\n        return null;\n    }\n  };\n  return (\n    <div style={{ margin: \"1em\" }}>\n      <Step.Group ordered unstackable size=\"tiny\" style={{ width: \"100%\", overflow: \"auto\" }}>\n        <Step\n          title=\"Codingjob\"\n          description={codingjob ? codingjob.name : \"none selected\"}\n          active={menuItem === \"codingjobs\"}\n          completed={codingjob !== null && codingjob != null}\n          onClick={(e, d) => {\n            setMenuItem(\"codingjobs\");\n          }}\n        />\n        <Step\n          title=\"Documents\"\n          description={nDocuments > 0 ? `${nDocuments} documents` : \"\"}\n          active={menuItem === \"documents\"}\n          completed={nDocuments > 0}\n          disabled={codingjob === null}\n          onClick={(e, d) => setMenuItem(\"documents\")}\n        />\n        <Step\n          title=\"Units\"\n          description={codingjob?.unitSettings?.n ? `${codingjob?.unitSettings?.n} units` : null}\n          active={menuItem === \"units\"}\n          completed={codingjob?.unitSettings?.n}\n          disabled={nDocuments === 0}\n          onClick={(e, d) => setMenuItem(\"units\")}\n        />\n        <Step\n          title=\"Task\"\n          description={codingjob?.taskSettings?.type || \"Define the task\"}\n          active={menuItem === \"task\"}\n          completed={codingjob?.taskSettings?.type}\n          disabled={!codingjob?.unitSettings?.n}\n          onClick={(e, d) => setMenuItem(\"task\")}\n        />\n        <Step\n          title=\"Deploy\"\n          description={\"Get (others) to work\"}\n          active={menuItem === \"deploy\"}\n          disabled={\n            codingjob === null || !codingjob?.unitSettings?.n || !codingjob?.taskSettings?.type\n          }\n          onClick={(e, d) => setMenuItem(\"deploy\")}\n        />\n      </Step.Group>\n\n      <Segment style={{ border: \"0\" }} attached=\"bottom\">\n        {renderSwitch(menuItem)}\n      </Segment>\n    </div>\n  );\n};\n\nexport default React.memo(CodingjobManager);\n","import React, { useState, useEffect } from \"react\";\nimport db from \"apis/dexie\";\nimport { Button } from \"semantic-ui-react\";\n\nimport { CSVDownloader } from \"react-papaparse\";\n\nconst DownloadAnnotations = ({ localJobServer }) => {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    switch (localJobServer.codebook.type) {\n      case \"annotate\":\n        formatAnnotateTaskResults(localJobServer, setData);\n        break;\n      case \"questions\":\n        formatQuestionsTaskResults(localJobServer, setData);\n        break;\n      default:\n        return null;\n    }\n  }, [localJobServer]);\n\n  console.log(localJobServer);\n  return (\n    <CSVDownloader\n      filename={`CSSannotator_${localJobServer.title}_${localJobServer.set}_${localJobServer.coderName}.json`}\n      data={data}\n      style={{ cursor: \"pointer\" }}\n    >\n      <Button\n        loading={data === null}\n        primary\n        content=\"Download results\"\n        icon=\"download\"\n        labelPosition=\"left\"\n        size=\"huge\"\n      />\n    </CSVDownloader>\n  );\n};\n\nconst formatAnnotateTaskResults = async (localJobServer, setData) => {\n  // annotate results are returned in long format\n};\n\nconst formatQuestionsTaskResults = async (localJobServer, setData) => {\n  // questions results are returned in wide format\n  const results = [];\n\n  // variables of annotations are formatted as Q[question index]_[question name]\n  // question index starts at 1, and spaces in question name are replaced with underscores\n  const variables = localJobServer.codebook.questions.map(\n    (question, i) => `Q${i + 1}_${question.name.replace(\" \", \"_\")}`\n  );\n\n  const unitMap = localJobServer.units.reduce((obj, unit) => {\n    obj[unit.unit_id] = unit;\n    return obj;\n  }, {});\n\n  const annotationsPerUnit = await db.getAllAnnotations(localJobServer.id);\n  for (let unitAnnotations of annotationsPerUnit) {\n    const annotations = unitAnnotations.annotations;\n    console.log(annotations);\n    const unit = unitMap[unitAnnotations.unit_id];\n    const result = {\n      document_id: unit.document_id,\n      unit_id: unit.unit_id,\n      ...unit.provenance,\n      offset: annotations[0].offset,\n      length: annotations[0].length,\n      section: annotations[0].section,\n      ...annotations[0].meta,\n    };\n\n    if (unit.meta) {\n      for (let key of Object.keys(unit.meta)) {\n        result[\"meta_\" + key] = unit.meta[key];\n      }\n    }\n\n    for (let variable of variables) {\n      const a = annotations.find((annotation) => annotation.variable === variable);\n      result[variable] = a == null ? null : a.value;\n    }\n    results.push(result);\n  }\n  setData(results);\n};\n\nexport default DownloadAnnotations;\n","import React, { useEffect, useState } from \"react\";\nimport { FullScreen } from \"react-full-screen\";\nimport { setFullScreenNode } from \"actions\";\nimport { useDispatch } from \"react-redux\";\n\n// This is due to a bug in react-full-screen\n// https://github.com/Semantic-Org/Semantic-UI-React/issues/4191\n\n// It's basically the workaround provided by layershifter, but using redux\n// to make the ref available to the (very deeply nested) popup that needs it\n\nconst FullScreenFix = ({ handle, children }) => {\n  return (\n    <FullScreen handle={handle}>\n      <DOMNodeProvider>\n        {(node) => {\n          return children;\n        }}\n      </DOMNodeProvider>\n      ;\n    </FullScreen>\n  );\n};\n\nconst DOMNodeProvider = ({ children }) => {\n  const [node, setNode] = useState(null);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(setFullScreenNode(node));\n    return () => {\n      dispatch(setFullScreenNode(null));\n    };\n  }, [node, dispatch]);\n\n  return (\n    <div className=\"dom-node-provider\" ref={setNode}>\n      {children(node)}\n    </div>\n  );\n};\n\nexport default FullScreenFix;\n","import React, { useState, useEffect } from \"react\";\nimport { useLocation, useHistory } from \"react-router\";\nimport { Icon, Grid, Modal, Button, Header } from \"semantic-ui-react\";\nimport { useFullScreenHandle } from \"react-full-screen\";\n\nimport DownloadAnnotations from \"./subcomponents/DownloadAnnotations\";\n\nimport FullScreenFix from \"./subcomponents/FullScreenFix\";\nimport IndexController from \"./subcomponents/IndexController\";\n\nimport QuestionTask from \"components/Annotator/QuestionTask\";\nimport AnnotateTask from \"components/Annotator/AnnotateTask\";\n\nconst AnnotatorScreen = ({ jobServer }) => {\n  const fsHandle = useFullScreenHandle();\n  const [unitIndex, setUnitIndex] = useState(0);\n  const [preparedUnit, setPreparedUnit] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    setUnitIndex(jobServer.progressIndex);\n  }, [jobServer, setUnitIndex]);\n\n  useEffect(() => {\n    if (!jobServer) return;\n    jobServer\n      .getUnit(unitIndex)\n      .then((unit) => {\n        setPreparedUnit({\n          jobServer,\n          unitId: unit.id,\n          ...unit.unit,\n        });\n      })\n      .catch((e) => {\n        if (e.response?.status === 404) {\n          alert(\"Could not get unit from server\");\n          setPreparedUnit(null);\n          // if (unitIndex !== null && unitIndex < jobServer.rules.n)\n          //   setUnitIndex((state) => state + 1);\n          console.log(e);\n        }\n      });\n  }, [unitIndex, jobServer, setUnitIndex, setPreparedUnit]);\n\n  let maxWidth = \"100%\";\n  let maxHeight = \"100%\";\n  // if (jobServer?.codebook?.type) {\n  //   if (jobServer?.codebook.type === \"questions\") [maxWidth, maxHeight] = [\"800px\", \"1000px\"];\n  //   if (jobServer?.codebook.type === \"annotate\") [maxWidth, maxHeight] = [\"2000px\", \"2000px\"];\n  // }\n\n  const renderTask = () => {\n    if (unitIndex === null) return <Finished jobServer={jobServer} />;\n    return <Task codebook={jobServer?.codebook} unit={preparedUnit} setUnitIndex={setUnitIndex} />;\n  };\n\n  return (\n    <FullScreenFix handle={fsHandle}>\n      <div\n        style={{\n          maxWidth,\n          maxHeight,\n          background: \"white\",\n          margin: \"0 auto\",\n          padding: \"0\",\n          height: \"100vh\",\n          border: \"1px solid white\",\n        }}\n      >\n        <AskFullScreenModal location={location} handle={fsHandle} />\n        <div style={{ height: \"50px\", padding: \"0\", position: \"relative\" }}>\n          <div style={{ width: \"85%\", paddingLeft: \"7.5%\" }}>\n            <IndexController\n              n={jobServer?.rules.n}\n              index={unitIndex}\n              setIndex={setUnitIndex}\n              canGoBack={jobServer?.rules.canGoBack}\n              canGoForward={jobServer?.rules.canGoForward}\n              quickKeyNext={jobServer?.codebook?.type === \"annotate\"}\n            />\n          </div>\n          <div>\n            <FullScreenButton handle={fsHandle} />\n            <ExitButton />\n          </div>\n        </div>\n        <div style={{ height: \"calc(100% - 50px)\", padding: \"0\" }}>{renderTask()}</div>\n      </div>\n    </FullScreenFix>\n  );\n};\n\nconst Finished = ({ jobServer }) => {\n  if (!jobServer) return null;\n\n  if (jobServer.where === \"remote\") {\n    return (\n      <Grid container centered verticalAlign=\"middle\" style={{ margin: \"0\", padding: \"0\" }}>\n        <Grid.Row style={{ marginTop: \"40vh\" }}>\n          <div>\n            <Icon name=\"flag checkered\" size=\"huge\" style={{ transform: \"scale(5)\" }} />\n          </div>\n        </Grid.Row>\n      </Grid>\n    );\n  } else {\n    return (\n      <Grid container centered verticalAlign=\"middle\" style={{ margin: \"0\", padding: \"0\" }}>\n        <Grid.Row style={{ marginTop: \"40vh\" }}>\n          <Grid.Column width={4}>\n            <Icon name=\"flag checkered\" size=\"huge\" style={{ transform: \"scale(1)\" }} />\n          </Grid.Column>\n          <Grid.Column width={8}>\n            <Header>You finished the codingjob!</Header>\n            <p>Please download your results and send them to whoever gave you this job. </p>\n            <DownloadAnnotations localJobServer={jobServer} />\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n};\n\nconst AskFullScreenModal = ({ location, handle }) => {\n  const [askFullscreen, setAskFullscreen] = useState(true);\n  useEffect(() => {\n    setAskFullscreen(true);\n  }, [location, setAskFullscreen]);\n\n  return (\n    <Modal open={askFullscreen}>\n      <Modal.Header>Fullscreen mode</Modal.Header>\n      <Modal.Content>\n        <p>\n          We recommend working in fullscreen, especially on mobile devices. You can always change\n          this with the button in the top-left corner\n        </p>\n        <div style={{ display: \"flex\", height: \"30vh\" }}>\n          <Button\n            primary\n            size=\"massive\"\n            onClick={() => {\n              if (!handle.active) handle.enter();\n              setAskFullscreen(false);\n            }}\n            style={{ flex: \"1 1 auto\" }}\n          >\n            Fullscreen\n          </Button>\n          <Button\n            secondary\n            size=\"massive\"\n            onClick={() => {\n              if (handle.active) handle.exit();\n              setAskFullscreen(false);\n            }}\n            style={{ flex: \"1 1 auto\" }}\n          >\n            Windowed\n          </Button>\n        </div>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nconst FullScreenButton = ({ handle }) => {\n  return (\n    <Icon.Group\n      size=\"big\"\n      style={{ padding: \"3px\", position: \"absolute\", top: \"0px\", left: \"2px\" }}\n    >\n      <Icon\n        link\n        name={handle.active ? \"compress\" : \"expand\"}\n        onClick={() => {\n          handle.active ? handle.exit() : handle.enter();\n        }}\n      />\n    </Icon.Group>\n  );\n};\n\nconst ExitButton = () => {\n  const history = useHistory();\n  return (\n    <Icon.Group size=\"big\" style={{ padding: \"3px\", position: \"absolute\", top: \"0px\", right: 0 }}>\n      <Icon link name=\"window close\" onClick={() => history.goBack()} />\n      <Icon corner=\"top right\" />\n    </Icon.Group>\n  );\n};\n\nconst Task = ({ codebook, unit, setUnitIndex }) => {\n  if (!codebook || !unit) return null;\n\n  const renderTaskPreview = (type) => {\n    switch (type) {\n      case \"questions\":\n        return <QuestionTask unit={unit} codebook={codebook} setUnitIndex={setUnitIndex} />;\n      case \"annotate\":\n        return <AnnotateTask unit={unit} codebook={codebook} setUnitIndex={setUnitIndex} />;\n      default:\n        return null;\n    }\n  };\n\n  if (!codebook?.type) return null;\n  return renderTaskPreview(codebook.type);\n};\n\nexport default AnnotatorScreen;\n","import axios from \"axios\";\nimport db from \"apis/dexie\";\n\n/**\n * Class for jobs hosted on a server\n */\nexport class JobServerRemote {\n  constructor(url, coderName) {\n    this.url = url;\n    this.coderName = coderName;\n    this.where = \"remote\";\n  }\n\n  async init() {\n    // needs to be called in order to fetch codebook/rules\n    let response;\n    try {\n      response = await axios.get(`${this.url}/codebook`);\n    } catch (e) {\n      this.success = false;\n      return;\n    }\n    this.success = true;\n    this.codebook = response.data;\n\n    // this should come from rules\n    this.rules = { n: 20, canGoBack: false, canGoForward: false };\n\n    // this should somehow be provided by amcat\n    this.progressIndex = 0;\n  }\n\n  async getUnit(i) {\n    //\n    const response = await axios.get(`${this.url}/unit?user=${this.coderName}`);\n    return response.data;\n    // data should be an object with url, id and unit, where unit is an object with at least text_fields,\n    // and if available annotations\n  }\n\n  postAnnotations(unit_id, data) {\n    axios.post(`${this.url}/unit/${unit_id}/annotation?user=${this.coderName}`, data);\n  }\n}\n\n/**\n * Class for jobs using local data in Indexed DB\n */\nexport class JobServerLocal {\n  constructor(id, coderName) {\n    this.id = id;\n    this.coderName = coderName;\n    this.where = \"local\";\n  }\n\n  async init() {\n    // needs to be called in order to fetch codebook/rules\n    let job = await db.idb.localJobs.get({ id: this.id });\n    if (!job) {\n      this.success = false;\n      return null;\n    }\n\n    this.success = true;\n    this.units = job.units;\n    this.codebook = job.codebook;\n    this.title = job.title;\n    this.set = job.set;\n    this.rules = { n: job.units.length, canGoBack: true, canGoForward: false };\n\n    this.progressIndex = job.progressIndex || 0;\n  }\n\n  async getUnit(i) {\n    if (i !== null) {\n      // on get unit, also update progress.\n      // progressindex is the index of the currently fetched unit.\n      await db.idb.localJobs\n        .where(\"id\")\n        .equals(this.id)\n        .modify({ progressIndex: Math.max(i, this.progressIndex), last_modified: new Date() });\n    }\n\n    const unit_id = this.units[i].unit_id;\n    let annotations = await db.getUnitAnnotations(this.id, unit_id);\n    annotations = annotations?.annotations || [];\n\n    return {\n      id: unit_id,\n      unit: { ...this.units[i], annotations },\n    };\n  }\n\n  async postAnnotations(unit_id, data) {\n    db.postAnnotations(this.id, unit_id, data);\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router\";\n\nimport AnnotatorScreen from \"components/Annotator/AnnotatorScreen\";\nimport { JobServerRemote, JobServerLocal } from \"components/Annotator/JobServerClass\";\nimport { useCookies } from \"react-cookie\";\nimport UserName from \"components/HeaderMenu/UserName\";\n\nconst Annotator = () => {\n  const location = useLocation();\n  const [jobServer, setJobServer] = useState(null);\n  const [cookies] = useCookies([\"name\"]);\n\n  useEffect(() => {\n    console.log(cookies.name);\n    if (!cookies.name) return;\n    if (location.search) {\n      const queries = parseQueryString(location);\n      if (queries?.url) {\n        // QR codes generated in CSS Manager replace colon with %colon%\n        // cleaner solution would probably be url shorteners\n        queries.url = queries.url.replace(\"%colon%\", \":\").replace(\"%25colon%25\", \":\");\n        createRemoteJobServer(queries.url, cookies, setJobServer);\n      }\n      if (queries?.id) createLocalJobServer(queries.id, cookies, setJobServer);\n    } else {\n      setJobServer(null);\n    }\n  }, [location, cookies, setJobServer]);\n\n  //if (!JobServer) return <TaskSelector />;\n  if (!cookies.name) return <UserName force={true} />;\n  if (!jobServer) return null;\n  return <AnnotatorScreen jobServer={jobServer} />;\n};\n\nconst createLocalJobServer = async (id, cookies, setJobServer) => {\n  const us = new JobServerLocal(id, cookies.name);\n  await us.init();\n  setJobServer(us);\n};\n\nconst createRemoteJobServer = async (url, cookies, setJobServer) => {\n  const us = new JobServerRemote(url, cookies.name);\n  await us.init();\n  setJobServer(us);\n};\n\nconst parseQueryString = (location) => {\n  const query = location.search.substring(1);\n  const parts = query.split(\"&\");\n  return parts.reduce((obj, part) => {\n    const [key, value] = part.split(\"=\");\n    obj[decodeURIComponent(key)] = decodeURIComponent(value);\n    return obj;\n  }, {});\n};\n\nexport default Annotator;\n","import db from \"apis/dexie\";\nimport SelectionTable from \"components/CodingjobManager/subcomponents/SelectionTable\";\nimport { useLiveQuery } from \"dexie-react-hooks\";\nimport React, { useEffect } from \"react\";\n\nconst tableColumns = [\n  {\n    Header: \"Title\",\n    accessor: \"title\",\n    headerClass: \"two wide\",\n  },\n  {\n    Header: \"Set\",\n    accessor: \"set\",\n    headerClass: \"two wide\",\n  },\n  // note that the progressIndex is the index of the highest fetched unit index, but since this\n  // starts at 0, it also represents how many units have been finished\n  {\n    Header: \"progress\",\n    accessor: \"progress\",\n    headerClass: \"two wide\",\n  },\n  {\n    Header: \"Last modified\",\n    accessor: \"last_modified_str\",\n    headerClass: \"four wide\",\n  },\n];\n\nconst LocalJobTable = ({ jobKey, setJobKey }) => {\n  const jobs = useLiveQuery(async () => {\n    let arr = [];\n    await db.idb.localJobs.each((row) => {\n      arr.push({\n        id: row.id,\n        last_modified: row.last_modified,\n        last_modified_str: row.last_modified.toString().slice(0, 24),\n        set: row.set,\n        progress: `${row.progressIndex || 0} / ${row.units.length}`,\n        title: row.title,\n      });\n    });\n    arr.sort((a, b) => {\n      return b.last_modified - a.last_modified;\n    });\n    return arr;\n  });\n\n  useEffect(() => {\n    if (!jobKey && jobs) {\n      setJobKey(jobs.length > 0 ? { ...jobs[0], ROW_ID: \"0\" } : null);\n    }\n  }, [jobKey, jobs, setJobKey]);\n\n  return (\n    <SelectionTable\n      columns={tableColumns}\n      data={jobs ? jobs : []}\n      selectedRow={jobKey}\n      setSelectedRow={setJobKey}\n      defaultSize={15}\n    />\n  );\n};\n\nexport default LocalJobTable;\n","import db from \"apis/dexie\";\nimport objectHash from \"object-hash\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { Button, Grid, Header } from \"semantic-ui-react\";\nimport TaskTable from \"./LocalJobTable\";\nimport JSZip from \"jszip\";\n\nconst LocalJobs = () => {\n  const history = useHistory();\n  const [jobKey, setJobKey] = useState(null);\n\n  const uploadFile = async (e) => {\n    const fileReader = new FileReader();\n    const fileblob = e.target.files[0];\n    const type = getExtension(fileblob.name);\n\n    if (type === \"json\") {\n      fileReader.readAsText(fileblob, \"UTF-8\");\n      fileReader.onload = (e) => {\n        const id = objectHash(e.target.result);\n        db.createLocalJob(JSON.parse(e.target.result), id);\n      };\n    }\n    if (type === \"zip\") {\n      let newZip = new JSZip();\n      const zipped = await newZip.loadAsync(fileblob);\n      zipped.forEach(async (relpath, file) => {\n        if (file.name.slice(0, 3) !== \"set\") return;\n        const content = await zipped.file(file.name).async(\"text\");\n        const id = objectHash(content);\n        db.createLocalJob(JSON.parse(content), id);\n      });\n    }\n  };\n\n  const setJobUrlQuery = async () => {\n    // set task.url as url query to open job in annotator\n    history.push(\"/annotator?id=\" + jobKey.id);\n  };\n\n  return (\n    <Grid centered stackable container style={{ marginTop: \"5em\" }}>\n      <Grid.Column style={{ textAlign: \"center\" }} width={8}>\n        <Header textAlign=\"center\" style={{ background: \"#1B1C1D\", color: \"white\" }}>\n          Read codingjob\n        </Header>\n\n        <input type=\"file\" accept=\".json,.zip\" onChange={uploadFile} />\n        <div>\n          <br />\n        </div>\n      </Grid.Column>\n      <Grid.Column width={8}>\n        <Header textAlign=\"center\" style={{ background: \"#1B1C1D\", color: \"white\" }}>\n          Your codingjobs\n        </Header>\n        <Button fluid primary disabled={!jobKey} onClick={setJobUrlQuery}>\n          Open selected codingjob\n        </Button>\n        <br />\n        <br />\n        <TaskTable jobKey={jobKey} setJobKey={setJobKey} />\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nconst getExtension = (filename) => {\n  const parts = filename.split(\".\");\n  return parts[parts.length - 1];\n};\n\nexport default LocalJobs;\n","import React from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport HeaderMenu from \"components/HeaderMenu/HeaderMenu\";\n\n// Main pages. Use below in items to include in header menu\nimport CodingjobManager from \"components/CodingjobManager/CodingjobManager\";\nimport Annotator from \"components/Annotator/Annotator\";\nimport LocalJobs from \"components/LocalJobs/LocalJobs\";\n\n// Change to add new components to the header\n// The first item will be the opening page after login\n// TODO: annotate, manage jobs, monitor jobs\nconst items = [\n  { label: \"Annotator\", path: \"/annotator\", Component: Annotator, menu: false },\n  { label: \"Jobs\", path: \"/jobs\", Component: LocalJobs, menu: true },\n  {\n    label: \"Codingjob manager\",\n    path: \"/manager\",\n    Component: CodingjobManager,\n    menu: true,\n  },\n];\n\nconst createRoutes = (items) => {\n  return items.map((item) => {\n    return <Route exact path={item.path} render={() => <item.Component />} />;\n  });\n};\n\nconst App = () => {\n  return (\n    <HashRouter basename=\"/\">\n      <HeaderMenu items={items}>\n        <Switch>\n          <Route exact path={\"/\"} render={() => <CodingjobManager />} />\n          {createRoutes(items)}\n        </Switch>\n      </HeaderMenu>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import { combineReducers } from \"redux\";\n\nconst eventsBlocked = (state = false, action) => {\n  switch (action.type) {\n    case \"BLOCK_EVENTS\":\n      return action.block;\n    default:\n      return state;\n  }\n};\n\nconst fullScreenNode = (state = null, action) => {\n  switch (action.type) {\n    case \"SET_FULL_SCREEN_NODE\":\n      return action.node;\n    default:\n      return state;\n  }\n};\n\nconst rootReducer = combineReducers({\n  eventsBlocked,\n  fullScreenNode,\n});\n\nexport default rootReducer;\n","import \"semantic-ui-css/semantic.min.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"App\";\nimport { createStore } from \"redux\";\nimport rootReducer from \"reducers\";\nimport { Provider } from \"react-redux\";\nimport { CookiesProvider } from \"react-cookie\";\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <CookiesProvider>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </CookiesProvider>\n  </React.StrictMode>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}